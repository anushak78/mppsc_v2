{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board-dashboard/board-dashboard.component.ts","webpack:///src/app/board-dashboard/board-dashboard.component.html","webpack:///src/app/board-master/model/board-master.model.ts","webpack:///src/app/candidate-master/candidate-master.component.ts","webpack:///src/app/candidate-master/candidate-master.component.html","webpack:///src/app/constant.ts","webpack:///src/app/dialogs/confirm/confirm.component.ts","webpack:///src/app/dialogs/confirm/confirm.component.html","webpack:///src/app/dialogs/message/message.component.ts","webpack:///src/app/dialogs/message/message.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.service.ts","webpack:///src/app/shared.module.ts","webpack:///src/app/utils/loader/loader.component.ts","webpack:///src/app/utils/loader/loader.component.html","webpack:///src/app/utils/loader/loader.service.ts","webpack:///src/app/vo-dashboard/vo-dashboard.component.ts","webpack:///src/app/vo-dashboard/vo-dashboard.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminDashboardComponent","router","appList","pageName","navigate","gotoPage","selector","templateUrl","styleUrls","routes","path","component","pathMatch","redirectTo","children","loadChildren","m","UserMasterModule","BoardMasterModule","GuestMasterModule","InterviewMasterModule","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","entryComponents","BoardDashboardComponent","boardData","BoardMaster","status","data","Map","boardName","loginId","noOfMembers","password","confirmPassword","u","CandidateMasterComponent","Roles","Titles","Status","ProjectTitle","ConfirmDialogComponent","dialog","message","callback","open","ConfirmDialog","template","dialogRef","console","log","flag","close","MessageDialogComponent","MessageDialog","projectTitle","LayoutComponent","role","sessionStorage","getItem","LoginComponent","authService","signInForm","user_id","required","valid","userId","controls","value","login","rel","setItem","user","currentUserValue","messageDlg","openDialog","getErrorMessage","submit","LoginService","http","username","post","toPromise","JSON","stringify","error","errorHandler","removeItem","httpErrorMessage","providedIn","SharedModule","LoaderComponent","loaderService","color","mode","isLoading","LoaderService","next","VoDashboardComponent","paginator","displayedColumns","name","board_name","table_data","toArray","templateRef","config","position","top","right","height","width","panelClass","filterValue","trim","toLowerCase","filter","applyFilter","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  appList = [];\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.appList = [\n      'User Master',\n      'Guest User Master',\n      'Board Master',\n      'Interview Master',\n      'Candidate Master'\n    ];\n  }\n\n  goto(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n}\n","<div class=\"container\">\n    <ng-container>\n        <a class=\"widget\" (click)=\"gotoPage('users')\">\n            <mat-card>\n                <mat-card-content>\n                    <button mat-menu-item>\n                        <span>User Master</span>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n        </a>\n    </ng-container>\n    <ng-container>\n        <a class=\"widget\" (click)=\"gotoPage('guest-users')\">\n            <mat-card>\n                <mat-card-content>\n                    <button mat-menu-item>\n                        <span>Guest User Master</span>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n        </a>\n    </ng-container>\n    <ng-container>\n        <a class=\"widget\" (click)=\"goto('boards')\">\n            <mat-card>\n                <mat-card-content>\n                    <button mat-menu-item>\n                        <span>Board Master</span>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n        </a>\n    </ng-container>\n    <ng-container disabled=\"true\">\n        <a class=\"widget\" style=\"opacity: 0.5\">\n            <mat-card>\n                <mat-card-content>\n                    <button mat-menu-item>\n                        <span>Interview Master</span>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n        </a>\n    </ng-container>\n    <ng-container disabled=\"true\">\n        <a class=\"widget\" style=\"opacity: 0.5\">\n            <mat-card>\n                <mat-card-content>\n                    <button mat-menu-item>\n                        <span>Candidate Master</span>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n        </a>\n    </ng-container>\n</div>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {AdminDashboardComponent} from './admin-dashboard/admin-dashboard.component';\nimport {LayoutComponent} from './layout/layout.component';\nimport {CandidateMasterComponent} from './candidate-master/candidate-master.component';\nimport {VoDashboardComponent} from './vo-dashboard/vo-dashboard.component';\nimport {BoardDashboardComponent} from './board-dashboard/board-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    pathMatch: 'full',\n    redirectTo: 'login'\n  },\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: 'admin-dashboard',\n        component: AdminDashboardComponent\n      },\n      {\n        path: '',\n        component: AdminDashboardComponent\n      },\n      {\n        path: 'users',\n        loadChildren: () => import('./user-master/user-master.module').then(\n          m => m.UserMasterModule\n        )\n      },\n      {\n        path: 'boards',\n        loadChildren: () => import('./board-master/board-master.module').then(\n          m => m.BoardMasterModule\n        )\n      },\n      {\n        path: 'guest-users',\n        loadChildren: () => import('./guest-master/guest-master.module').then(\n          m => m.GuestMasterModule\n        )\n      },\n      {\n        path: 'interview-master',\n        loadChildren: () => import('./interview-master/interview-master.module').then(\n          m => m.InterviewMasterModule\n        )\n      },\n      // {\n      //   path: 'interview-master',\n      //   component: InterviewMasterComponent\n      // },\n      {\n        path: 'candidate-master',\n        component: CandidateMasterComponent\n      },\n      {\n        path: 'vo-dashboard',\n        component: VoDashboardComponent\n      },\n      {\n        path: 'board-dashboard',\n        component: BoardDashboardComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mppsc';\n}\n","<router-outlet></router-outlet>","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LoginComponent} from './login/login.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {AdminDashboardComponent} from './admin-dashboard/admin-dashboard.component';\nimport {LayoutComponent} from './layout/layout.component';\nimport {CandidateMasterComponent} from './candidate-master/candidate-master.component';\nimport {VoDashboardComponent} from './vo-dashboard/vo-dashboard.component';\nimport {BoardDashboardComponent} from './board-dashboard/board-dashboard.component';\nimport {MessageDialog} from './dialogs/message/message.component';\nimport {ConfirmDialog} from './dialogs/confirm/confirm.component';\nimport {LoaderComponent} from './utils/loader/loader.component';\nimport {SharedModule} from './shared.module';\nimport {LoaderService} from './utils/loader/loader.service';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminDashboardComponent,\n    LayoutComponent,\n    CandidateMasterComponent,\n    VoDashboardComponent,\n    BoardDashboardComponent,\n    MessageDialog,\n    ConfirmDialog,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatMenuModule,\n    SharedModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatToolbarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatDatepickerModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatRadioModule\n  ],\n  providers: [\n    LoaderService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MessageDialog,\n    ConfirmDialog,\n  ]\n})\nexport class AppModule {\n}\n","import {Component, OnInit, ViewChildren, QueryList, TemplateRef, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Router} from '@angular/router';\nimport {BoardMaster} from '../board-master/model/board-master.model';\nimport {MessageDialogComponent} from '../dialogs/message/message.component';\n\n@Component({\n  selector: 'app-board-dashboard',\n  templateUrl: './board-dashboard.component.html',\n  styleUrls: ['./board-dashboard.component.scss']\n})\nexport class BoardDashboardComponent implements OnInit {\n\n  boardData = new BoardMaster();\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n}\n","<div class=\"box-container\">\n    <div class=\"grid-3\">\n        <div>\n            <h2 class=\"mat-h2\">Waiting List</h2>\n        </div>\n        <div>\n            <mat-form-field>\n                <mat-label>Search</mat-label>\n                <input type=\"text\" matInput>\n                <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n        </div>\n        <div class=\"right\">\n        </div>\n    </div>\n    <mat-table #table>\n\n<!--        <ng-container *ngFor=\"let disCol of displayedColumns; let colIndex = index\" matColumnDef=\"{{disCol}}\">-->\n<!--            <ng-container *ngIf=\"disCol != 'edit'\">-->\n<!--                <mat-header-cell *matHeaderCellDef>{{disCol}}</mat-header-cell>-->\n<!--            </ng-container>-->\n<!--            <mat-cell *matCellDef=\"let element \" style=\"cursor: default;\"-->\n<!--                (click)=\"openDialogWithTemplateRef(candModal)\">-->\n<!--                <span *ngIf=\"disCol != 'status' && disCol != 'edit'\">{{element[disCol]}}</span>-->\n<!--                <span *ngIf=\"disCol == 'status'\">{{element[disCol] || 'Active'}}</span>-->\n<!--            </mat-cell>-->\n<!--        </ng-container>-->\n\n<!--        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>-->\n<!--        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>-->\n    </mat-table>\n\n    <mat-paginator #paginator [pageSizeOptions]=\"[10, 20]\" showFirstLastButtons></mat-paginator>\n\n</div>\n\n<ng-template #candModal>\n    <div class=\"grid-2\">\n        <h2 matDialogTitle>Candidate Data</h2>\n        <a class=\"right\">\n            <mat-icon matDialogClose style=\"font-size: medium!important;\">close</mat-icon>\n        </a>\n    </div>\n    <hr>\n    <mat-dialog-content>\n        <div class=\"right\">\n            <button mat-raised-button color=\"warn\">Mark Absent</button>\n        </div>\n        <div>\n            <div class=\"field\">\n                <mat-form-field>\n                    <input type=\"number\" matInput name=\"marks\" placeholder=\"Enter Marks\">\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n    </mat-dialog-content>\n    <hr>\n    <mat-dialog-actions align=\"center\">\n        <button mat-raised-button color=\"primary\">Interview Done</button>\n        <button mat-raised-button style=\"background-color: green!important;color: whitesmoke;\">Submit</button>\n    </mat-dialog-actions>\n</ng-template>\n","export class BoardMaster {\n  id: number;\n  boardName: string;\n  noOfMembers: number;\n  loginId: string;\n  password: string;\n  confirmPassword: string;\n  status = 1;\n\n  static fromJson(data: Map<string, any>): BoardMaster {\n    const u: BoardMaster = new BoardMaster();\n    u.id = data['id'];\n    u.boardName = data['board_name'];\n    u.noOfMembers = data['no_of_members'];\n    u.loginId = data['login_id'];\n    u.status = data['status'];\n    return u;\n  }\n\n  toJSON(): Map<string, any> {\n    const data: Map<string, any> = new Map<string, any>();\n    data['id'] = this.id;\n    data['board_name'] = this.boardName;\n    data['login_id'] = this.loginId;\n    data['no_of_members'] = this.noOfMembers;\n    data['status'] = this.status;\n    data['password'] = this.password;\n    data['confirm_password'] = this.confirmPassword;\n    return data;\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-candidate-master',\n  templateUrl: './candidate-master.component.html',\n  styleUrls: ['./candidate-master.component.scss']\n})\nexport class CandidateMasterComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n}\n","<div class=\"box-container\">\n    <div class=\"grid-2\">\n        <h2 class=\"mat-h2\">Candidate Master</h2>\n        <div class=\"right\">\n            <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\">Back</button>\n        </div>\n    </div>\n    <div>\n        <ng-container>\n            <a class=\"widget\">\n                <mat-card>\n                    <mat-card-content>\n                        <button mat-menu-item>\n                            <span>Upload</span>\n                        </button>\n                    </mat-card-content>\n                </mat-card>\n            </a>\n        </ng-container>\n        <ng-container>\n            <a class=\"widget\">\n                <mat-card>\n                    <mat-card-content>\n                        <button mat-menu-item>\n                            <span>View</span>\n                        </button>\n                    </mat-card-content>\n                </mat-card>\n            </a>\n        </ng-container>\n    </div>\n</div>","export const Roles = {\n  1: 'Board Chairman',\n  2: 'Chairman',\n  3: 'Verification Officer'\n};\nexport const Titles = {\n  1: 'Mr.',\n  2: 'Mrs.',\n  3: 'Miss',\n  4: 'Dr.',\n};\nexport const Status = {\n  1: 'Active',\n  0: 'Inactive'\n};\n\nexport const ProjectTitle = 'Interview Management System';\n","// Copyright (C) 2019-2020 NSEIT Limited, Mumbai. All rights reserved.\n//\n// This program and the accompanying materials are made available\n// under the terms described in the LICENSE file which accompanies\n// this distribution. If the LICENSE file was not attached to this\n// distribution or for further clarifications, please contact\n// legal@nseit.com.\nimport {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog,\n        MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  template: '<div></div>'\n})\nexport class ConfirmDialogComponent {\n  constructor(public dialog: MatDialog) {\n  }\n\n  openDialog(title: string, message: string, callback: Function) {\n    this.dialog.open(ConfirmDialog, {\n      data: {\n        title,\n        message,\n        callback\n      }\n    });\n  }\n}\n\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: 'confirm.component.html',\n})\nexport class ConfirmDialog {\n  constructor(public dialogRef: MatDialogRef<ConfirmDialog>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    console.log(this.data);\n  }\n\n  close(flag: boolean) {\n    this.dialogRef.close();\n    this.data.callback(flag);\n  }\n}\n","<h2 mat-dialog-title>{{data.title}}</h2>\n<div mat-dialog-content [innerHTML]=\"data.message\">\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"close(true)\">Yes</button>\n  <button mat-button (click)=\"close(false)\">No</button>\n</div>\n","// Copyright (C) 2019-2020 NSEIT Limited, Mumbai. All rights reserved.\n//\n// This program and the accompanying materials are made available\n// under the terms described in the LICENSE file which accompanies\n// this distribution. If the LICENSE file was not attached to this\n// distribution or for further clarifications, please contact\n// legal@nseit.com.\nimport {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ProjectTitle} from \"../../constant\";\n\n@Component({\n  selector: 'app-message-dialog',\n  template: '<div></div>'\n})\nexport class MessageDialogComponent {\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  openDialog(message: string) {\n    this.dialog.open(MessageDialog, {\n      data: {\n        message\n      }\n    });\n  }\n}\n\n\n@Component({\n  selector: 'app-message',\n  templateUrl: 'message.component.html',\n})\nexport class MessageDialog {\n\n  projectTitle = ProjectTitle;\n\n  constructor(public dialogRef: MatDialogRef<MessageDialog>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>{{projectTitle}}</h2>\n<div mat-dialog-content [innerHTML]=\"data.message\"></div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"close()\">Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  role;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.role = sessionStorage.getItem('role')\n    if (this.role == 0) {\n      this.role = 'Admin'\n    }\n    if (this.role == 1) {\n      this.role = 'Board'\n    }\n    if (this.role == 2) {\n      this.role = 'Verification Officer'\n    }\n  }\n  \n  logout() {\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n\n}\n","<mat-drawer-container class=\"tp-container\">\n    <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n            <div class=\"header-grid\">\n                <div class=\"sub-header-grid\">\n                    <div>\n                        <span class=\"header-title\">MPPSC\n                        </span>\n                    </div>\n                    <div style=\"text-align: right\">\n                        <button mat-button [matMenuTriggerFor]=\"menu\" class=\"right-align\">\n                            <span>{{role}}</span>\n                            <mat-icon>arrow_drop_down</mat-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" aligns=\"end\">\n                            <button mat-menu-item (click)=\"gotoPage('login')\">\n                                <mat-icon>remove_circle</mat-icon>\n                                <span>Logout</span>\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </mat-toolbar-row>\n    </mat-toolbar>\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</mat-drawer-container>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {LoginService} from './login.service';\nimport {MessageDialogComponent} from '../dialogs/message/message.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  signInForm = new FormGroup({\n    user_id: new FormControl('', [\n      Validators.required,\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n    ]),\n    role: new FormControl(null, [\n      Validators.required,\n    ])\n  });\n\n  constructor(private router: Router,\n              private authService: LoginService) {\n  }\n\n  ngOnInit() {\n  }\n\n  canSubmit(): boolean {\n    return this.signInForm.valid;\n  }\n\n  async submit() {\n    const userId = this.signInForm.controls['user_id'].value;\n    const password = this.signInForm.controls['password'].value;\n    const role = this.signInForm.controls['role'].value;\n    const rel = await this.authService.login(userId, password, role);\n    if (rel) {\n      sessionStorage.setItem('role', role);\n      const user = this.authService.currentUserValue;\n      console.log(user);\n      if (user['authenticated'] === true) {\n        if (role === 0) {\n          this.router.navigate(['admin-dashboard']);\n        }\n        if (role === 4) {\n          this.router.navigate(['board-dashboard']);\n        }\n        if (role === 3) {\n          this.router.navigate(['vo-dashboard']);\n        }\n      } else {\n        this.messageDlg.openDialog('Invalid credentials!!');\n      }\n    } else {\n      this.messageDlg.openDialog(this.authService.getErrorMessage);\n    }\n  }\n}\n","<mat-expansion-panel expanded=\"true\" hideToggle=\"true\" disabled=\"true\">\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      Sign In\n    </mat-panel-title>\n  </mat-expansion-panel-header>\n  <form [formGroup]=\"signInForm\" (keyup.enter)=\"submit()\">\n    <div class=\"field\">\n      <mat-form-field>\n        <input matInput type=\"text\" name=\"user_id\" formControlName=\"user_id\" placeholder=\"Enter user id\" required>\n      </mat-form-field>\n    </div>\n    <div class=\"field\">\n      <mat-form-field>\n        <input matInput appBlockCopyPaste type=\"password\" formControlName=\"password\" name=\"password\"\n               placeholder=\"Enter Password\" required>\n      </mat-form-field>\n    </div>\n    <div class=\"field\">\n      <mat-form-field>\n        <mat-label>Select Role</mat-label>\n        <mat-select formControlName=\"role\" name=\"role\">\n          <mat-option [value]=\"0\">\n            Admin\n          </mat-option>\n          <mat-option [value]=\"4\">\n            Board\n          </mat-option>\n          <mat-option [value]=\"3\">\n            Verification Officer\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </form>\n  <div class=\"button\">\n    <button [disabled]=\"!canSubmit()\" (click)=\"submit()\" mat-raised-button color=\"primary\">Sign In\n    </button>\n  </div>\n</mat-expansion-panel>\n<app-message-dialog #messageDlg></app-message-dialog>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {User} from './models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpErrorMessage: string;\n  private user;\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  constructor(private http: HttpClient) {\n  }\n\n  public get currentUserValue(): User {\n    return this.user;\n  }\n\n  async login(username: string, password: string, role: Number) {\n    return this.http.post('http://0.0.0.0:6543/ui/login', {login: username, password: password, role: role})\n      .toPromise().then((user => {\n        console.log(user);\n        sessionStorage.setItem('currentUser', JSON.stringify(user));\n        this.user = user; \n        return true;\n      })).catch((error: HttpErrorResponse) => {\n        console.log(error);\n        this.errorHandler(error);\n        return false;\n      });\n  }\n\n  logout() {\n    sessionStorage.removeItem('currentUser');\n  }\n\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n","/**\n * Created by krishna on 26/2/20.\n */\n// Copyright (C) 2019-2020 NSEIT Limited, Mumbai. All rights reserved.\n//\n// This program and the accompanying materials are made available\n// under the terms described in the LICENSE file which accompanies\n// this distribution. If the LICENSE file was not attached to this\n// distribution or for further clarifications, please contact\n// legal@nseit.com.\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  MessageDialogComponent\n} from './dialogs/message/message.component';\nimport {ConfirmDialogComponent} from './dialogs/confirm/confirm.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    MessageDialogComponent,\n    ConfirmDialogComponent\n  ],\n  exports: [\n    MessageDialogComponent,\n    ConfirmDialogComponent\n  ]\n})\nexport class SharedModule {\n}\n","// Copyright (C) 2019-2020 NSEIT Limited, Mumbai. All rights reserved.\n//\n// This program and the accompanying materials are made available\n// under the terms described in the LICENSE file which accompanies\n// this distribution. If the LICENSE file was not attached to this\n// distribution or for further clarifications, please contact\n// legal@nseit.com.\n\nimport {Component, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {LoaderService} from './loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  color = 'primary';\n  mode = 'indeterminate';\n  value = 50;\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\n\n  constructor(private loaderService: LoaderService) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"isLoading | async\" class=\"overlay\">\n  <mat-progress-spinner class=\"spinner\" [color]=\"color\"\n                        [mode]=\"mode\" [value]=\"value\">\n  </mat-progress-spinner>\n</div>\n","// Copyright (C) 2019-2020 NSEIT Limited, Mumbai. All rights reserved.\n//\n// This program and the accompanying materials are made available\n// under the terms described in the LICENSE file which accompanies\n// this distribution. If the LICENSE file was not attached to this\n// distribution or for further clarifications, please contact\n// legal@nseit.com.\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable()\nexport class LoaderService {\n  isLoading = new Subject<boolean>();\n\n  show() {\n    this.isLoading.next(true);\n  }\n\n  hide() {\n    this.isLoading.next(false);\n  }\n}\n","import {Component, OnInit, ViewChildren, QueryList, TemplateRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-vo-dashboard',\n  templateUrl: './vo-dashboard.component.html',\n  styleUrls: ['./vo-dashboard.component.scss']\n})\nexport class VoDashboardComponent implements OnInit {\n\n  displayedColumns: string[];\n  table_data;\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\n  constructor(private router: Router,\n    private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.displayedColumns = ['id', 'name', 'board_name', 'status']\n    let data = []\n    data = [\n      {id: '123', name: 'abc', board_name: 'some data', status: null},\n      {id: '456', name: 'def', board_name: 'some data', status: null},\n      {id: '789', name: 'ghi', board_name: 'some data', status: null},\n      {id: '123', name: 'abc', board_name: 'some data', status: null},\n      {id: '456', name: 'def', board_name: 'some data', status: null},\n      {id: '789', name: 'ghi', board_name: 'some data', status: null}                                                                                                                                                        \n    ]\n    this.table_data = new MatTableDataSource(data)\n  }\n\n  ngAfterViewInit() {\n    this.table_data.paginator = this.paginator.toArray()[0];\n  }\n\n  openDialogWithTemplateRef(templateRef: TemplateRef<any>) {\n    let config = {\n      position: {\n        top: '0px',\n        right: '0px'\n      },\n      height: '100%',\n      width: '80%',\n      panelClass: 'full-screen-modal',\n    };\n    this.dialog.open(templateRef, config)\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.table_data.filter = filterValue;\n  }\n\n}\n","<div class=\"box-container\">\n    <div class=\"grid-3\">\n        <div>\n            <h2 class=\"mat-h2\">Candidate List</h2>\n        </div>\n        <div>\n            <mat-form-field>\n                <mat-label>Search</mat-label>\n                <input type=\"text\" matInput (keyup)=\"applyFilter($event.target.value)\">\n                <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n        </div>\n        <div class=\"right\">\n        </div>\n    </div>\n    <mat-table #table [dataSource]=\"table_data\">\n\n        <ng-container *ngFor=\"let disCol of displayedColumns; let colIndex = index\" matColumnDef=\"{{disCol}}\">\n            <ng-container *ngIf=\"disCol != 'edit'\">\n                <mat-header-cell *matHeaderCellDef>{{disCol}}</mat-header-cell>\n            </ng-container>\n            <mat-cell *matCellDef=\"let element \" style=\"cursor: default;\"\n                (click)=\"openDialogWithTemplateRef(candModal)\">\n                <span *ngIf=\"disCol != 'status' && disCol != 'edit'\">{{element[disCol]}}</span>\n                <span *ngIf=\"disCol == 'status'\">{{element[disCol] || 'Active'}}</span>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n\n    <mat-paginator #paginator [pageSizeOptions]=\"[10, 20]\" showFirstLastButtons></mat-paginator>\n\n</div>\n\n<ng-template #candModal>\n    <div class=\"grid-2\">\n        <h2 matDialogTitle>Candidate Data</h2>\n        <a class=\"right\">\n            <mat-icon matDialogClose style=\"font-size: medium!important;\">close</mat-icon>\n        </a>\n    </div>\n    <hr>\n    <mat-dialog-content>\n        <div class=\"right\">\n            <button mat-raised-button color=\"warn\">Mark Absent</button>\n        </div>\n        <div>\n            Document data\n        </div>\n    </mat-dialog-content>\n    <hr>\n    <mat-dialog-actions align=\"center\">\n        <button mat-raised-button style=\"background-color: green!important;color: whitesmoke;\">Verify</button>\n    </mat-dialog-actions>\n</ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}