{"version":3,"sources":["webpack:///src/app/board-master/add-board/add-board.component.ts","webpack:///src/app/board-master/add-board/add-board.component.html","webpack:///src/app/board-master/board-master-routing.module.ts","webpack:///src/app/board-master/board-master.component.html","webpack:///src/app/board-master/board-master.component.ts","webpack:///src/app/board-master/board-master.module.ts","webpack:///src/app/board-master/board-master.service.ts"],"names":["AddBoardComponent","boardMasterService","router","route","boardMaster","snapshot","params","boardId","undefined","activity","loadBoardDetails","getBoardDetails","rel","getBoardData","messageDlg","openDialog","getErrorMessage","confirmDlg","boardName","onSubmit","bind","flag","editBoard","addBoard","gotoPage","pageName","navigate","openAddBoardConfirmation","selector","templateUrl","styleUrls","routes","path","component","BoardMasterRoutingModule","forChild","imports","exports","BoardMasterComponent","boardList","status","loadData","fetchBoardList","getBoardList","alert","id","u","openDeleteBoard2","openDeleteBoard3","onDeleteBoard","deleteBoardData","BoardMasterModule","declarations","BoardMasterService","http","httpErrorMessage","board","get","toPromise","then","response","result","push","fromJson","console","log","error","errorHandler","post","toJSON","boardDetails","providedIn"],"mappings":"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","file":"board-master-board-master-module-es5.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BoardMasterService} from '../board-master.service';\nimport {BoardMaster} from '../model/board-master.model';\nimport {MessageDialogComponent} from '../../dialogs/message/message.component';\nimport {ConfirmDialogComponent} from '../../dialogs/confirm/confirm.component';\n\n@Component({\n  selector: 'app-add-board',\n  templateUrl: './add-board.component.html',\n  styleUrls: ['./add-board.component.scss']\n})\nexport class AddBoardComponent implements OnInit {\n  boardMaster = new BoardMaster();\n  activity: string;\n  boardId: number;\n  @ViewChild('confirmDlg', {static: false})\n  confirmDlg: ConfirmDialogComponent;\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  constructor(private boardMasterService: BoardMasterService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.params.boardId !== undefined) {\n      this.activity = 'Edit';\n      this.boardId = this.route.snapshot.params.boardId;\n      await this.loadBoardDetails();\n    } else {\n      this.activity = 'Add';\n    }\n  }\n\n  async loadBoardDetails() {\n    const rel = await this.boardMasterService.getBoardDetails(this.route.snapshot.params.boardId);\n    if (rel) {\n      this.boardMaster = this.boardMasterService.getBoardData;\n    } else {\n      this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n    }\n  }\n\n  async openAddBoardConfirmation() {\n    this.confirmDlg.openDialog('Add Board',\n      `Do you really want to add this board <b>${this.boardMaster.boardName}</b>?`,\n      await this.onSubmit.bind(this));\n  }\n\n  async onSubmit(flag: boolean) {\n    if (flag) {\n      let rel;\n      if (this.activity === 'Edit') {\n        rel = await this.boardMasterService.editBoard(this.boardMaster);\n      } else {\n        rel = await this.boardMasterService.addBoard(this.boardMaster);\n      }\n      if (rel) {\n        this.gotoPage('boards');\n      } else {\n        this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n      }\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n}\n","<div class=\"box-container\">\n  <div class=\"grid-2\">\n    <div>\n      <h2 matDialogTitle>{{activity}} Board</h2>\n    </div>\n    <div>\n      <div class=\"right\">\n        <button mat-raised-button color=\"primary\" (click)=\"gotoPage('boards')\"\n                style=\"margin-left: 10px;\">Back\n        </button>\n      </div>\n    </div>\n  </div>\n  <hr>\n  <div>\n    <form #f=\"ngForm\" (ngSubmit)=\"f.form.valid\">\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.boardName\" maxlength=\"100\" type=\"text\" name=\"board_name\"\n                 placeholder=\"Enter Board Name\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.noOfMembers\" maxlength=\"3\" type=\"number\" name=\"no_of_members\"\n                 placeholder=\"Enter Number of Members\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.loginId\" maxlength=\"15\" minlength=\"10\" type=\"text\" name=\"boardId\"\n                 placeholder=\"Enter Login ID\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput appBlockCopyPaste [(ngModel)]=\"boardMaster.password\" maxlength=\"15\" minlength=\"8\" type=\"password\" name=\"password\"\n                 placeholder=\"Enter Password\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput appBlockCopyPaste [(ngModel)]=\"boardMaster.confirmPassword\" type=\"password\" maxlength=\"15\" minlength=\"8\"\n                 name=\"confirm_password\" placeholder=\"Enter Confirm Password\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-radio-group [(ngModel)]=\"boardMaster.status\" name=\"status\">\n          <mat-radio-button class=\"margin-left\" [value]=\"1\">\n            Active\n          </mat-radio-button>\n          <mat-radio-button class=\"margin-left\" [value]=\"0\">\n            Inactive\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </form>\n    <div style=\"margin-top: 10px\">\n      <button mat-raised-button style=\"background-color: green!important;color: whitesmoke;\"\n              (click)=\"openAddBoardConfirmation()\">{{activity}}\n        Board\n      </button>\n    </div>\n  </div>\n</div>\n\n<app-message-dialog #messageDlg></app-message-dialog>\n<app-confirm-dialog #confirmDlg></app-confirm-dialog>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddBoardComponent } from './add-board/add-board.component';\nimport { BoardMasterComponent } from './board-master.component';\nimport { BoardMasterModule } from './board-master.module';\n\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: BoardMasterComponent \n  },\n  {\n    path:'add-board',\n    component: AddBoardComponent \n  },\n  {\n    path: 'add-board/:boardId',\n    component: AddBoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardMasterRoutingModule { }\n","<div class=\"box-container\">\n  <div class=\"grid-2\">\n    <div>\n      <h2 class=\"mat-h2\">Board List</h2>\n    </div>\n    <div class=\"right\">\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('boards/add-board')\">Add Board</button>\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\"\n              style=\"margin-left: 10px;\">Back\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"boardList.length > 0\">\n    <div class=\"grid-header grid\">\n      <div class=\"sub-grid bold-head\">\n        <div>Board Name</div>\n        <div>Board ID</div>\n        <div>No Of Members</div>\n        <div>Status</div>\n      </div>\n    </div>\n    <div class=\"grid\" *ngFor=\"let b of boardList;\">\n      <div class=\"sub-grid\" matTooltip=\"Details\">\n        <div>{{b.boardName}}</div>\n        <div>{{b.loginId}}</div>\n        <div>{{b.noOfMembers}}</div>\n        <div>{{status[b.status]}}</div>\n      </div>\n      <div class=\"icon-column\">\n        <mat-icon (click)=\"updateBoard(b.id)\" matTooltip=\"Edit\">\n          edit\n        </mat-icon>\n      </div>\n      <div class=\"icon-column\">\n        <mat-icon matTooltip=\"Delete\" (click)=\"openDeleteBoard(b)\">\n          delete\n        </mat-icon>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"boardList.length == 0\">\n    <div class=\"no-data\">\n      Currently, there are no board list defined\n    </div>\n  </ng-container>\n</div>\n\n<app-message-dialog #messageDlg></app-message-dialog>\n<app-confirm-dialog #confirmDlg></app-confirm-dialog>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {BoardMasterService} from './board-master.service';\nimport {BoardMaster} from './model/board-master.model';\nimport {GuestUserMaster} from \"../guest-master/model/GuestUserMaster\";\nimport {ConfirmDialogComponent} from \"../dialogs/confirm/confirm.component\";\nimport {MessageDialogComponent} from \"../dialogs/message/message.component\";\nimport {Status} from \"../constant\";\n\n@Component({\n  selector: 'app-board-master',\n  templateUrl: './board-master.component.html',\n  styleUrls: ['./board-master.component.scss']\n})\nexport class BoardMasterComponent implements OnInit {\n\n  boardList: BoardMaster[] = [];\n  boardId: number;\n  boardName: string;\n  status = Status;\n  @ViewChild('confirmDlg', {static: false})\n  confirmDlg: ConfirmDialogComponent;\n\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  constructor(private router: Router,\n              private boardMasterService: BoardMasterService) {\n  }\n\n  async ngOnInit() {\n    await this.loadData();\n  }\n\n  async loadData() {\n    const rel = await this.boardMasterService.fetchBoardList();\n    if (rel) {\n      this.boardList = this.boardMasterService.getBoardList;\n    } else {\n      alert(this.boardMasterService.getErrorMessage);\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n\n  updateBoard(id: number) {\n    this.router.navigate([`boards/add-board/${id}`]);\n  }\n\n  async openDeleteBoard(u: BoardMaster) {\n    this.boardId = u.id;\n    this.boardName = u.boardName;\n    this.confirmDlg.openDialog('Delete board',\n      `Confirmation 1: Do you really want to delete user <b>${this.boardName}</b>?`,\n      await this.openDeleteBoard2.bind(this));\n  }\n\n  async openDeleteBoard2(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete board',\n        `Confirmation 2: Do you really want to delete user <b>${this.boardName}</b>?`,\n        await this.openDeleteBoard3.bind(this));\n    }\n  }\n\n  async openDeleteBoard3(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete board',\n        `Confirmation 3: Do you really want to delete user <b>${this.boardName}</b>?`,\n        await this.onDeleteBoard.bind(this));\n    }\n  }\n\n  async onDeleteBoard(flag: boolean) {\n    if (flag) {\n      const rel = await this.boardMasterService.deleteBoardData(this.boardId);\n      if (rel) {\n        this.loadData();\n      } else {\n        this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n      }\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BoardMasterRoutingModule} from './board-master-routing.module';\nimport {AddBoardComponent} from './add-board/add-board.component';\nimport {BoardMasterComponent} from './board-master.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {SharedModule} from '../shared.module';\n\n\n@NgModule({\n  declarations: [\n    BoardMasterComponent,\n    AddBoardComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BoardMasterRoutingModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatProgressBarModule,\n    MatPaginatorModule\n  ]\n})\nexport class BoardMasterModule {\n}\n","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport * as apiUrl from '../apiUrls';\nimport {BoardMaster} from './model/board-master.model';\nimport {GuestUserMaster} from \"../guest-master/model/GuestUserMaster\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardMasterService {\n\n  private httpErrorMessage = '';\n  board: BoardMaster[] = [];\n  boardDetails: BoardMaster;\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  get getBoardList(): BoardMaster[] {\n    return this.board;\n  }\n\n  get getBoardData(): BoardMaster {\n    return this.boardDetails;\n  }\n\n  constructor(private http: HttpClient) {\n  }\n\n  async fetchBoardList(): Promise<boolean> {\n    return await this.http.get(\n      apiUrl.getApiBoardMastercollectionEndPoint).toPromise()\n      .then((response) => {\n        const result = response['data'];\n        this.board = [];\n        for (let u of result) {\n          this.board.push(BoardMaster.fromJson(u));\n        }\n        console.log(this.board);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async addBoard(board: BoardMaster) {\n    return await this.http.post(\n      apiUrl.getApiAddBoardMastercollectionEndPoint, board.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async editBoard(board: BoardMaster) {\n    return await this.http.post(\n      apiUrl.getApiEditBoardMastercollectionEndPoint, board.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async getBoardDetails(boardId: number): Promise<boolean> {\n    return await this.http.post(\n      apiUrl.getApiDetailsBoardUserMastercollectionEndPoint(boardId), {}\n    ).toPromise()\n      .then((response) => {\n        this.boardDetails = BoardMaster.fromJson(response['data']);\n        console.log(this.boardDetails);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async deleteBoardData(boardId: number): Promise<boolean> {\n    return await this.http.post(\n      apiUrl.getApiDeleteBoardUserMastercollectionEndPoint(boardId), {}\n    ).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = ' Board Data deleted';\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n"]}