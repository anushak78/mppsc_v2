{"version":3,"sources":["./src/app/interview-master/add-interview/add-interview.component.ts","./src/app/interview-master/add-interview/add-interview.component.html","./src/app/interview-master/interview-master-routing.module.ts","./src/app/interview-master/interview-master.component.ts","./src/app/interview-master/interview-master.component.html","./src/app/interview-master/interview-master.module.ts","./src/app/interview-master/interview-master.service.ts","./src/app/interview-master/model/interview-master.model.ts"],"names":[],"mappings":"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","file":"interview-master-interview-master-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Router } from '@angular/router';\nimport { InterviewMasterService } from '../interview-master.service';\nimport { InterviewMaster } from '../model/interview-master.model';\n\n@Component({\n  selector: 'app-add-interview',\n  templateUrl: './add-interview.component.html',\n  styleUrls: ['./add-interview.component.scss']\n})\nexport class AddInterviewComponent implements OnInit {\n  interviewMaster = new InterviewMaster();\n\n  tabIndex = 0\n  Officer = [{ name: 'Nseit' }];\n  board = [{ name: 'A1' }];\n  chairman = [{ name: 'A1' }]\n  interview: FormGroup;\n  //addInterview: FormGroup;\n  constructor(private InterviewMasterService: InterviewMasterService,\n    private router: Router,\n    private fb: FormBuilder) { }\n\n  addInterview = new FormGroup({\n    interview_id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    notification_no: new FormControl('', [Validators.required]),\n    status: new FormControl('yes', [Validators.required]),\n  })\n\n  ngOnInit(): void {\n    this.interview = this.fb.group({\n      Details: this.fb.group({\n        interview_id: ['', [Validators.required]],\n        interview_name: ['', [Validators.required]],\n        notification: ['', [Validators.required]],\n        status: ['yes', [Validators.required]],\n      }),\n      dates: this.fb.group({\n        fromDate: ['', [Validators.required]],\n        toDate: ['', [Validators.required]]\n      }),\n      marks: this.fb.group({\n        unreserved_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        unreserved_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        EWS_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        EWS_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        OBC_NCL_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        OBC_NCL_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        SC_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        SC_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        ST_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        ST_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      }),\n      verification: this.fb.group({\n        verfication_officer: ['', [Validators.required]],\n        interviewDatesOfficer: ['', [Validators.required]]\n      }),\n      board: this.fb.group({\n        boardName: ['', [Validators.required]],\n        interviewDatesBoard: ['', [Validators.required]]\n      }),\n      chairman: this.fb.group({\n        boardChairman: ['', [Validators.required]],\n        member: ['', [Validators.required]],\n      }),\n    })\n  }\n\n  onNext() {\n    this.tabIndex += 1;\n  }\n\n  selectedIndex = 0;\n  public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    this.selectedIndex = tabChangeEvent.index;\n  }\n\n  public nextStep() {\n    this.selectedIndex += 1;\n  }\n\n  public previousStep() {\n    this.selectedIndex -= 1;\n  }\n\n  addDateForm() {\n    return this.fb.group(\n      {\n        fromDate: ['', [Validators.required]],\n        toDate: ['', [Validators.required]],\n      })\n  }\n\n  async addDates() {\n    // this.dates = this.interview.get('dates') as FormArray;\n    // this.dates.push(this.addDateForm());\n  }\n\n  async deleteDates(i) {\n    const arrayControl = <FormArray>this.interview.controls['dates'];\n    arrayControl.removeAt(i);\n  }\n\n  async onSubmit() {\n    let rel;\n    this.interviewMaster = new InterviewMaster(this.addInterview.value);\n    console.log(\"in\",this.interviewMaster);\n    \n    rel = await this.InterviewMasterService.addInterview(this.interviewMaster);\n    if (!rel) {\n      alert(this.InterviewMasterService.getErrorMessage);\n    } else {\n      this.router.navigate([`/interview-master`]);\n    }\n  }\n\n}\n","<!-- <pre>Form Values: {{interview.value | json}}</pre>\n<pre>Form Values: {{interview.controls.dates.status}}</pre> -->\n{{addInterview.value | json}}\n<div class=\"box-container\">\n    <mat-tab-group [(selectedIndex)]=\"selectedIndex\" (selectedTabChange)=\"tabChanged($event)\">\n        <div [formGroup]=\"interview\">\n            <mat-tab label=\"Step 1\">\n                <form [formGroup]=\"addInterview\">\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"name\" placeholder=\"Interview Id\"\n                                    formControlName=\"interview_id\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"name\" placeholder=\"Enter Name\"\n                                    formControlName=\"name\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"notification_no\" placeholder=\"Enter Notification No.\"\n                                    formControlName=\"notification_no\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-radio-group aria-label=\"Select an option\" formControlName=\"status\">\n                                <mat-label>Interview Status: </mat-label>\n                                <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Add</button>\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!addInterview.valid\"\n                            (click)=\"nextStep()\">Next</button>\n                    </div>\n                </form>\n            </mat-tab>\n            <mat-tab label=\"Step 2\">\n                <form [formGroup]=\"interview.controls.dates\">\n                    <div>\n                        <div class=\"grid-2\">\n                            <div>\n                                <mat-form-field>\n                                    <mat-label>From date</mat-label>\n                                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div>\n                                <mat-form-field>\n                                    <mat-label>To date</mat-label>\n                                    <input matInput [matDatepicker]=\"topicker\" formControlName=\"toDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"topicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #topicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <!-- <button mat-mini-fab color=\"default\" (click)=\"deleteDates(i)\">\n                                <mat-icon>remove</mat-icon>\n                            </button> -->\n                        </div>\n                        <!-- <button mat-mini-fab color=\"default\" (click)=\"addDates()\">\n                            <mat-icon>add</mat-icon>\n                        </button> -->\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.dates.valid\"\n                            class=\"ml-10\" (click)=\"nextStep()\">Next</button>\n                    </div>\n                </form>\n            </mat-tab>\n\n            <mat-tab label=\"Step 3\">\n                <div [formGroup]=\"interview.controls.marks\">\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"Unreserved Max Marks\"\n                                    formControlName=\"unreserved_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"Unreserved Min Marks\"\n                                    formControlName=\"unreserved_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"EWS Max Marks\"\n                                    formControlName=\"EWS_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"EWS Min Marks\"\n                                    formControlName=\"EWS_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"OBC NCL Max Marks\"\n                                    formControlName=\"OBC_NCL_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"OBC NCL Min Marks\"\n                                    formControlName=\"OBC_NCL_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"SC Max Marks\"\n                                    formControlName=\"SC_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"SC Min Marks\"\n                                    formControlName=\"SC_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"ST Max Marks\"\n                                    formControlName=\"ST_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"ST Min Marks\"\n                                    formControlName=\"ST_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.marks.valid\" class=\"ml-10\"\n                        (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 4\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.verification\">\n                    <div>\n                        <mat-form-field>\n                            <mat-label>Verification Officer Name</mat-label>\n                            <mat-select formControlName=\"verfication_officer\">\n                                <mat-option *ngFor=\"let office of Officer\" [value]=\"office.name\">\n                                    {{office.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"interviewDatesOfficer\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.verification.valid\"\n                        class=\"ml-10\" (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 5\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.board\">\n                    <div class=\"field\">\n                        <mat-form-field>\n                            <mat-label>Select Board/Chairmen</mat-label>\n                            <mat-select name=\"board\" formControlName=\"boardName\">\n                                <mat-option *ngFor=\"let Board of board\" [value]=\"Board.name\">\n                                    {{Board.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"interviewDatesBoard\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.board.valid\" class=\"ml-10\"\n                        (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 6\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.chairman\">\n                    <div class=\"field\">\n                        <mat-form-field>\n                            <mat-label>Select Board/Chairmen</mat-label>\n                            <mat-select name=\"board\" formControlName=\"boardChairman\">\n                                <mat-option *ngFor=\"let Chairman of chairman\" [value]=\"Chairman.name\">\n                                    {{Chairman.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"member\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Submit</button>\n                </div>\n            </mat-tab>\n        </div>\n    </mat-tab-group>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { InterviewMasterComponent } from './interview-master.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InterviewMasterComponent,\n  },\n  {\n    path: 'add-interview',\n    component: AddInterviewComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InterviewMasterRoutingModule { }\n","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { InterviewMasterService } from './interview-master.service';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Component({\n  selector: 'app-interview-master',\n  templateUrl: './interview-master.component.html',\n  styleUrls: ['./interview-master.component.scss']\n})\nexport class InterviewMasterComponent implements OnInit {\n\n  displayedColumns: string[];\n  interview: InterviewMaster[] = []\n  table_data;\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\n\n  constructor(private router: Router,\n    private InterviewMasterService: InterviewMasterService) {\n  }\n\n  async ngOnInit() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const rel = await this.InterviewMasterService.fetchInterviewList();\n    if (rel) {\n      this.interview = this.InterviewMasterService.getInterviewList;\n    } else {\n      alert(this.InterviewMasterService.getErrorMessage);\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.table_data.filter = filterValue;\n  }\n\n}\n","<div class=\"box-container\">\n    <div class=\"grid-2\">\n        <h2 class=\"mat-h2\">Interview Master</h2>\n        <div class=\"right\">\n            <button mat-raised-button color=\"primary\" (click)=\"gotoPage('interview-master/add-interview')\">Add\n                Interview</button>\n            <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\"\n                style=\"margin-left: 10px;\">Back\n            </button>\n        </div>\n    </div>\n    <div>\n        <div class=\"grid-3\">\n            <div></div>\n            <div class=\"center\">\n                <mat-form-field>\n                    <mat-label>Search</mat-label>\n                    <input type=\"text\" matInput (keyup)=\"applyFilter($event.target.value)\">\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n            </div>\n            <div></div>\n        </div>\n        <ng-container *ngIf=\"interview.length > 0\">\n            <div class=\"grid-header grid\">\n              <div class=\"sub-grid bold-head\">\n                <div>ID</div>\n                <div>Name</div>\n                <div>Notification No</div>\n                <div>Status</div>\n              </div>\n            </div>\n            <div class=\"grid\" *ngFor=\"let i of interview;\">\n              <div class=\"sub-grid\"\n                   matTooltip=\"Details\">\n                <div>{{i.interview_id}}</div>\n                <div>{{i.interview_name}}</div>\n                <div>{{i.notification}}</div>\n                <div>{{i.status}}</div>\n              </div>\n              <div class=\"icon-column\">\n                <mat-icon matTooltip=\"Edit\">\n                  edit\n                </mat-icon>\n              </div>\n              <div class=\"icon-column\">\n                <mat-icon matTooltip=\"Delete\">\n                  delete\n                </mat-icon>\n              </div>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"interview.length == 0\">\n            <div class=\"no-data\">\n              Currently, there are no interview\n            </div>\n          </ng-container>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InterviewMasterRoutingModule } from './interview-master-routing.module';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { InterviewMasterComponent } from './interview-master.component';\n\n@NgModule({\n  declarations: [\n    InterviewMasterComponent,\n    AddInterviewComponent,\n  ],\n  imports: [\n    CommonModule,\n    InterviewMasterRoutingModule,\n    MatButtonModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatRadioModule, \n    MatMenuModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatProgressBarModule,\n    MatPaginatorModule\n  ]\n})\nexport class InterviewMasterModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as apiUrl from '../apiUrls';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterviewMasterService {\n\n  private httpErrorMessage = '';\n  interview: InterviewMaster[] = [];\n  constructor(private http: HttpClient) { }\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  get getInterviewList(): InterviewMaster[] {\n    return this.interview;\n  }\n\n  async fetchInterviewList(): Promise<boolean> {\n    return await this.http.get(\n      apiUrl.getApiInterviewMasterEndPoint).toPromise()\n      .then((response) => {\n        let result = response['data'];\n        this.interview = [];\n        for (let i of result) {\n          this.interview.push(InterviewMaster.fromJson(i));\n        }\n        console.log(this.interview);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async addInterview(interview: InterviewMaster) {\n    return await this.http.post(\n      apiUrl.getApiAddInterviewMasterEndPoint, interview.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this);\n  }\n\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n","export class InterviewMaster {\n    interview_id: number;\n    name: string;\n    notification_no: number;\n    status: string;\n    // fromDate: any;\n    // toDate: any;\n    // unreserved_max: number;\n    // unreserved_min: number;\n    // EWS_max: number;\n    // EWS_min: number;\n    // OBC_NCL_max: number;\n    // OBC_NCL_min: number;\n    // SC_max: number;\n    // SC_min: number;\n    // ST_max: number;\n    // ST_min: number;\n    // verfication_officer: string;\n    // interviewDatesOfficer: string;\n    // boardName: string;\n    // interviewDatesBoard: string\n    // boardChairman: string;\n    // member: string;\n\n    public constructor(init?: Partial<InterviewMaster>) {\n        Object.assign(this, init);\n    }\n\n    static fromJson(data: Map<string, any>): InterviewMaster {\n        const u: InterviewMaster = new InterviewMaster();\n        u.interview_id = data['interview_id'];\n        u.name = data['name'];\n        u.notification_no = data['notification_no'];\n        u.status = data['status'];\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();    \n            data['interview_id'] = this.interview_id;\n            data['name'] = this.name;\n            data['notification_no'] = this.notification_no;\n            data['status'] = this.status\n        // {\n        //     data['fromDate'] = this.fromDate;\n        //     data['toDate'] = this.toDate;\n        // }\n        // {\n        //     data['unreserved_max'] = this.unreserved_max;\n        //     data['unreserved_min'] = this.unreserved_min;\n        //     data['EWS_max'] = this.EWS_max;\n        //     data['EWS_min'] = this.EWS_min;\n        //     data['OBC_NCL_max'] = this.OBC_NCL_max;\n        //     data['OBC_NCL_min'] = this.OBC_NCL_min;\n        //     data['SC_max'] = this.SC_max;\n        //     data['SC_min'] = this.SC_min;\n        //     data['ST_max'] = this.ST_max;\n        //     data['ST_min'] = this.ST_min;\n        // }\n        // {\n        //     data['verfication_officer'] = this.verfication_officer;\n        //     data['interviewDatesOfficer'] = this.interviewDatesOfficer;\n        // }\n        // {\n        //     data['boardName'] = this.boardName;\n        //     data['interviewDatesBoard'] = this.interviewDatesBoard;\n        // }\n        // {\n        //     data['boardChairman'] = this.boardChairman;\n        //     data['member'] = this.member;\n        // }\n        return data;\n    }\n}\n"],"sourceRoot":"webpack:///"}