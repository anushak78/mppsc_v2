{"version":3,"sources":["./src/app/board-master/add-board/add-board.component.ts","./src/app/board-master/add-board/add-board.component.html","./src/app/board-master/board-master-routing.module.ts","./src/app/board-master/board-master.component.ts","./src/app/board-master/board-master.component.html","./src/app/board-master/board-master.module.ts","./src/app/board-master/board-master.service.ts"],"names":[],"mappings":"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","file":"board-master-board-master-module-es2015.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BoardMasterService} from '../board-master.service';\nimport {BoardMaster} from '../model/board-master.model';\nimport {MessageDialogComponent} from '../../dialogs/message/message.component';\nimport {ConfirmDialogComponent} from '../../dialogs/confirm/confirm.component';\n\n@Component({\n  selector: 'app-add-board',\n  templateUrl: './add-board.component.html',\n  styleUrls: ['./add-board.component.scss']\n})\nexport class AddBoardComponent implements OnInit {\n  boardMaster = new BoardMaster();\n  activity: string;\n  boardId: number;\n  @ViewChild('confirmDlg', {static: false})\n  confirmDlg: ConfirmDialogComponent;\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  constructor(private boardMasterService: BoardMasterService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.params.boardId !== undefined) {\n      this.activity = 'Edit';\n      this.boardId = this.route.snapshot.params.boardId;\n      await this.loadBoardDetails();\n    } else {\n      this.activity = 'Add';\n    }\n  }\n\n  async loadBoardDetails() {\n    const rel = await this.boardMasterService.getBoardDetails(this.route.snapshot.params.boardId);\n    if (rel) {\n      this.boardMaster = this.boardMasterService.getBoardData;\n    } else {\n      this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n    }\n  }\n\n  async openAddBoardConfirmation() {\n    this.confirmDlg.openDialog('Add Board',\n      `Do you really want to add this board <b>${this.boardMaster.boardName}</b>?`,\n      await this.onSubmit.bind(this));\n  }\n\n  async onSubmit(flag: boolean) {\n    if (flag) {\n      let rel;\n      if (this.activity === 'Edit') {\n        rel = await this.boardMasterService.editBoard(this.boardMaster);\n      } else {\n        rel = await this.boardMasterService.addBoard(this.boardMaster);\n      }\n      if (rel) {\n        this.gotoPage('boards');\n      } else {\n        this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n      }\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n}\n","<div class=\"box-container\">\n  <div class=\"grid-2\">\n    <div>\n      <h2 matDialogTitle>{{activity}} Board</h2>\n    </div>\n    <div>\n      <div class=\"right\">\n        <button mat-raised-button color=\"primary\" (click)=\"gotoPage('boards')\"\n                style=\"margin-left: 10px;\">Back\n        </button>\n      </div>\n    </div>\n  </div>\n  <hr>\n  <div>\n    <form #f=\"ngForm\" (ngSubmit)=\"f.form.valid\">\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.boardName\" maxlength=\"100\" type=\"text\" name=\"board_name\"\n                 placeholder=\"Enter Board Name\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.noOfMembers\" maxlength=\"3\" type=\"number\" name=\"no_of_members\"\n                 placeholder=\"Enter Number of Members\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"boardMaster.loginId\" maxlength=\"15\" minlength=\"10\" type=\"text\" name=\"boardId\"\n                 placeholder=\"Enter Login ID\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput appBlockCopyPaste [(ngModel)]=\"boardMaster.password\" maxlength=\"15\" minlength=\"8\" type=\"password\" name=\"password\"\n                 placeholder=\"Enter Password\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-form-field>\n          <input matInput appBlockCopyPaste [(ngModel)]=\"boardMaster.confirmPassword\" type=\"password\" maxlength=\"15\" minlength=\"8\"\n                 name=\"confirm_password\" placeholder=\"Enter Confirm Password\" required>\n        </mat-form-field>\n      </div>\n      <div class=\"field\">\n        <mat-radio-group [(ngModel)]=\"boardMaster.status\" name=\"status\">\n          <mat-radio-button class=\"margin-left\" [value]=\"1\">\n            Active\n          </mat-radio-button>\n          <mat-radio-button class=\"margin-left\" [value]=\"0\">\n            Inactive\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </form>\n    <div style=\"margin-top: 10px\">\n      <button mat-raised-button style=\"background-color: green!important;color: whitesmoke;\"\n              (click)=\"openAddBoardConfirmation()\">{{activity}}\n        Board\n      </button>\n    </div>\n  </div>\n</div>\n\n<app-message-dialog #messageDlg></app-message-dialog>\n<app-confirm-dialog #confirmDlg></app-confirm-dialog>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddBoardComponent } from './add-board/add-board.component';\nimport { BoardMasterComponent } from './board-master.component';\nimport { BoardMasterModule } from './board-master.module';\n\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: BoardMasterComponent \n  },\n  {\n    path:'add-board',\n    component: AddBoardComponent \n  },\n  {\n    path: 'add-board/:boardId',\n    component: AddBoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardMasterRoutingModule { }\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {BoardMasterService} from './board-master.service';\nimport {BoardMaster} from './model/board-master.model';\nimport {GuestUserMaster} from \"../guest-master/model/GuestUserMaster\";\nimport {ConfirmDialogComponent} from \"../dialogs/confirm/confirm.component\";\nimport {MessageDialogComponent} from \"../dialogs/message/message.component\";\nimport {Status} from \"../constant\";\n\n@Component({\n  selector: 'app-board-master',\n  templateUrl: './board-master.component.html',\n  styleUrls: ['./board-master.component.scss']\n})\nexport class BoardMasterComponent implements OnInit {\n\n  boardList: BoardMaster[] = [];\n  boardId: number;\n  boardName: string;\n  status = Status;\n  @ViewChild('confirmDlg', {static: false})\n  confirmDlg: ConfirmDialogComponent;\n\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n\n  constructor(private router: Router,\n              private boardMasterService: BoardMasterService) {\n  }\n\n  async ngOnInit() {\n    await this.loadData();\n  }\n\n  async loadData() {\n    const rel = await this.boardMasterService.fetchBoardList();\n    if (rel) {\n      this.boardList = this.boardMasterService.getBoardList;\n    } else {\n      alert(this.boardMasterService.getErrorMessage);\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName]);\n  }\n\n  updateBoard(id: number) {\n    this.router.navigate([`boards/add-board/${id}`]);\n  }\n\n  async openDeleteBoard(u: BoardMaster) {\n    this.boardId = u.id;\n    this.boardName = u.boardName;\n    this.confirmDlg.openDialog('Delete board',\n      `Confirmation 1: Do you really want to delete user <b>${this.boardName}</b>?`,\n      await this.openDeleteBoard2.bind(this));\n  }\n\n  async openDeleteBoard2(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete board',\n        `Confirmation 2: Do you really want to delete user <b>${this.boardName}</b>?`,\n        await this.openDeleteBoard3.bind(this));\n    }\n  }\n\n  async openDeleteBoard3(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete board',\n        `Confirmation 3: Do you really want to delete user <b>${this.boardName}</b>?`,\n        await this.onDeleteBoard.bind(this));\n    }\n  }\n\n  async onDeleteBoard(flag: boolean) {\n    if (flag) {\n      const rel = await this.boardMasterService.deleteBoardData(this.boardId);\n      if (rel) {\n        this.loadData();\n      } else {\n        this.messageDlg.openDialog(this.boardMasterService.getErrorMessage);\n      }\n    }\n  }\n\n}\n","<div class=\"box-container\">\n  <div class=\"grid-2\">\n    <div>\n      <h2 class=\"mat-h2\">Board List</h2>\n    </div>\n    <div class=\"right\">\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('boards/add-board')\">Add Board</button>\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\"\n              style=\"margin-left: 10px;\">Back\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"boardList.length > 0\">\n    <div class=\"grid-header grid\">\n      <div class=\"sub-grid bold-head\">\n        <div>Board Name</div>\n        <div>Board ID</div>\n        <div>No Of Members</div>\n        <div>Status</div>\n      </div>\n    </div>\n    <div class=\"grid\" *ngFor=\"let b of boardList;\">\n      <div class=\"sub-grid\" matTooltip=\"Details\">\n        <div>{{b.boardName}}</div>\n        <div>{{b.loginId}}</div>\n        <div>{{b.noOfMembers}}</div>\n        <div>{{status[b.status]}}</div>\n      </div>\n      <div class=\"icon-column\">\n        <mat-icon (click)=\"updateBoard(b.id)\" matTooltip=\"Edit\">\n          edit\n        </mat-icon>\n      </div>\n      <div class=\"icon-column\">\n        <mat-icon matTooltip=\"Delete\" (click)=\"openDeleteBoard(b)\">\n          delete\n        </mat-icon>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"boardList.length == 0\">\n    <div class=\"no-data\">\n      Currently, there are no board list defined\n    </div>\n  </ng-container>\n</div>\n\n<app-message-dialog #messageDlg></app-message-dialog>\n<app-confirm-dialog #confirmDlg></app-confirm-dialog>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BoardMasterRoutingModule} from './board-master-routing.module';\nimport {AddBoardComponent} from './add-board/add-board.component';\nimport {BoardMasterComponent} from './board-master.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {SharedModule} from '../shared.module';\n\n\n@NgModule({\n  declarations: [\n    BoardMasterComponent,\n    AddBoardComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BoardMasterRoutingModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatProgressBarModule,\n    MatPaginatorModule\n  ]\n})\nexport class BoardMasterModule {\n}\n","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport * as apiUrl from '../apiUrls';\nimport {BoardMaster} from './model/board-master.model';\nimport {GuestUserMaster} from \"../guest-master/model/GuestUserMaster\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardMasterService {\n\n  private httpErrorMessage = '';\n  board: BoardMaster[] = [];\n  boardDetails: BoardMaster;\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  get getBoardList(): BoardMaster[] {\n    return this.board;\n  }\n\n  get getBoardData(): BoardMaster {\n    return this.boardDetails;\n  }\n\n  constructor(private http: HttpClient) {\n  }\n\n  async fetchBoardList(): Promise<boolean> {\n    return await this.http.get(\n      apiUrl.getApiBoardMastercollectionEndPoint).toPromise()\n      .then((response) => {\n        const result = response['data'];\n        this.board = [];\n        for (let u of result) {\n          this.board.push(BoardMaster.fromJson(u));\n        }\n        console.log(this.board);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async addBoard(board: BoardMaster) {\n    return await this.http.post(\n      apiUrl.getApiAddBoardMastercollectionEndPoint, board.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async editBoard(board: BoardMaster) {\n    return await this.http.post(\n      apiUrl.getApiEditBoardMastercollectionEndPoint, board.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async getBoardDetails(boardId: number): Promise<boolean> {\n    return await this.http.post(\n      apiUrl.getApiDetailsBoardUserMastercollectionEndPoint(boardId), {}\n    ).toPromise()\n      .then((response) => {\n        this.boardDetails = BoardMaster.fromJson(response['data']);\n        console.log(this.boardDetails);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async deleteBoardData(boardId: number): Promise<boolean> {\n    return await this.http.post(\n      apiUrl.getApiDeleteBoardUserMastercollectionEndPoint(boardId), {}\n    ).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = ' Board Data deleted';\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n"],"sourceRoot":"webpack:///"}