{"version":3,"sources":["webpack:///src/app/interview-master/add-interview/add-interview.component.html","webpack:///src/app/interview-master/add-interview/add-interview.component.ts","webpack:///src/app/interview-master/interview-master-routing.module.ts","webpack:///src/app/interview-master/interview-master.component.html","webpack:///src/app/interview-master/interview-master.component.ts","webpack:///src/app/interview-master/interview-master.module.ts","webpack:///src/app/interview-master/interview-master.service.ts","webpack:///src/app/interview-master/model/interview-master.model.ts"],"names":["AddInterviewComponent","InterviewMasterService","router","fb","interviewMaster","tabIndex","Officer","name","board","chairman","addInterview","interview_id","required","notification_no","status","selectedIndex","interview","group","Details","interview_name","notification","dates","fromDate","toDate","marks","unreserved_max","pattern","unreserved_min","EWS_max","EWS_min","OBC_NCL_max","OBC_NCL_min","SC_max","SC_min","ST_max","ST_min","verification","verfication_officer","interviewDatesOfficer","boardName","interviewDatesBoard","boardChairman","member","tabChangeEvent","index","i","arrayControl","controls","removeAt","value","console","log","rel","alert","getErrorMessage","navigate","tabChanged","onSubmit","nextStep","previousStep","selector","templateUrl","styleUrls","routes","path","component","InterviewMasterRoutingModule","forChild","imports","exports","InterviewMasterComponent","paginator","loadData","fetchInterviewList","getInterviewList","pageName","filterValue","trim","toLowerCase","table_data","filter","gotoPage","applyFilter","InterviewMasterModule","declarations","http","httpErrorMessage","get","toPromise","then","response","result","push","fromJson","error","errorHandler","post","toJSON","providedIn","InterviewMaster","init","Object","assign","data","Map","u"],"mappings":"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","file":"interview-master-interview-master-module-es5.js","sourcesContent":["<!-- <pre>Form Values: {{interview.value | json}}</pre>\n<pre>Form Values: {{interview.controls.dates.status}}</pre> -->\n{{addInterview.value | json}}\n<div class=\"box-container\">\n    <mat-tab-group [(selectedIndex)]=\"selectedIndex\" (selectedTabChange)=\"tabChanged($event)\">\n        <div [formGroup]=\"interview\">\n            <mat-tab label=\"Step 1\">\n                <form [formGroup]=\"addInterview\">\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"name\" placeholder=\"Interview Id\"\n                                    formControlName=\"interview_id\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"name\" placeholder=\"Enter Name\"\n                                    formControlName=\"name\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"notification_no\" placeholder=\"Enter Notification No.\"\n                                    formControlName=\"notification_no\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-radio-group aria-label=\"Select an option\" formControlName=\"status\">\n                                <mat-label>Interview Status: </mat-label>\n                                <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Add</button>\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!addInterview.valid\"\n                            (click)=\"nextStep()\">Next</button>\n                    </div>\n                </form>\n            </mat-tab>\n            <mat-tab label=\"Step 2\">\n                <form [formGroup]=\"interview.controls.dates\">\n                    <div>\n                        <div class=\"grid-2\">\n                            <div>\n                                <mat-form-field>\n                                    <mat-label>From date</mat-label>\n                                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div>\n                                <mat-form-field>\n                                    <mat-label>To date</mat-label>\n                                    <input matInput [matDatepicker]=\"topicker\" formControlName=\"toDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"topicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #topicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <!-- <button mat-mini-fab color=\"default\" (click)=\"deleteDates(i)\">\n                                <mat-icon>remove</mat-icon>\n                            </button> -->\n                        </div>\n                        <!-- <button mat-mini-fab color=\"default\" (click)=\"addDates()\">\n                            <mat-icon>add</mat-icon>\n                        </button> -->\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.dates.valid\"\n                            class=\"ml-10\" (click)=\"nextStep()\">Next</button>\n                    </div>\n                </form>\n            </mat-tab>\n\n            <mat-tab label=\"Step 3\">\n                <div [formGroup]=\"interview.controls.marks\">\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"Unreserved Max Marks\"\n                                    formControlName=\"unreserved_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"Unreserved Min Marks\"\n                                    formControlName=\"unreserved_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"EWS Max Marks\"\n                                    formControlName=\"EWS_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"EWS Min Marks\"\n                                    formControlName=\"EWS_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"OBC NCL Max Marks\"\n                                    formControlName=\"OBC_NCL_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"OBC NCL Min Marks\"\n                                    formControlName=\"OBC_NCL_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"SC Max Marks\"\n                                    formControlName=\"SC_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"SC Min Marks\"\n                                    formControlName=\"SC_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"ST Max Marks\"\n                                    formControlName=\"ST_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"ST Min Marks\"\n                                    formControlName=\"ST_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.marks.valid\" class=\"ml-10\"\n                        (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 4\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.verification\">\n                    <div>\n                        <mat-form-field>\n                            <mat-label>Verification Officer Name</mat-label>\n                            <mat-select formControlName=\"verfication_officer\">\n                                <mat-option *ngFor=\"let office of Officer\" [value]=\"office.name\">\n                                    {{office.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"interviewDatesOfficer\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.verification.valid\"\n                        class=\"ml-10\" (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 5\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.board\">\n                    <div class=\"field\">\n                        <mat-form-field>\n                            <mat-label>Select Board/Chairmen</mat-label>\n                            <mat-select name=\"board\" formControlName=\"boardName\">\n                                <mat-option *ngFor=\"let Board of board\" [value]=\"Board.name\">\n                                    {{Board.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"interviewDatesBoard\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!interview.controls.board.valid\" class=\"ml-10\"\n                        (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 6\">\n                <div class=\"grid-3\" [formGroup]=\"interview.controls.chairman\">\n                    <div class=\"field\">\n                        <mat-form-field>\n                            <mat-label>Select Board/Chairmen</mat-label>\n                            <mat-select name=\"board\" formControlName=\"boardChairman\">\n                                <mat-option *ngFor=\"let Chairman of chairman\" [value]=\"Chairman.name\">\n                                    {{Chairman.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"example-margin\">\n                        <mat-checkbox formControlName=\"member\">Date</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Submit</button>\n                </div>\n            </mat-tab>\n        </div>\n    </mat-tab-group>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Router } from '@angular/router';\nimport { InterviewMasterService } from '../interview-master.service';\nimport { InterviewMaster } from '../model/interview-master.model';\n\n@Component({\n  selector: 'app-add-interview',\n  templateUrl: './add-interview.component.html',\n  styleUrls: ['./add-interview.component.scss']\n})\nexport class AddInterviewComponent implements OnInit {\n  interviewMaster = new InterviewMaster();\n\n  tabIndex = 0\n  Officer = [{ name: 'Nseit' }];\n  board = [{ name: 'A1' }];\n  chairman = [{ name: 'A1' }]\n  interview: FormGroup;\n  //addInterview: FormGroup;\n  constructor(private InterviewMasterService: InterviewMasterService,\n    private router: Router,\n    private fb: FormBuilder) { }\n\n  addInterview = new FormGroup({\n    interview_id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    notification_no: new FormControl('', [Validators.required]),\n    status: new FormControl('yes', [Validators.required]),\n  })\n\n  ngOnInit(): void {\n    this.interview = this.fb.group({\n      Details: this.fb.group({\n        interview_id: ['', [Validators.required]],\n        interview_name: ['', [Validators.required]],\n        notification: ['', [Validators.required]],\n        status: ['yes', [Validators.required]],\n      }),\n      dates: this.fb.group({\n        fromDate: ['', [Validators.required]],\n        toDate: ['', [Validators.required]]\n      }),\n      marks: this.fb.group({\n        unreserved_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        unreserved_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        EWS_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        EWS_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        OBC_NCL_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        OBC_NCL_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        SC_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        SC_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        ST_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        ST_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      }),\n      verification: this.fb.group({\n        verfication_officer: ['', [Validators.required]],\n        interviewDatesOfficer: ['', [Validators.required]]\n      }),\n      board: this.fb.group({\n        boardName: ['', [Validators.required]],\n        interviewDatesBoard: ['', [Validators.required]]\n      }),\n      chairman: this.fb.group({\n        boardChairman: ['', [Validators.required]],\n        member: ['', [Validators.required]],\n      }),\n    })\n  }\n\n  onNext() {\n    this.tabIndex += 1;\n  }\n\n  selectedIndex = 0;\n  public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    this.selectedIndex = tabChangeEvent.index;\n  }\n\n  public nextStep() {\n    this.selectedIndex += 1;\n  }\n\n  public previousStep() {\n    this.selectedIndex -= 1;\n  }\n\n  addDateForm() {\n    return this.fb.group(\n      {\n        fromDate: ['', [Validators.required]],\n        toDate: ['', [Validators.required]],\n      })\n  }\n\n  async addDates() {\n    // this.dates = this.interview.get('dates') as FormArray;\n    // this.dates.push(this.addDateForm());\n  }\n\n  async deleteDates(i) {\n    const arrayControl = <FormArray>this.interview.controls['dates'];\n    arrayControl.removeAt(i);\n  }\n\n  async onSubmit() {\n    let rel;\n    this.interviewMaster = new InterviewMaster(this.addInterview.value);\n    console.log(\"in\",this.interviewMaster);\n    \n    rel = await this.InterviewMasterService.addInterview(this.interviewMaster);\n    if (!rel) {\n      alert(this.InterviewMasterService.getErrorMessage);\n    } else {\n      this.router.navigate([`/interview-master`]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { InterviewMasterComponent } from './interview-master.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InterviewMasterComponent,\n  },\n  {\n    path: 'add-interview',\n    component: AddInterviewComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InterviewMasterRoutingModule { }\n","<div class=\"box-container\">\n    <div class=\"grid-2\">\n        <h2 class=\"mat-h2\">Interview Master</h2>\n        <div class=\"right\">\n            <button mat-raised-button color=\"primary\" (click)=\"gotoPage('interview-master/add-interview')\">Add\n                Interview</button>\n            <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\"\n                style=\"margin-left: 10px;\">Back\n            </button>\n        </div>\n    </div>\n    <div>\n        <div class=\"grid-3\">\n            <div></div>\n            <div class=\"center\">\n                <mat-form-field>\n                    <mat-label>Search</mat-label>\n                    <input type=\"text\" matInput (keyup)=\"applyFilter($event.target.value)\">\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n            </div>\n            <div></div>\n        </div>\n        <ng-container *ngIf=\"interview.length > 0\">\n            <div class=\"grid-header grid\">\n              <div class=\"sub-grid bold-head\">\n                <div>ID</div>\n                <div>Name</div>\n                <div>Notification No</div>\n                <div>Status</div>\n              </div>\n            </div>\n            <div class=\"grid\" *ngFor=\"let i of interview;\">\n              <div class=\"sub-grid\"\n                   matTooltip=\"Details\">\n                <div>{{i.interview_id}}</div>\n                <div>{{i.interview_name}}</div>\n                <div>{{i.notification}}</div>\n                <div>{{i.status}}</div>\n              </div>\n              <div class=\"icon-column\">\n                <mat-icon matTooltip=\"Edit\">\n                  edit\n                </mat-icon>\n              </div>\n              <div class=\"icon-column\">\n                <mat-icon matTooltip=\"Delete\">\n                  delete\n                </mat-icon>\n              </div>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"interview.length == 0\">\n            <div class=\"no-data\">\n              Currently, there are no interview\n            </div>\n          </ng-container>\n    </div>\n</div>","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { InterviewMasterService } from './interview-master.service';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Component({\n  selector: 'app-interview-master',\n  templateUrl: './interview-master.component.html',\n  styleUrls: ['./interview-master.component.scss']\n})\nexport class InterviewMasterComponent implements OnInit {\n\n  displayedColumns: string[];\n  interview: InterviewMaster[] = []\n  table_data;\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\n\n  constructor(private router: Router,\n    private InterviewMasterService: InterviewMasterService) {\n  }\n\n  async ngOnInit() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const rel = await this.InterviewMasterService.fetchInterviewList();\n    if (rel) {\n      this.interview = this.InterviewMasterService.getInterviewList;\n    } else {\n      alert(this.InterviewMasterService.getErrorMessage);\n    }\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.table_data.filter = filterValue;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InterviewMasterRoutingModule } from './interview-master-routing.module';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { InterviewMasterComponent } from './interview-master.component';\n\n@NgModule({\n  declarations: [\n    InterviewMasterComponent,\n    AddInterviewComponent,\n  ],\n  imports: [\n    CommonModule,\n    InterviewMasterRoutingModule,\n    MatButtonModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatRadioModule, \n    MatMenuModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatProgressBarModule,\n    MatPaginatorModule\n  ]\n})\nexport class InterviewMasterModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as apiUrl from '../apiUrls';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterviewMasterService {\n\n  private httpErrorMessage = '';\n  interview: InterviewMaster[] = [];\n  constructor(private http: HttpClient) { }\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  get getInterviewList(): InterviewMaster[] {\n    return this.interview;\n  }\n\n  async fetchInterviewList(): Promise<boolean> {\n    return await this.http.get(\n      apiUrl.getApiInterviewMasterEndPoint).toPromise()\n      .then((response) => {\n        let result = response['data'];\n        this.interview = [];\n        for (let i of result) {\n          this.interview.push(InterviewMaster.fromJson(i));\n        }\n        console.log(this.interview);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async addInterview(interview: InterviewMaster) {\n    return await this.http.post(\n      apiUrl.getApiAddInterviewMasterEndPoint, interview.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this);\n  }\n\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n","export class InterviewMaster {\n    interview_id: number;\n    name: string;\n    notification_no: number;\n    status: string;\n    // fromDate: any;\n    // toDate: any;\n    // unreserved_max: number;\n    // unreserved_min: number;\n    // EWS_max: number;\n    // EWS_min: number;\n    // OBC_NCL_max: number;\n    // OBC_NCL_min: number;\n    // SC_max: number;\n    // SC_min: number;\n    // ST_max: number;\n    // ST_min: number;\n    // verfication_officer: string;\n    // interviewDatesOfficer: string;\n    // boardName: string;\n    // interviewDatesBoard: string\n    // boardChairman: string;\n    // member: string;\n\n    public constructor(init?: Partial<InterviewMaster>) {\n        Object.assign(this, init);\n    }\n\n    static fromJson(data: Map<string, any>): InterviewMaster {\n        const u: InterviewMaster = new InterviewMaster();\n        u.interview_id = data['interview_id'];\n        u.name = data['name'];\n        u.notification_no = data['notification_no'];\n        u.status = data['status'];\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();    \n            data['interview_id'] = this.interview_id;\n            data['name'] = this.name;\n            data['notification_no'] = this.notification_no;\n            data['status'] = this.status\n        // {\n        //     data['fromDate'] = this.fromDate;\n        //     data['toDate'] = this.toDate;\n        // }\n        // {\n        //     data['unreserved_max'] = this.unreserved_max;\n        //     data['unreserved_min'] = this.unreserved_min;\n        //     data['EWS_max'] = this.EWS_max;\n        //     data['EWS_min'] = this.EWS_min;\n        //     data['OBC_NCL_max'] = this.OBC_NCL_max;\n        //     data['OBC_NCL_min'] = this.OBC_NCL_min;\n        //     data['SC_max'] = this.SC_max;\n        //     data['SC_min'] = this.SC_min;\n        //     data['ST_max'] = this.ST_max;\n        //     data['ST_min'] = this.ST_min;\n        // }\n        // {\n        //     data['verfication_officer'] = this.verfication_officer;\n        //     data['interviewDatesOfficer'] = this.interviewDatesOfficer;\n        // }\n        // {\n        //     data['boardName'] = this.boardName;\n        //     data['interviewDatesBoard'] = this.interviewDatesBoard;\n        // }\n        // {\n        //     data['boardChairman'] = this.boardChairman;\n        //     data['member'] = this.member;\n        // }\n        return data;\n    }\n}\n"]}