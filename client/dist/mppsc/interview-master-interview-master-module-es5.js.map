{"version":3,"sources":["webpack:///src/app/interview-master/add-interview/add-interview.component.html","webpack:///src/app/interview-master/add-interview/add-interview.component.ts","webpack:///src/app/interview-master/interview-master-routing.module.ts","webpack:///src/app/interview-master/interview-master.component.html","webpack:///src/app/interview-master/interview-master.component.ts","webpack:///src/app/interview-master/interview-master.module.ts","webpack:///src/app/interview-master/interview-master.service.ts","webpack:///src/app/interview-master/model/dates-range.model.ts","webpack:///src/app/interview-master/model/interview-mark.model.ts","webpack:///src/app/interview-master/model/interview-master.model.ts","webpack:///src/app/interview-master/model/map-verfication-officer.model.ts"],"names":["AddInterviewComponent","InterviewMasterService","router","fb","interviewMaster","dateRange","interviewMark","MapVerficationOfficer","tabIndex","Officer","name","board","chairman","dateList","activity","date","fromDate","toDate","officer","addInterview","interview_id","required","notification_no","status","selectedIndex","unit","$event","checked","push","console","log","addDateItem","interviewMarks","group","unreserved_max","pattern","unreserved_min","EWS_max","EWS_min","OBC_NCL_max","OBC_NCL_min","SC_max","SC_min","ST_max","ST_min","tabChangeEvent","index","id","splice","value","rel","nextStep","alert","getErrorMessage","addInterviewDates","tabChanged","addInterviewData","Dates","previousStep","selector","templateUrl","styleUrls","routes","path","component","InterviewMasterRoutingModule","forChild","imports","exports","InterviewMasterComponent","interview","loadData","fetchInterviewList","getInterviewList","navigate","pageName","filterValue","trim","toLowerCase","table_data","filter","u","deleteInterviewId","deleteInterviewName","confirmDlg","openDeleteInterview2","bind","openDialog","flag","openDeleteInterview3","onDeleteInterview","deleteInterview","messageDlg","gotoPage","applyFilter","InterviewMasterModule","declarations","http","httpErrorMessage","get","toPromise","then","response","result","i","fromJson","error","errorHandler","post","toJSON","interviewId","dateArray","d","dates","providedIn","DatesRange","data","Map","Date","InterviewMark","init","Object","assign","InterviewMaster"],"mappings":"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","file":"interview-master-interview-master-module-es5.js","sourcesContent":["<!-- <pre>Form Values: {{interview.value | json}}</pre>\n<pre>Form Values: {{interview.controls.dates.status}}</pre> -->\n<div class=\"box-container\">\n    <div class=\"grid-2\">\n        <div>\n            <h2 class=\"mat-h2\">{{activity}} Guest User</h2>\n        </div>\n    </div>\n    <mat-tab-group [(selectedIndex)]=\"selectedIndex\" (selectedTabChange)=\"tabChanged($event)\">\n        <div>\n            <mat-tab label=\"Step 1\">\n                <form [formGroup]=\"addInterview\">\n                    <div class=\"field\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"id\" placeholder=\"Interview Id\"\n                                    formControlName=\"interview_id\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"name\" placeholder=\"Enter Name\" formControlName=\"name\"\n                                    required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"notification_no\" placeholder=\"Enter Notification No.\"\n                                    formControlName=\"notification_no\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <div class=\"center\">\n                            <mat-radio-group aria-label=\"Select an option\" formControlName=\"status\">\n                                <mat-label>Interview Status: </mat-label>\n                                <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!addInterview.valid\"\n                            (click)=\"addInterviewData()\">Next</button>\n                    </div>\n                </form>\n            </mat-tab>\n\n            <mat-tab label=\"Step 2\">\n                <div class=\"box-container\" style=\"margin-top: 10px\">\n                    <div *ngFor=\"let item of dateList; let i=index\">\n                        <div class=\"grid-3\" style=\"width: 50%\">\n                            <div class=\"field\">\n                                <mat-form-field>\n                                    <mat-label>From date</mat-label>\n                                    <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"item.fromDate\" required>\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"field\">\n                                <mat-form-field>\n                                    <mat-label>To date</mat-label>\n                                    <input matInput [matDatepicker]=\"topicker\" [(ngModel)]=\"item.toDate\" required>\n                                    <mat-datepicker-toggle matSuffix [for]=\"topicker\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #topicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div *ngIf=\"i == dateList.length-1\">\n                                <button mat-mini-fab color=\"default\" (click)=\"addDateItem()\">\n                                    <mat-icon>add</mat-icon>\n                                </button>\n                            </div>\n                            <div *ngIf=\"i != dateList.length-1\">\n                                <button mat-mini-fab color=\"default\" (click)=\"deleteDateItem(i)\">\n                                    <mat-icon>remove</mat-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"right\">\n                        <button mat-raised-button color=\"primary\" (click)=\"Dates()\">Next\n                        </button>\n                    </div>\n                </div>\n            </mat-tab>\n\n            <mat-tab label=\"Step 3\">\n                <div [formGroup]=\"interviewMarks\">\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"Unreserved Max Marks\"\n                                    formControlName=\"unreserved_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"Unreserved Min Marks\"\n                                    formControlName=\"unreserved_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"EWS Max Marks\"\n                                    formControlName=\"EWS_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"EWS Min Marks\"\n                                    formControlName=\"EWS_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"OBC NCL Max Marks\"\n                                    formControlName=\"OBC_NCL_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"OBC NCL Min Marks\"\n                                    formControlName=\"OBC_NCL_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"SC Max Marks\"\n                                    formControlName=\"SC_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"SC Min Marks\"\n                                    formControlName=\"SC_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"grid-3\">\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_max\" placeholder=\"ST Max Marks\"\n                                    formControlName=\"ST_max\" required>\n                            </mat-form-field>\n                        </div>\n                        <div>\n                            <mat-form-field>\n                                <input matInput type=\"text\" name=\"ur_min\" placeholder=\"ST Min Marks\"\n                                    formControlName=\"ST_min\" required>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" class=\"ml-10\" (click)=\" marks()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 4\">\n                <div class=\"field\">\n                    <mat-form-field>\n                        <mat-label>Verification Officer Name</mat-label>\n                        <mat-select [(ngModel)]=\"gender\">\n                            <mat-option *ngFor=\"let office of Officer\" [value]=\"office.name\">\n                                {{office.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <div class=\"example-margin\">\n                        <div *ngFor=\"let item of date; let i=index\">\n                            <mat-checkbox [checked]=\"item.checked\" (change)=\"valueChangeVerification(item,$event)\">\n                            </mat-checkbox>\n                            {{item.fromDate}} to {{item.toDate}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" class=\"ml-10\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 5\">\n                <div class=\"field\">\n                    <mat-form-field>\n                        <mat-label>Board Name</mat-label>\n                        <mat-select name=\"board\" formControlName=\"boardName\">\n                            <mat-option *ngFor=\"let Board of board\" [value]=\"Board.name\">\n                                {{Board.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <div class=\"example-margin\">\n                        <div *ngFor=\"let item of date; let i=index\">\n                            <mat-checkbox [checked]=\"item.checked\" (change)=\"valueChangeVerification(item,$event)\">\n                            </mat-checkbox>\n                            {{item.fromDate}} to {{item.toDate}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\" (click)=\"previousStep()\">Previous</button>\n                    <button mat-raised-button color=\"primary\" class=\"ml-10\" (click)=\"nextStep()\">Next</button>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"Step 6\">\n                <div class=\"field\">\n                    <mat-form-field>\n                        <mat-label>Select Board/Chairman</mat-label>\n                        <mat-select name=\"board\">\n                            <mat-option *ngFor=\"let Chairman of chairman\" [value]=\"Chairman.name\">\n                                {{Chairman.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <div class=\"example-margin\">\n                        <div *ngFor=\"let item of date; let i=index\">\n                            <mat-checkbox [checked]=\"item.checked\" (change)=\"valueChangeVerification(item,$event)\">\n                            </mat-checkbox>\n                            {{item.fromDate}} to {{item.toDate}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"right\">\n                    <button mat-raised-button color=\"primary\">Submit</button>\n                </div>\n            </mat-tab>\n        </div>\n    </mat-tab-group>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Router } from '@angular/router';\nimport { InterviewMasterService } from '../interview-master.service';\nimport { DatesRange } from '../model/dates-range.model';\nimport { InterviewMark } from '../model/interview-mark.model';\nimport { InterviewMaster } from '../model/interview-master.model';\nimport { MapVerficationOfficer } from '../model/map-verfication-officer.model';\n\n@Component({\n  selector: 'app-add-interview',\n  templateUrl: './add-interview.component.html',\n  styleUrls: ['./add-interview.component.scss']\n})\nexport class AddInterviewComponent implements OnInit {\n  interviewMaster = new InterviewMaster();\n  dateRange = new DatesRange();\n  interviewMark = new InterviewMark();\n  MapVerficationOfficer = new MapVerficationOfficer();\n  tabIndex = 0\n  Officer = [{ name: 'Nseit' }];\n  board = [{ name: 'A1' }];\n  chairman = [{ name: 'A1' }]\n  interview: FormGroup;\n  interviewMarks: FormGroup;\n  dateList: DatesRange[] = [];\n  activity = 'add'\n  date = [{ fromDate: '2019', toDate: '2021' }, { fromDate: '2020', toDate: '2021' }]\n  officer: MapVerficationOfficer[] = [];\n  gender\n  arr\n  constructor(private InterviewMasterService: InterviewMasterService,\n    private router: Router,\n    private fb: FormBuilder) { }\n\n  addInterview = new FormGroup({\n    interview_id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    notification_no: new FormControl('', [Validators.required]),\n    status: new FormControl('yes', [Validators.required]),\n  })\n\n  valueChangeVerification(unit, $event) {\n    if ($event.checked) {\n      this.officer.push(unit);\n      console.log(\"officer\", this.officer);\n\n    }\n    console.log(\"unit\", unit);\n    console.log(\"$event\", $event);\n    console.log(\"unit.checked = $event.checked;\", unit.checked = $event.checked);\n  }\n  // interviewMarks = this.fb.group({\n  //   unreserved: this.fb.group({\n  //     interview_id: ['UR'],\n  //     min_marks: [''],\n  //     max_marks: [''],\n  //   }),\n  //   EWS: this.fb.group({\n  //     interview_id: ['EWS'],\n  //     min_marks: [''],\n  //     max_marks: [''],\n  //   }),\n  //   OBC_NCL: this.fb.group({\n  //     interview_id: ['OBC_NCL'],\n  //     min_marks: [''],\n  //     max_marks: [''],\n  //   }),\n  //   SC: this.fb.group({\n  //     interview_id: ['SC'],\n  //     min_marks: [''],\n  //     max_marks: [''],\n  //   }),\n  //   ST: this.fb.group({\n  //     interview_id: ['ST'],\n  //     min_marks: [''],\n  //     max_marks: [''],\n  //   }),\n  // })\n\n  ngOnInit(): void {\n    this.addDateItem();\n    this.interviewMarks = this.fb.group({\n      unreserved_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      unreserved_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      EWS_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      EWS_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      OBC_NCL_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      OBC_NCL_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      SC_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      SC_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      ST_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n      ST_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    })\n  }\n\n  onNext() {\n    this.tabIndex += 1;\n  }\n\n  selectedIndex = 0;\n  public tabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    this.selectedIndex = tabChangeEvent.index;\n  }\n\n  public nextStep() {\n    this.selectedIndex += 1;\n  }\n\n  public previousStep() {\n    this.selectedIndex -= 1;\n  }\n\n  addDateItem() {\n    this.dateRange = new DatesRange();\n    this.dateList.push(this.dateRange);\n    console.log(this.dateList);\n  }\n\n  deleteDateItem(id) {\n    this.dateList.splice(id - 1, 1);\n  }\n\n  async addInterviewData() {\n    let rel;\n    this.interviewMaster = new InterviewMaster(this.addInterview.value);\n    console.log(\"in\", this.interviewMaster);\n    rel = await this.InterviewMasterService.addInterview(this.interviewMaster);\n    this.nextStep();\n    if (!rel) {\n      alert(this.InterviewMasterService.getErrorMessage);\n    } else {\n      this.nextStep();\n    }\n  }\n  async Dates() {\n    let rel;\n    rel = this.InterviewMasterService.addInterviewDates(this.dateList);\n    if (!rel) {\n      alert(this.InterviewMasterService.getErrorMessage);\n    } else {\n      this.nextStep();\n    }\n  }\n\n  async marks() {\n    let rel\n    this.interviewMark = new InterviewMark(this.addInterview.value);\n    rel = await this.InterviewMasterService.interviewMarks(this.interviewMark);\n    if (!rel) {\n      alert(this.InterviewMasterService.getErrorMessage);\n    } else {\n      this.nextStep();\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // this.interview = this.fb.group({\n    //   Details: this.fb.group({\n    //     interview_id: ['', [Validators.required]],\n    //     interview_name: ['', [Validators.required]],\n    //     notification: ['', [Validators.required]],\n    //     status: ['yes', [Validators.required]],\n    //   }),\n    //   dates: this.fb.group({\n    //     fromDate: ['', [Validators.required]],\n    //     toDate: ['', [Validators.required]]\n    //   }),\n    //   marks: this.fb.group({\n    //     unreserved_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     unreserved_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     EWS_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     EWS_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     OBC_NCL_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     OBC_NCL_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     SC_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     SC_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     ST_max: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //     ST_min: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n    //   }),\n    //   verification: this.fb.group({\n    //     verfication_officer: ['', [Validators.required]],\n    //     interviewDatesOfficer: ['', [Validators.required]]\n    //   }),\n    //   board: this.fb.group({\n    //     boardName: ['', [Validators.required]],\n    //     interviewDatesBoard: ['', [Validators.required]]\n    //   }),\n    //   chairman: this.fb.group({\n    //     boardChairman: ['', [Validators.required]],\n    //     member: ['', [Validators.required]],\n    //   }),\n    // })","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { InterviewMasterComponent } from './interview-master.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InterviewMasterComponent,\n  },\n  {\n    path: 'add-interview',\n    component: AddInterviewComponent,\n  },\n  {\n    path: 'add-interview/:userId',\n    component: AddInterviewComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InterviewMasterRoutingModule { }\n","<div class=\"box-container\">\n  <div class=\"grid-2\">\n    <h2 class=\"mat-h2\">Interview Master</h2>\n    <div class=\"right\">\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('interview-master/add-interview')\">Add\n        Interview</button>\n      <button mat-raised-button color=\"primary\" (click)=\"gotoPage('admin-dashboard')\" style=\"margin-left: 10px;\">Back\n      </button>\n    </div>\n  </div>\n  <div>\n    <div class=\"grid-3\">\n      <div></div>\n      <div class=\"center\">\n        <mat-form-field>\n          <mat-label>Search</mat-label>\n          <input type=\"text\" matInput (keyup)=\"applyFilter($event.target.value)\">\n          <mat-icon matSuffix>search</mat-icon>\n        </mat-form-field>\n      </div>\n      <div></div>\n    </div>\n    <ng-container *ngIf=\"interview.length > 0\">\n      <div class=\"grid-header grid\">\n        <div class=\"sub-grid bold-head\">\n          <div>Interview ID</div>\n          <div>Interview Name</div>\n          <div>Notification No</div>\n          <div>Status</div>\n        </div>\n      </div>\n      <div class=\"grid\" *ngFor=\"let i of interview;\">\n        <div class=\"sub-grid\" matTooltip=\"Details\">\n          <div>{{i.interview_id}}</div>\n          <div>{{i.name}}</div>\n          <div>{{i.notification_no}}</div>\n          <div>{{i.status}}</div>\n        </div>\n        <div class=\"icon-column\">\n          <mat-icon matTooltip=\"Edit\" (click)=\"editInterview(i.interview_id)\">\n            edit\n          </mat-icon>\n        </div>\n        <div class=\"icon-column\">\n          <mat-icon matTooltip=\"Delete\" (click)=\"openDeleteInterview(i)\">\n            delete\n          </mat-icon>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"interview.length == 0\">\n      <div class=\"no-data\">\n        Currently, there are no interview\n      </div>\n    </ng-container> \n  </div>\n</div>\n<app-message-dialog #messageDlg></app-message-dialog>\n<app-confirm-dialog #confirmDlg></app-confirm-dialog>","import { Component, OnInit, ViewChildren, QueryList, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { ConfirmDialogComponent } from '../dialogs/confirm/confirm.component';\nimport { MessageDialogComponent } from '../dialogs/message/message.component';\nimport { InterviewMasterService } from './interview-master.service';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Component({\n  selector: 'app-interview-master',\n  templateUrl: './interview-master.component.html',\n  styleUrls: ['./interview-master.component.scss']\n})\nexport class InterviewMasterComponent implements OnInit {\n\n  displayedColumns: string[];\n  interview: InterviewMaster[] = []\n  table_data;\n  deleteInterviewId;\n  deleteInterviewName;\n  \n  @ViewChild('confirmDlg', {static: false})\n  confirmDlg: ConfirmDialogComponent;\n\n  @ViewChild('messageDlg', {static: false})\n  messageDlg: MessageDialogComponent;\n  constructor(private router: Router,\n    private InterviewMasterService: InterviewMasterService) {\n  }\n\n  async ngOnInit() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const rel = await this.InterviewMasterService.fetchInterviewList();\n    if (rel) {\n      this.interview = this.InterviewMasterService.getInterviewList;\n    } else {\n      alert(this.InterviewMasterService.getErrorMessage);\n    }\n  }\n\n  editInterview(id) {\n    console.log(\"id\",id);\n    this.router.navigate([`interview-master/add-interview/${id}`]);\n  }\n\n  gotoPage(pageName: string) {\n    this.router.navigate([pageName])\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.table_data.filter = filterValue;\n  }\n\n  async openDeleteInterview(u: InterviewMaster) {\n    console.log(\"user\",u);\n    \n    this.deleteInterviewId = u.interview_id;\n    this.deleteInterviewName = u.name;\n    this.confirmDlg.openDialog('Delete Interview',\n      `Confirmation 1: Do you really want to delete Interview <b>${this.deleteInterviewName}</b>?`,\n      await this.openDeleteInterview2.bind(this));\n  }\n\n  async openDeleteInterview2(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete Interview',\n        `Confirmation 2: Do you really want to delete Interview <b>${this.deleteInterviewName}</b>?`,\n        await this.openDeleteInterview3.bind(this));\n    }\n  }\n\n  async openDeleteInterview3(flag: boolean) {\n    if (flag) {\n      this.confirmDlg.openDialog('Delete Interview',\n        `Confirmation 3: Do you really want to delete Interview <b>${this.deleteInterviewName}</b>?`,\n        await this.onDeleteInterview.bind(this));\n    }\n  }\n\n  async onDeleteInterview(flag: boolean) {\n    console.log(\"flag\",flag);\n    if (flag) {\n      console.log(\"deleteInterviewId\",this.deleteInterviewId);\n      const rel = await this.InterviewMasterService.deleteInterview(this.deleteInterviewId);\n      if (rel) {\n        this.loadData();\n      } else {\n        this.messageDlg.openDialog(this.InterviewMasterService.getErrorMessage);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InterviewMasterRoutingModule } from './interview-master-routing.module';\nimport { AddInterviewComponent } from './add-interview/add-interview.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { InterviewMasterComponent } from './interview-master.component';\nimport { sharedStylesheetJitUrl } from '@angular/compiler';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  declarations: [\n    InterviewMasterComponent,\n    AddInterviewComponent,\n  ],\n  imports: [\n    CommonModule,\n    InterviewMasterRoutingModule,\n    MatButtonModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    HttpClientModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatRadioModule, \n    MatMenuModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatProgressBarModule,\n    MatPaginatorModule,\n    SharedModule\n\n  ]\n})\nexport class InterviewMasterModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as apiUrl from '../apiUrls';\nimport { DatesRange } from './model/dates-range.model';\nimport { InterviewMark } from './model/interview-mark.model';\nimport { InterviewMaster } from './model/interview-master.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterviewMasterService {\n\n  private httpErrorMessage = '';\n  interview: InterviewMaster[] = [];\n  interviewMark: InterviewMark[] = [];\n  constructor(private http: HttpClient) { }\n\n  get getErrorMessage(): string {\n    return this.httpErrorMessage;\n  }\n\n  get getInterviewList(): InterviewMaster[] {\n    return this.interview;\n  }\n\n  async fetchInterviewList(): Promise<boolean> {\n    return await this.http.get(\n      apiUrl.getApiInterviewMasterEndPoint).toPromise()\n      .then((response) => {\n        let result = response['data'];\n        this.interview = [];\n        for (let i of result) {\n          this.interview.push(InterviewMaster.fromJson(i));\n        }\n        console.log(this.interview);\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async addInterview(interview: InterviewMaster) {\n    return await this.http.post(\n      apiUrl.getApiAddInterviewMasterEndPoint, interview.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this);\n  }\n\n  async deleteInterview(interviewId): Promise<boolean> {\n    return await this.http.post(\n      apiUrl.getApiDeleteInterviewMasterEndPoint(interviewId), {}\n    ).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = ' User deleted';\n        return true;\n      }).catch(error => this.errorHandler(error));\n  }\n\n  async editInterview(interview: InterviewMaster) {\n    return await this.http.post(\n      apiUrl.getApiEditInterviewMastercollectionEndPoint, interview.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async addInterviewDates(dateList: DatesRange[]) {\n    console.log(dateList);\n    const dateArray = [];\n    for (const d of dateList) {\n      console.log(d);\n      dateArray.push(d.toJSON());\n    }\n    console.log(dateArray);\n    return await this.http.post(\n      apiUrl.getApiDatesInterviewMastercollectionEndPoint, { dates: dateArray }).toPromise()\n      .then((response) => {\n        console.log(response);\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this.errorHandler(error));\n  }\n\n  async interviewMarks(interview: InterviewMark){\n    return await this.http.post(\n      apiUrl.getApiInterviewMarksEndPoint, interview.toJSON()).toPromise()\n      .then((response) => {\n        this.httpErrorMessage = response['message'];\n        return true;\n      }).catch((error) => this);\n  }\n  errorHandler(error: HttpErrorResponse): boolean {\n    if (error.status === 400) {\n      this.httpErrorMessage = 'Server Error';\n    } else if (error.status === 403) {\n      this.httpErrorMessage = 'Forbidden!!';\n    } else {\n      this.httpErrorMessage = 'Server Error!!';\n    }\n    return false;\n  }\n}\n","export class DatesRange {\n    id: number;\n    fromDate: Date;\n    toDate: Date;\n\n    static fromJson(data: Map<string, any>): DatesRange {\n        const u: DatesRange = new DatesRange();\n        u.id = data['id'];\n        u.fromDate = new Date(data['from_date']);\n        u.toDate = new Date(data['to_date']);\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();\n        data['id'] = this.id;\n        data['from_date'] = this.fromDate;\n        data['to_date'] = this.toDate;\n        return data;\n    }\n}\n","export class InterviewMark {\n    unreserved_max: number;\n    unreserved_min: number;\n    EWS_max: number;\n    EWS_min: number;\n    OBC_NCL_max: number;\n    OBC_NCL_min: number;\n    SC_max: number;\n    SC_min: number;\n    ST_max: number;\n    ST_min: number;\n\n\n\n\n    public constructor(init?: Partial<InterviewMark>) {\n        Object.assign(this, init);\n    }\n\n    static fromJson(data: Map<string, any>): InterviewMark {\n        const u: InterviewMark = new InterviewMark();\n        u.unreserved_max = data['unreserved_max'];\n        u.unreserved_min = data['unreserved_min'];\n        u.EWS_max = data['EWS_max'];\n        u.EWS_min = data['EWS_min'];\n        u.OBC_NCL_max = data['OBC_NCL_max'];\n        u.OBC_NCL_min = data['OBC_NCL_min'];\n        u.SC_max = data['SC_max'];\n        u.SC_min = data['SC_min'];\n        u.ST_max = data['ST_max'];\n        u.ST_min = data['ST_min'];\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();    \n            data['unreserved_max'] = this.unreserved_max;\n            data['unreserved_min'] = this.unreserved_min;\n            data['EWS_max'] = this.EWS_max;\n            data['EWS_min'] = this.EWS_min;\n            data['OBC_NCL_max'] = this.OBC_NCL_max;\n            data['OBC_NCL_min'] = this.OBC_NCL_min;\n            data['SC_max'] = this.SC_max;\n            data['SC_min'] = this.SC_min;\n            data['ST_max'] = this.ST_max;\n            data['ST_min'] = this.ST_min;\n        return data;\n    }\n}\n","export class InterviewMaster {\n    interview_id: number;\n    name: string;\n    notification_no: number;\n    status: string;\n   \n    public constructor(init?: Partial<InterviewMaster>) {\n        Object.assign(this, init);\n    }\n\n    static fromJson(data: Map<string, any>): InterviewMaster {\n        const u: InterviewMaster = new InterviewMaster();\n        u.interview_id = data['interview_id'];\n        u.name = data['name'];\n        u.notification_no = data['notification_no'];\n        u.status = data['status'];\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();    \n            data['interview_id'] = this.interview_id;\n            data['name'] = this.name;\n            data['notification_no'] = this.notification_no;\n            data['status'] = this.status\n        return data;\n    }\n}\n","export class MapVerficationOfficer {\n    fromDate: Date;\n    toDate: Date;\n    checked: boolean;\n    officer: string\n\n    static fromJson(data: Map<string, any>): MapVerficationOfficer {\n        const u: MapVerficationOfficer = new MapVerficationOfficer();\n        u.fromDate = new Date(data['from_date']);\n        u.toDate = new Date(data['to_date']);\n        u.checked = data['checked'];\n        u.officer = data['officer'];\n        return u;\n    }\n\n    toJSON(): Map<string, any> {\n        const data: Map<string, any> = new Map<string, any>();\n        data['from_date'] = this.fromDate;\n        data['to_date'] = this.toDate;\n        data['officer'] = this.officer\n        data['checked'] = this.checked;\n        return data;\n    }\n}\n"]}