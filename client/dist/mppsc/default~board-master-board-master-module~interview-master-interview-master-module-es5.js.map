{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///src/app/apiUrls.ts"],"names":["_c0","MatChipEvent","MatChipSelectionChange","source","selected","isUserInput","MatChipBase","_elementRef","_MatChipMixinBase","MatChipAvatar","ɵfac","MatChipAvatar_Factory","t","ɵdir","type","selectors","hostAttrs","args","selector","host","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","_ngZone","platform","globalRippleOptions","animationMode","_changeDetectorRef","tabIndex","_document","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","createElement","classList","add","nativeElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","basicChipAttrName","element","hasAttribute","tagName","toLowerCase","emit","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","focus","next","removable","event","disabled","preventDefault","stopPropagation","keyCode","remove","selectable","toggleSelected","onStable","asObservable","pipe","subscribe","run","markForCheck","disableRipple","value","coercedValue","_value","undefined","textContent","toString","MatChip_Factory","contentQueries","MatChip_ContentQueries","rf","ctx","dirIndex","MatChipRemove","_t","avatar","first","trailingIcon","removeIcon","hostVars","hostBindings","MatChip_HostBindings","MatChip_click_HostBindingHandler","$event","_handleClick","MatChip_keydown_HostBindingHandler","_handleKeydown","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","inputs","color","outputs","exportAs","features","ctorParameters","decorators","String","propDecorators","_parentChip","elementRef","nodeName","setAttribute","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MatChipsDefaultOptions","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","_dir","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_onTouched","_onChange","_multiple","_compareWith","o1","o2","_required","ariaOrientation","change","valueChange","valueAccessor","_keyManager","chips","withWrap","withVerticalOrientation","withHorizontalOrientation","dir","tabOut","_allowFocusEscape","changes","Promise","resolve","then","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","updateErrorState","complete","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","fn","isDisabled","_originatesFromChip","options","focused","length","setFirstItemActive","_focusInput","target","_isInputEmpty","setLastItemActive","contains","onKeydown","newChipIndex","Math","min","setActiveItem","index","input","_clearSelection","forEach","deselect","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","skip","clear","fallbackValue","valueToEmit","map","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","unsubscribe","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","toArray","indexOf","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","empty","writeValue","id","placeholder","_placeholder","MatChipList_Factory","ɵcmp","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","required","errorState","compareWith","errorStateMatcher","provide","useExisting","ngContentSelectors","decls","vars","consts","template","MatChipList_Template","styles","encapsulation","changeDetection","descendants","providers","None","OnPush","MatChipInputEvent","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","ɵmod","ɵinj","factory","MatChipsModule_Factory","useValue","ngJitMode","declarations","exports","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","imports","_c1","_c2","MAT_GRID_LIST","MatGridListBase","MatGridTile","_element","_gridList","_rowspan","_colspan","property","style","round","MatGridTile_Factory","MatGridTile_HostBindings","rowspan","colspan","MatGridTile_Template","MatGridTileText","_lines","MatGridTileText_Factory","MatGridTileText_ContentQueries","MatGridTileText_Template","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","Tile","TileCoordinator","columnIndex","rowIndex","numColumns","tiles","tracker","fill","positions","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","Error","gapEndIndex","_nextRow","_findGapEndIndex","max","i","start","lastRowMax","rowCount","row","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","direction","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","offset","calc","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","side","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","test","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_gutter","_checkCols","_checkRowHeight","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","reset","_tileCoordinator","filter","update","init","pos","setStyle","getComputedHeight","newValue","MatGridList_Factory","MatGridList_ContentQueries","MatGridList_HostBindings","MatGridList_Template","MatGridListModule","MatGridListModule_Factory","_c3","MatListOption_mat_pseudo_checkbox_2_Template","ctx_r0","_c4","_c5","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","_stateChanges","MatNavList_Factory","ɵMatNavList_BaseFactory","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","navList","_isInteractiveList","_list","_getHostElement","MatListItem_Factory","MatListItem_ContentQueries","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","_isRippleDisabled","directives","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","checkboxPosition","_inputsInitialized","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","toggle","_emitChangeEvent","_setFocusedOption","selectedOptions","_color","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","MatListOption_Template","_contentInitialized","a1","a2","_","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","changed","added","item","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","optionIndex","_getOptionIndex","activeItemIndex","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","shiftKey","_getSelectedOptionValues","activeIndex","values","correspondingOption","focusedIndex","focusedOption","skipDisabled","hasChanged","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","MatSelectionList_Template","MatListModule","MatListModule_Factory","ProgressAnimationEnd","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","providedIn","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","_animationMode","_isNoopAnimation","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","_rectangleFillValue","scale","transform","bufferValue","runOutsideAngular","_primaryValueBar","e","v","clamp","MatProgressBar_Factory","MatProgressBar_Query","MatProgressBar_HostBindings","MatProgressBar_Template","_bufferTransform","_primaryTransform","MatProgressBarModule","MatProgressBarModule_Factory","MatSortHeader_div_3_Template","_r2","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r1","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MatSortable","Sort","MatSortBase","_MatSortMixinBase","MatSort","sortables","Map","sortChange","sortable","set","active","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_markInitialized","_disableClear","MatSort_Factory","ɵMatSort_BaseFactory","sortOrder","reverse","push","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","sortButtonLabel","MatSortHeaderIntl_Factory","ɵprov","token","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","useFactory","MatSortHeaderBase","_MatSortHeaderMixinBase","ArrowViewStateTransition","MatSortHeaderColumnDef","MatSortHeader","_intl","changeDetectorRef","_sort","_columnDef","_focusMonitor","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","monitor","origin","_setIndicatorHintVisible","name","register","stopMonitoring","deregister","visible","_isDisabled","viewState","sort","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","_getAriaSortAttribute","attrs","MatSortHeader_Template","_renderArrow","data","animation","animations","MatSortModule","MatSortModule_Factory","getApiUserMastercollectionEndPoint","getApiAddUserMastercollectionEndPoint","getApiBoardMastercollectionEndPoint","getApiAddBoardMastercollectionEndPoint","getApiDeleteUserMastercollectionEndPoint","userId","getApiDetailsUserMastercollectionEndPoint","getApiUpdateUserMastercollectionEndPoint","getApiGuestUserMastercollectionEndPoint","getApiAddGuestUserMastercollectionEndPoint","getApiEditGuestUserMastercollectionEndPoint","getApiAddGuestUserMasterDatescollectionEndPoint","getApiEditGuestUserMasterDatescollectionEndPoint","getApiDetailsGuestUserMastercollectionEndPoint","getApiDeleteGuestUserMastercollectionEndPoint","getApiDetailsBoardUserMastercollectionEndPoint","boardId","getApiDeleteBoardUserMastercollectionEndPoint","getApiEditBoardMastercollectionEndPoint","getApiAddInterviewMasterEndPoint","getApiInterviewMasterEndPoint"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAeA;;;;;;AAKA;;;;;;AAUA,QAAMA,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASC,YAAT,GAAwB,CAAG;;AAC3B,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;QAGMC,sB;AACF;;;;;AAKA,oCAAYC,MAAZ,EAAoBC,QAApB,EAAmD;AAAA,UAArBC,WAAqB,uEAAP,KAAO;;AAAA;;AAC/C,WAAKF,MAAL,GAAcA,MAAd;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAgBV,C,CACD;;AACA;;;;;QAGMC,W;AACF;;;AAGA,yBAAYC,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAKV;AACD;;;AACA,QAAMC,iBAAiB,GAAG,6EAAc,0EAAW,kFAAmBF,WAAnB,CAAX,EAA4C,SAA5C,CAAd,EAAsE,CAAC,CAAvE,CAA1B;AACA;;;;;;QAIMG,a;;;;AAENA,iBAAa,CAACC,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAIH,aAAV,GAAP;AAAoC,KAA7F;;AACAA,iBAAa,CAACI,IAAd,GAAqB,gEAAyB;AAAEC,UAAI,EAAEL,aAAR;AAAuBM,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAtB,CAAlC;AAAoFC,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAA/F,KAAzB,CAArB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBP,aAAzB,EAAwC,CAAC;AAC9DK,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,kCADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwD,OAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMC,mB;;;;AAENA,uBAAmB,CAACV,IAApB,GAA2B,SAASW,2BAAT,CAAqCT,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAIQ,mBAAV,GAAP;AAA0C,KAA/G;;AACAA,uBAAmB,CAACP,IAApB,GAA2B,gEAAyB;AAAEC,UAAI,EAAEM,mBAAR;AAA6BL,eAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,EAA6B,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAA7B,CAAxC;AAAuGC,eAAS,EAAE,CAAC,CAAD,EAAI,wBAAJ;AAAlH,KAAzB,CAA3B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBI,mBAAzB,EAA8C,CAAC;AACpEN,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,+CADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAF8D,OAAD,CAA9C,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;QAGMG,O;;;;;AACF;;;;;;;;;;AAUA,uBAAYf,WAAZ,EAAyBgB,OAAzB,EAAkCC,QAAlC,EAA4CC,mBAA5C,EACA;AACAC,mBAFA,EAEeC,kBAFf,EAEmCC,QAFnC,EAGA;AACAC,eAJA,EAIW;AAAA;;AAAA;;AACP,kCAAMtB,WAAN;AACA,cAAKA,WAAL,GAAmBA,WAAnB;AACA,cAAKgB,OAAL,GAAeA,OAAf;AACA,cAAKI,kBAAL,GAA0BA,kBAA1B;AACA;;;;AAGA,cAAKG,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,cAAKC,kBAAL,GAA0B,IAA1B;AACA;;;;AAGA,cAAKC,iBAAL,GAAyB,KAAzB;AACA;;;;AAGA,cAAKC,iBAAL,GAAyB,KAAzB;AACA,cAAKC,SAAL,GAAiB,KAAjB;AACA,cAAKC,WAAL,GAAmB,IAAnB;AACA,cAAKC,SAAL,GAAiB,KAAjB;AACA,cAAKC,UAAL,GAAkB,IAAlB;AACA;;;;AAGA,cAAKC,QAAL,GAAgB,IAAI,4CAAJ,EAAhB;AACA;;;;AAGA,cAAKC,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;;;AAGA,cAAKC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;AAGA,cAAKC,SAAL,GAAiB,IAAI,0DAAJ,EAAjB;AACA;;;;AAGA,cAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;;AACA,cAAKC,iBAAL,GA7CO,CA8CP;AACA;AACA;;;AACA,cAAKC,iBAAL,GAAyB,CAACf,SAAS,IAAIgB,QAAd,EAAwBC,aAAxB,CAAsC,KAAtC,CAAzB;;AACA,cAAKF,iBAAL,CAAuBG,SAAvB,CAAiCC,GAAjC,CAAqC,iBAArC;;AACA,cAAKzC,WAAL,CAAiB0C,aAAjB,CAA+BC,WAA/B,CAA2C,MAAKN,iBAAhD;;AACA,cAAKO,WAAL,GAAmB,IAAI,qEAAJ,gCAAyB5B,OAAzB,EAAkC,MAAKqB,iBAAvC,EAA0DpB,QAA1D,CAAnB;;AACA,cAAK2B,WAAL,CAAiBC,kBAAjB,CAAoC7C,WAApC;;AACA,cAAK8C,YAAL,GAAoB5B,mBAAmB,IAAI,EAA3C;AACA,cAAK6B,mBAAL,GAA2B5B,aAAa,KAAK,gBAA7C;AACA,cAAKE,QAAL,GAAgBA,QAAQ,IAAI,IAAZ,GAAoB2B,QAAQ,CAAC3B,QAAD,CAAR,IAAsB,CAAC,CAA3C,GAAgD,CAAC,CAAjE;AAxDO;AAyDV;AACD;;;;;;;;;;AAwFA;;;4CAGoB;AAChB;AACA,cAAM4B,iBAAiB,GAAG,gBAA1B;AACA;;AACA,cAAMC,OAAO;AAAI;AAAkB,eAAKlD,WAAL,CAAiB0C,aAApD;;AACA,cAAIQ,OAAO,CAACC,YAAR,CAAqBF,iBAArB,KACAC,OAAO,CAACE,OAAR,CAAgBC,WAAhB,OAAkCJ,iBADtC,EACyD;AACrDC,mBAAO,CAACV,SAAR,CAAkBC,GAAlB,CAAsBQ,iBAAtB;AACA;AACH,WAJD,MAKK;AACDC,mBAAO,CAACV,SAAR,CAAkBC,GAAlB,CAAsB,mBAAtB;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKP,SAAL,CAAeoB,IAAf,CAAoB;AAAEC,gBAAI,EAAE;AAAR,WAApB;;AACA,eAAKX,WAAL,CAAiBY,oBAAjB;AACH;AACD;;;;;;;iCAIS;AACL,cAAI,CAAC,KAAK7B,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,iBAAK8B,wBAAL;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;mCAIW;AACP,cAAI,KAAK/B,SAAT,EAAoB;AAChB,iBAAKA,SAAL,GAAiB,KAAjB;;AACA,iBAAK8B,wBAAL;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;+CAIuB;AACnB,cAAI,CAAC,KAAK/B,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;;AACA,iBAAK8B,wBAAL,CAA8B,IAA9B;;AACA,iBAAKC,aAAL;AACH;AACJ;AACD;;;;;;;;yCAKoC;AAAA,cAArB5D,WAAqB,uEAAP,KAAO;AAChC,eAAK6B,SAAL,GAAiB,CAAC,KAAK9B,QAAvB;;AACA,eAAK4D,wBAAL,CAA8B3D,WAA9B;;AACA,eAAK4D,aAAL;;AACA,iBAAO,KAAK7D,QAAZ;AACH;AACD;;;;;;;gCAIQ;AACJ,cAAI,CAAC,KAAK0B,SAAV,EAAqB;AACjB,iBAAKvB,WAAL,CAAiB0C,aAAjB,CAA+BiB,KAA/B;;AACA,iBAAK5B,QAAL,CAAc6B,IAAd,CAAmB;AAAEL,kBAAI,EAAE;AAAR,aAAnB;AACH;;AACD,eAAKhC,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;;;;;;iCAOS;AACL,cAAI,KAAKsC,SAAT,EAAoB;AAChB,iBAAK1B,OAAL,CAAamB,IAAb,CAAkB;AAAEC,kBAAI,EAAE;AAAR,aAAlB;AACH;AACJ;AACD;;;;;;;;qCAKaO,K,EAAO;AAChB,cAAI,KAAKC,QAAT,EAAmB;AACfD,iBAAK,CAACE,cAAN;AACH,WAFD,MAGK;AACDF,iBAAK,CAACG,eAAN;AACH;AACJ;AACD;;;;;;;;uCAKeH,K,EAAO;AAClB,cAAI,KAAKC,QAAT,EAAmB;AACf;AACH;;AACD,kBAAQD,KAAK,CAACI,OAAd;AACI,iBAAK,4DAAL;AACA,iBAAK,+DAAL;AACI;AACA,mBAAKC,MAAL,GAFJ,CAGI;;AACAL,mBAAK,CAACE,cAAN;AACA;;AACJ,iBAAK,2DAAL;AACI;AACA,kBAAI,KAAKI,UAAT,EAAqB;AACjB,qBAAKC,cAAL,CAAoB,IAApB;AACH,eAJL,CAKI;;;AACAP,mBAAK,CAACE,cAAN;AACA;AAfR;AAiBH;AACD;;;;;;gCAGQ;AAAA;;AACJ;AACA;AACA;AACA;AACA,eAAKhD,OAAL,CAAasD,QAAb,CACKC,YADL,GAEKC,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGKC,SAHL;AAGgB;;;AAGhB,sBAAM;AACF,kBAAI,CAACzD,OAAL,CAAa0D,GAAb;AAAkB;;;AAGlB,wBAAM;AACF,oBAAI,CAACnD,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAACS,OAAL,CAAa4B,IAAb,CAAkB;AAAEL,oBAAI,EAAE;AAAR,eAAlB;AACH,aAND;AAOH,WAdD;AAeH;AACD;;;;;;;;mDAK8C;AAAA,cAArBzD,WAAqB,uEAAP,KAAO;AAC1C,eAAKmC,eAAL,CAAqBqB,IAArB,CAA0B;AACtB1D,kBAAM,EAAE,IADc;AAEtBE,uBAAW,EAAXA,WAFsB;AAGtBD,oBAAQ,EAAE,KAAK8B;AAHO,WAA1B;AAKH;AACD;;;;;;;wCAIgB;AACZ;AACA,cAAI,KAAKP,kBAAT,EAA6B;AACzB,iBAAKA,kBAAL,CAAwBuD,YAAxB;AACH;AACJ;;;4BAnQoB;AACjB,iBAAO,KAAKZ,QAAL,IAAiB,KAAKa,aAAtB,IAAuC,CAAC,CAAC,KAAK9B,YAAL,CAAkBiB,QAAlE;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKpC,SAAZ;AAAwB;AACzC;;;;;0BAIakD,K,EAAO;AAChB;AACA,cAAMC,YAAY,GAAG,oFAAsBD,KAAtB,CAArB;;AACA,cAAIC,YAAY,KAAK,KAAKnD,SAA1B,EAAqC;AACjC,iBAAKA,SAAL,GAAiBmD,YAAjB;;AACA,iBAAKrB,wBAAL;AACH;AACJ;AACD;;;;;;;4BAIY;AACR,iBAAO,KAAKsB,MAAL,KAAgBC,SAAhB,GACD,KAAKD,MADJ,GAED,KAAK/E,WAAL,CAAiB0C,aAAjB,CAA+BuC,WAFrC;AAGH;AACD;;;;;0BAIUJ,K,EAAO;AAAE,eAAKE,MAAL,GAAcF,KAAd;AAAsB;AACzC;;;;;;;;;;4BAOiB;AAAE,iBAAO,KAAKjD,WAAL,IAAoB,KAAKJ,kBAAhC;AAAqD;AACxE;;;;;0BAIeqD,K,EAAO;AAClB,eAAKjD,WAAL,GAAmB,oFAAsBiD,KAAtB,CAAnB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKnD,iBAAL,IAA0B,KAAKG,SAAtC;AAAkD;AACnE;;;;;0BAIagD,K,EAAO;AAChB,eAAKhD,SAAL,GAAiB,oFAAsBgD,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAIgB;AAAE,iBAAO,KAAK/C,UAAZ;AAAyB;AAC3C;;;;;0BAIc+C,K,EAAO;AACjB,eAAK/C,UAAL,GAAkB,oFAAsB+C,KAAtB,CAAlB;AACH;AACD;;;;;;;4BAImB;AACf;AACA;AACA,iBAAO,KAAKT,UAAL,KAAoB,KAAK3C,iBAAL,IAA0B,KAAK5B,QAAnD,IACH,KAAKA,QAAL,CAAcqF,QAAd,EADG,GACwB,IAD/B;AAEH;;;;MAhKiBjF,iB;;AAmVtBc,WAAO,CAACZ,IAAR,GAAe,SAASgF,eAAT,CAAyB9E,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIU,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,EAAgE,gEAAyB,oDAAzB,CAAhE,EAAyG,gEAAyB,8DAAzB,CAAzG,EAAoJ,gEAAyB,gFAAzB,EAAoD,CAApD,CAApJ,EAA4M,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA5M,EAAgQ,gEAAyB,+DAAzB,CAAhQ,EAAoT,gEAAyB,UAAzB,CAApT,EAA0V,gEAAyB,wDAAzB,EAAmC,CAAnC,CAA1V,CAAP;AAA0Y,KAAvb;;AACAA,WAAO,CAACT,IAAR,GAAe,gEAAyB;AAAEC,UAAI,EAAEQ,OAAR;AAAiBP,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,UAAD,CAAjD,EAA+D,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAA/D,CAA5B;AAAkH4E,oBAAc,EAAE,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,GAApC,EAAyCC,QAAzC,EAAmD;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AACnO,uEAAsBE,QAAtB,EAAgCtF,aAAhC,EAA+C,IAA/C;;AACA,uEAAsBsF,QAAtB,EAAgC3E,mBAAhC,EAAqD,IAArD;;AACA,uEAAsB2E,QAAtB,EAAgCC,aAAhC,EAA+C,IAA/C;AACH;;AAAC,YAAIH,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACI,MAAJ,GAAaD,EAAE,CAACE,KAArE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACM,YAAJ,GAAmBH,EAAE,CAACE,KAA3E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACO,UAAJ,GAAiBJ,EAAE,CAACE,KAAzE;AACH;AAAE,OATiC;AAS/BnF,eAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,UAAtB,EAAkC,qBAAlC,CAToB;AASsCsF,cAAQ,EAAE,EAThD;AASoDC,kBAAY,EAAE,SAASC,oBAAT,CAA8BX,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvJ,mEAAkB,OAAlB,EAA2B,SAASY,gCAAT,CAA0CC,MAA1C,EAAkD;AAAE,mBAAOZ,GAAG,CAACa,YAAJ,CAAiBD,MAAjB,CAAP;AAAkC,WAAjH,EAAmH,SAAnH,EAA8H,SAASE,kCAAT,CAA4CF,MAA5C,EAAoD;AAAE,mBAAOZ,GAAG,CAACe,cAAJ,CAAmBH,MAAnB,CAAP;AAAoC,WAAxN,EAA0N,OAA1N,EAAmO,SAASI,gCAAT,GAA4C;AAAE,mBAAOhB,GAAG,CAAC5B,KAAJ,EAAP;AAAqB,WAAtS,EAAwS,MAAxS,EAAgT,SAAS6C,+BAAT,GAA2C;AAAE,mBAAOjB,GAAG,CAACkB,KAAJ,EAAP;AAAqB,WAAlX;AACH;;AAAC,YAAInB,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,UAAnB,EAA+BC,GAAG,CAACxB,QAAJ,GAAe,IAAf,GAAsBwB,GAAG,CAAClE,QAAzD,EAAmE,UAAnE,EAA+EkE,GAAG,CAACxB,QAAJ,IAAgB,IAA/F,EAAqG,eAArG,EAAsHwB,GAAG,CAACxB,QAAJ,CAAamB,QAAb,EAAtH,EAA+I,eAA/I,EAAgKK,GAAG,CAACmB,YAApK;;AACA,oEAAmB,mBAAnB,EAAwCnB,GAAG,CAAC1F,QAA5C,EAAsD,sBAAtD,EAA8E0F,GAAG,CAACI,MAAlF,EAA0F,6BAA1F,EAAyHJ,GAAG,CAACM,YAAJ,IAAoBN,GAAG,CAACO,UAAjJ,EAA6J,mBAA7J,EAAkLP,GAAG,CAACxB,QAAtL,EAAgM,yBAAhM,EAA2NwB,GAAG,CAACxC,mBAA/N;AACH;AAAE,OAdiC;AAc/B4D,YAAM,EAAE;AAAEC,aAAK,EAAE,OAAT;AAAkBhC,qBAAa,EAAE,eAAjC;AAAkDvD,gBAAQ,EAAE,UAA5D;AAAwExB,gBAAQ,EAAE,UAAlF;AAA8FgF,aAAK,EAAE,OAArG;AAA8GT,kBAAU,EAAE,YAA1H;AAAwIL,gBAAQ,EAAE,UAAlJ;AAA8JF,iBAAS,EAAE;AAAzK,OAduB;AAciKgD,aAAO,EAAE;AAAE5E,uBAAe,EAAE,iBAAnB;AAAsCC,iBAAS,EAAE,WAAjD;AAA8DC,eAAO,EAAE;AAAvE,OAd1K;AAc8P2E,cAAQ,EAAE,CAAC,SAAD,CAdxQ;AAcqRC,cAAQ,EAAE,CAAC,wEAAD;AAd/R,KAAzB,CAAf;AAeA;;AACAhG,WAAO,CAACiG,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEzG,YAAI,EAAE;AAAR,OAD2B,EAE3B;AAAEA,YAAI,EAAE;AAAR,OAF2B,EAG3B;AAAEA,YAAI,EAAE;AAAR,OAH2B,EAI3B;AAAEA,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,gFAAD;AAAtB,SAArB;AAA/B,OAJ2B,EAK3B;AAAEH,YAAI,EAAE2G,MAAR;AAAgBD,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAL2B,EAM3B;AAAEH,YAAI,EAAE;AAAR,OAN2B,EAO3B;AAAEA,YAAI,EAAE2G,MAAR;AAAgBD,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAP2B,EAQ3B;AAAEH,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAR2B,CAAN;AAAA,KAAzB;;AAUAK,WAAO,CAACoG,cAAR,GAAyB;AACrBxB,YAAM,EAAE,CAAC;AAAEpF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACR,aAAD;AAA5B,OAAD,CADa;AAErB2F,kBAAY,EAAE,CAAC;AAAEtF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACG,mBAAD;AAA5B,OAAD,CAFO;AAGrBiF,gBAAU,EAAE,CAAC;AAAEvF,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC;AAAY;;;AAG1C;AAAA,iBAAM+E,aAAN;AAAA,SAH8B,CAAD;AAA5B,OAAD,CAHS;AAOrB5F,cAAQ,EAAE,CAAC;AAAEU,YAAI,EAAE;AAAR,OAAD,CAPW;AAQrBsE,WAAK,EAAE,CAAC;AAAEtE,YAAI,EAAE;AAAR,OAAD,CARc;AASrB6D,gBAAU,EAAE,CAAC;AAAE7D,YAAI,EAAE;AAAR,OAAD,CATS;AAUrBwD,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD,CAVW;AAWrBsD,eAAS,EAAE,CAAC;AAAEtD,YAAI,EAAE;AAAR,OAAD,CAXU;AAYrB0B,qBAAe,EAAE,CAAC;AAAE1B,YAAI,EAAE;AAAR,OAAD,CAZI;AAarB2B,eAAS,EAAE,CAAC;AAAE3B,YAAI,EAAE;AAAR,OAAD,CAbU;AAcrB4B,aAAO,EAAE,CAAC;AAAE5B,YAAI,EAAE;AAAR,OAAD;AAdY,KAAzB;AAgBA;;AAAc,KAAC,YAAY;AAAE,sEAAyBQ,OAAzB,EAAkC,CAAC;AACxDR,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCC,kBAAQ,0DADT;AAECgG,gBAAM,EAAE,CAAC,OAAD,EAAU,eAAV,EAA2B,UAA3B,CAFT;AAGCG,kBAAQ,EAAE,SAHX;AAIClG,cAAI,EAAE;AACF,qBAAS,8BADP;AAEF,+BAAmB,4BAFjB;AAGF,oBAAQ,QAHN;AAIF,yCAA6B,UAJ3B;AAKF,4CAAgC,QAL9B;AAMF,mDAAuC,4BANrC;AAOF,yCAA6B,UAP3B;AAQF,+CAAmC,qBARjC;AASF,+BAAmB,kBATjB;AAUF,oCAAwB,qBAVtB;AAWF,oCAAwB,cAXtB;AAYF,uBAAW,sBAZT;AAaF,yBAAa,wBAbX;AAcF,uBAAW,SAdT;AAeF,sBAAU;AAfR;AAJP,SAAD;AAFkD,OAAD,CAAlC,EAwBrB,YAAY;AAAE,eAAO,CAAC;AAAEL,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAuD;AAAEA,cAAI,EAAE;AAAR,SAAvD,EAAkF;AAAEA,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAC/H1G,gBAAI,EAAE;AADyH,WAAD,EAE/H;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,gFAAD;AAFP,WAF+H;AAA/B,SAAlF,EAKX;AAAEH,cAAI,EAAE2G,MAAR;AAAgBD,oBAAU,EAAE,CAAC;AAC/B1G,gBAAI,EAAE;AADyB,WAAD,EAE/B;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF+B;AAA5B,SALW,EAUX;AAAEH,cAAI,EAAE;AAAR,SAVW,EAUyB;AAAEA,cAAI,EAAE2G,MAAR;AAAgBD,oBAAU,EAAE,CAAC;AACnE1G,gBAAI,EAAE,uDAD6D;AAEnEG,gBAAI,EAAE,CAAC,UAAD;AAF6D,WAAD;AAA5B,SAVzB,EAaX;AAAEH,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAClC1G,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAFkC;AAA/B,SAbW,CAAP;AAkBF,OA1CS,EA0CP;AAAEuB,uBAAe,EAAE,CAAC;AAC9B1B,cAAI,EAAE;AADwB,SAAD,CAAnB;AAEV2B,iBAAS,EAAE,CAAC;AACZ3B,cAAI,EAAE;AADM,SAAD,CAFD;AAIV4B,eAAO,EAAE,CAAC;AACV5B,cAAI,EAAE;AADI,SAAD,CAJC;AAMVV,gBAAQ,EAAE,CAAC;AACXU,cAAI,EAAE;AADK,SAAD,CANA;AAQVsE,aAAK,EAAE,CAAC;AACRtE,cAAI,EAAE;AADE,SAAD,CARG;AAUV6D,kBAAU,EAAE,CAAC;AACb7D,cAAI,EAAE;AADO,SAAD,CAVF;AAYVwD,gBAAQ,EAAE,CAAC;AACXxD,cAAI,EAAE;AADK,SAAD,CAZA;AAcVsD,iBAAS,EAAE,CAAC;AACZtD,cAAI,EAAE;AADM,SAAD,CAdD;AAgBVoF,cAAM,EAAE,CAAC;AACTpF,cAAI,EAAE,0DADG;AAETG,cAAI,EAAE,CAACR,aAAD;AAFG,SAAD,CAhBE;AAmBV2F,oBAAY,EAAE,CAAC;AACftF,cAAI,EAAE,0DADS;AAEfG,cAAI,EAAE,CAACG,mBAAD;AAFS,SAAD,CAnBJ;AAsBViF,kBAAU,EAAE,CAAC;AACbvF,cAAI,EAAE,0DADO;AAEbG,cAAI,EAAE,CAAC;AAAa;;;AAED;AAAA,mBAAM+E,aAAN;AAAA,WAFZ,CAAD;AAFO,SAAD;AAtBF,OA1CO;AAqEb,KArEF;;AAsEd,QAAI,KAAJ,EAAW,CAuIV;AACD;;;;;;;;;;;;;;;QAaMA,a;AACF;;;;AAIA,6BAAY2B,WAAZ,EACA;AACAC,gBAFA,EAEY;AAAA;;AACR,aAAKD,WAAL,GAAmBA,WAAnB,CADQ,CAER;;AACA,YAAIC,UAAU,IAAIA,UAAU,CAAC3E,aAAX,CAAyB4E,QAAzB,KAAsC,QAAxD,EAAkE;AAC9DD,oBAAU,CAAC3E,aAAX,CAAyB6E,YAAzB,CAAsC,MAAtC,EAA8C,QAA9C;AACH;AACJ;AACD;;;;;;;;;qCAKazD,K,EAAO;AAChB;AACA,cAAM0D,UAAU,GAAG,KAAKJ,WAAxB;;AACA,cAAII,UAAU,CAAC3D,SAAX,IAAwB,CAAC2D,UAAU,CAACzD,QAAxC,EAAkD;AAC9CyD,sBAAU,CAACrD,MAAX;AACH,WALe,CAMhB;AACA;AACA;AACA;AACA;;;AACAL,eAAK,CAACG,eAAN;AACH;;;;;;AAELwB,iBAAa,CAACtF,IAAd,GAAqB,SAASsH,qBAAT,CAA+BpH,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAIoF,aAAV,EAAyB,gEAAyB1E,OAAzB,CAAzB,EAA4D,gEAAyB,wDAAzB,CAA5D,CAAP;AAAkH,KAA3K;;AACA0E,iBAAa,CAACnF,IAAd,GAAqB,gEAAyB;AAAEC,UAAI,EAAEkF,aAAR;AAAuBjF,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAlC;AAA+DC,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,EAAuB,wBAAvB,CAA1E;AAA4HuF,kBAAY,EAAE,SAAS0B,0BAAT,CAAoCpC,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC3O,mEAAkB,OAAlB,EAA2B,SAASqC,sCAAT,CAAgDxB,MAAhD,EAAwD;AAAE,mBAAOZ,GAAG,CAACa,YAAJ,CAAiBD,MAAjB,CAAP;AAAkC,WAAvH;AACH;AAAE;AAFuC,KAAzB,CAArB;AAGA;;AACAV,iBAAa,CAACuB,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEzG,YAAI,EAAEQ;AAAR,OADiC,EAEjC;AAAER,YAAI,EAAE;AAAR,OAFiC,CAAN;AAAA,KAA/B;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkF,aAAzB,EAAwC,CAAC;AAC9DlF,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,iBADX;AAECC,cAAI,EAAE;AACF,qBAAS,wCADP;AAEF,uBAAW;AAFT;AAFP,SAAD;AAFwD,OAAD,CAAxC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAEL,cAAI,EAAEQ;AAAR,SAAD,EAAoB;AAAER,cAAI,EAAE;AAAR,SAApB,CAAP;AAA0D,OATnD,EASqD,IATrD;AAS6D,KAT5E;;AAUd,QAAI,KAAJ,EAAW,CAMV;AAED;;;;;;AAKA;;;;;;AAIA,aAASqH,sBAAT,GAAkC,CAAG;;AACrC,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;AAIA,QAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;;;;;AAKA;;AACA;;;;QAGMC,e;AACF;;;;;;AAMA,6BAAYC,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD,EAAsEC,SAAtE,EAAiF;AAAA;;AAC7E,WAAKH,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAYV;AACD;;;AACA,QAAMC,qBAAqB,GAAG,+EAAgBL,eAAhB,CAA9B,C,CACA;;AACA;;;AACA,QAAIM,YAAY,GAAG,CAAnB;AACA;;;;QAGMC,iB;AACF;;;;AAIA,+BAAYzI,MAAZ,EAAoBiF,KAApB,EAA2B;AAAA;;AACvB,WAAKjF,MAAL,GAAcA,MAAd;AACA,WAAKiF,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;QAGMyD,W;;;;;AACF;;;;;;;;;AASA,2BAAYtI,WAAZ,EAAyBoB,kBAAzB,EAA6CmH,IAA7C,EAAmDP,WAAnD,EAAgEC,gBAAhE,EAAkFF,yBAAlF,EAA6GG,SAA7G,EAAwH;AAAA;;AAAA;;AACpH,oCAAMH,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE;AACA,eAAKlI,WAAL,GAAmBA,WAAnB;AACA,eAAKoB,kBAAL,GAA0BA,kBAA1B;AACA,eAAKmH,IAAL,GAAYA,IAAZ;AACA,eAAKL,SAAL,GAAiBA,SAAjB;AACA;;;;;AAIA,eAAKM,WAAL,GAAmB,eAAnB;AACA;;;;;;AAKA,eAAKC,uBAAL,GAA+B,IAA/B;AACA;;;;AAGA,eAAKC,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,eAAKC,IAAL,2BAA6BP,YAAY,EAAzC;AACA;;;;AAGA,eAAKQ,SAAL,GAAiB,CAAjB;AACA;;;;;AAIA,eAAKC,aAAL,GAAqB,IAArB;AACA;;;;AAGA,eAAKC,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,eAAKC,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;;AAIA,eAAKC,SAAL,GAAiB,KAAjB;;AACA,eAAKC,YAAL;AAAqB;;;;;AAKrB,kBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;;AAMA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKvH,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,eAAKwH,eAAL,GAAuB,YAAvB;AACA,eAAKzH,WAAL,GAAmB,IAAnB;AACA;;;;AAGA,eAAK0H,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;;;AAKA,eAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,YAAI,OAAKrB,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAesB,aAAf;AACH;;AA1EmH;AA2EvH;AACD;;;;;;;;;AA0MA;;;6CAGqB;AAAA;;AACjB,eAAKC,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKC,KAAzB,EACdC,QADc,GAEdC,uBAFc,GAGdC,yBAHc,CAGY,KAAKtB,IAAL,GAAY,KAAKA,IAAL,CAAU1D,KAAtB,GAA8B,KAH1C,CAAnB;;AAIA,cAAI,KAAK0D,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUe,MAAV,CACK9E,IADL,CACU,iEAAU,KAAKkE,UAAf,CADV,EAEKjE,SAFL;AAEgB;;;;AAIhB,sBAAAqF,GAAG;AAAA,qBAAI,MAAI,CAACL,WAAL,CAAiBI,yBAAjB,CAA2CC,GAA3C,CAAJ;AAAA,aANH;AAOH;;AACD,eAAKL,WAAL,CAAiBM,MAAjB,CAAwBvF,IAAxB,CAA6B,iEAAU,KAAKkE,UAAf,CAA7B,EAAyDjE,SAAzD;AAAoE;;;AAGpE,sBAAM;AACF,kBAAI,CAACuF,iBAAL;AACH,WALD,EAdiB,CAoBjB;;;AACA,eAAKN,KAAL,CAAWO,OAAX,CAAmBzF,IAAnB,CAAwB,iEAAU,IAAV,CAAxB,EAAyC,iEAAU,KAAKkE,UAAf,CAAzC,EAAqEjE,SAArE;AAAgF;;;AAGhF,sBAAM;AACF,gBAAI,MAAI,CAACV,QAAT,EAAmB;AACf;AACA;AACAmG,qBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,0BAAM;AACF,sBAAI,CAACC,eAAL;AACH,eALD;AAMH;;AACD,kBAAI,CAACC,WAAL,GAXE,CAYF;;;AACA,kBAAI,CAACC,oBAAL,GAbE,CAcF;;;AACA,kBAAI,CAACC,eAAL,GAfE,CAgBF;;;AACA,kBAAI,CAACC,6BAAL;;AACA,kBAAI,CAACC,YAAL,CAAkB9G,IAAlB;AACH,WAtBD;AAuBH;AACD;;;;;;mCAGW;AACP,eAAK+G,eAAL,GAAuB,IAAI,wEAAJ,CAAmB,KAAKC,QAAxB,EAAkC5F,SAAlC,EAA6C,KAA7C,CAAvB;AACA,eAAK0F,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;oCAGY;AACR,cAAI,KAAKsE,SAAT,EAAoB;AAChB;AACA;AACA;AACA,iBAAK2C,gBAAL;;AACA,gBAAI,KAAK3C,SAAL,CAAenE,QAAf,KAA4B,KAAKlC,SAArC,EAAgD;AAC5C,mBAAKkC,QAAL,GAAgB,CAAC,CAAC,KAAKmE,SAAL,CAAenE,QAAjC;AACH;AACJ;AACJ;AACD;;;;;;sCAGc;AACV,eAAK2E,UAAL,CAAgB9E,IAAhB;;AACA,eAAK8E,UAAL,CAAgBoC,QAAhB;;AACA,eAAKJ,YAAL,CAAkBI,QAAlB;;AACA,eAAKC,kBAAL;AACH;AACD;;;;;;;;sCAKcC,Y,EAAc;AACxB,eAAKC,UAAL,GAAkBD,YAAlB;AACH;AACD;;;;;;;;;0CAMkBE,G,EAAK;AAAE,eAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AAAwC,S,CACjE;;AACA;;;;;;;mCAIWvG,K,EAAO;AACd,cAAI,KAAK6E,KAAT,EAAgB;AACZ,iBAAK2B,oBAAL,CAA0BxG,KAA1B,EAAiC,KAAjC;AACH;AACJ,S,CACD;;AACA;;;;;;;yCAIiByG,E,EAAI;AACjB,eAAKvC,SAAL,GAAiBuC,EAAjB;AACH,S,CACD;;AACA;;;;;;;0CAIkBA,E,EAAI;AAClB,eAAKxC,UAAL,GAAkBwC,EAAlB;AACH,S,CACD;;AACA;;;;;;;yCAIiBC,U,EAAY;AACzB,eAAKxH,QAAL,GAAgBwH,UAAhB;AACA,eAAKb,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;;;;yCAMiBE,K,EAAO;AACpB,cAAI,CAAC,KAAK0H,mBAAL,CAAyB1H,KAAzB,CAAL,EAAsC;AAClC,iBAAKH,KAAL;AACH;AACJ;AACD;;;;;;;;;8BAMM8H,O,EAAS;AACX,cAAI,KAAK1H,QAAT,EAAmB;AACf;AACH,WAHU,CAIX;AACA;;;AACA,cAAI,KAAKkH,UAAL,IAAmB,KAAKA,UAAL,CAAgBS,OAAvC,EAAgD,CAC5C;AACH,WAFD,MAGK,IAAI,KAAKhC,KAAL,CAAWiC,MAAX,GAAoB,CAAxB,EAA2B;AAC5B,iBAAKlC,WAAL,CAAiBmC,kBAAjB;;AACA,iBAAKlB,YAAL,CAAkB9G,IAAlB;AACH,WAHI,MAIA;AACD,iBAAKiI,WAAL,CAAiBJ,OAAjB;;AACA,iBAAKf,YAAL,CAAkB9G,IAAlB;AACH;AACJ;AACD;;;;;;;;oCAKY6H,O,EAAS;AACjB,cAAI,KAAKR,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBtH,KAAhB,CAAsB8H,OAAtB;AACH;AACJ;AACD;;;;;;;;iCAKS3H,K,EAAO;AACZ;AACA,cAAMgI,MAAM;AAAI;AAAkBhI,eAAK,CAACgI,MAAxC,CAFY,CAGZ;;AACA,cAAIhI,KAAK,CAACI,OAAN,KAAkB,+DAAlB,IAA+B,KAAK6H,aAAL,CAAmBD,MAAnB,CAAnC,EAA+D;AAC3D,iBAAKrC,WAAL,CAAiBuC,iBAAjB;;AACAlI,iBAAK,CAACE,cAAN;AACH,WAHD,MAIK,IAAI8H,MAAM,IAAIA,MAAM,CAACtJ,SAAP,CAAiByJ,QAAjB,CAA0B,UAA1B,CAAd,EAAqD;AACtD,gBAAInI,KAAK,CAACI,OAAN,KAAkB,0DAAtB,EAA4B;AACxB,mBAAKuF,WAAL,CAAiBmC,kBAAjB;;AACA9H,mBAAK,CAACE,cAAN;AACH,aAHD,MAIK,IAAIF,KAAK,CAACI,OAAN,KAAkB,yDAAtB,EAA2B;AAC5B,mBAAKuF,WAAL,CAAiBuC,iBAAjB;;AACAlI,mBAAK,CAACE,cAAN;AACH,aAHI,MAIA;AACD,mBAAKyF,WAAL,CAAiByC,SAAjB,CAA2BpI,KAA3B;AACH;;AACD,iBAAK4G,YAAL,CAAkB9G,IAAlB;AACH;AACJ;AACD;;;;;;;;0CAKkB;AACd;AACA,eAAKgF,SAAL,GAAiB,KAAKC,aAAL,KAAuB,KAAKa,KAAL,CAAWiC,MAAX,KAAsB,CAAtB,GAA0B,CAAC,CAA3B,GAA+B,CAAtD,CAAjB;AACH;AACD;;;;;;;;;wDAMgC;AAC5B;AACA,cAAI,KAAKlD,uBAAL,IAAgC,IAApC,EAA0C;AACtC,gBAAI,KAAKiB,KAAL,CAAWiC,MAAf,EAAuB;AACnB;AACA,kBAAMQ,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAK5D,uBAAd,EAAuC,KAAKiB,KAAL,CAAWiC,MAAX,GAAoB,CAA3D,CAArB;;AACA,mBAAKlC,WAAL,CAAiB6C,aAAjB,CAA+BH,YAA/B;AACH,aAJD,MAKK;AACD,mBAAKxI,KAAL;AACH;AACJ;;AACD,eAAK8E,uBAAL,GAA+B,IAA/B;AACH;AACD;;;;;;;;;;sCAOc8D,K,EAAO;AACjB,iBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAK7C,KAAL,CAAWiC,MAAxC;AACH;AACD;;;;;;;;sCAKczI,O,EAAS;AACnB,cAAIA,OAAO,IAAIA,OAAO,CAACoE,QAAR,CAAiBjE,WAAjB,OAAmC,OAAlD,EAA2D;AACvD;AACA,gBAAImJ,KAAK;AAAI;AAAkBtJ,mBAA/B;AACA,mBAAO,CAACsJ,KAAK,CAAC3H,KAAd;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;6CAKqBA,K,EAA2B;AAAA;;AAAA,cAApB/E,WAAoB,uEAAN,IAAM;;AAC5C,eAAK2M,eAAL;;AACA,eAAK/C,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,oBAAAnJ,IAAI;AAAA,mBAAIA,IAAI,CAACoJ,QAAL,EAAJ;AAAA,WAJJ;;AAKA,cAAIC,KAAK,CAACC,OAAN,CAAchI,KAAd,CAAJ,EAA0B;AACtBA,iBAAK,CAAC6H,OAAN;AAAe;;;;AAIf,sBAAAI,YAAY;AAAA,qBAAI,MAAI,CAACC,YAAL,CAAkBD,YAAlB,EAAgChN,WAAhC,CAAJ;AAAA,aAJZ;;AAKA,iBAAKkN,WAAL;AACH,WAPD,MAQK;AACD;AACA,gBAAMC,iBAAiB,GAAG,KAAKF,YAAL,CAAkBlI,KAAlB,EAAyB/E,WAAzB,CAA1B,CAFC,CAGD;AACA;;;AACA,gBAAImN,iBAAJ,EAAuB;AACnB,kBAAInN,WAAJ,EAAiB;AACb,qBAAK2J,WAAL,CAAiB6C,aAAjB,CAA+BW,iBAA/B;AACH;AACJ;AACJ;AACJ;AACD;;;;;;;;;;qCAOapI,K,EAA2B;AAAA;;AAAA,cAApB/E,WAAoB,uEAAN,IAAM;;AACpC;AACA,cAAMmN,iBAAiB,GAAG,KAAKvD,KAAL,CAAWwD,IAAX;AAAiB;;;;AAI3C,oBAAA3J,IAAI,EAAI;AACJ,mBAAOA,IAAI,CAACsB,KAAL,IAAc,IAAd,IAAsB,MAAI,CAACoE,YAAL,CAAkB1F,IAAI,CAACsB,KAAvB,EAA8BA,KAA9B,CAA7B;AACH,WANyB,CAA1B;;AAOA,cAAIoI,iBAAJ,EAAuB;AACnBnN,uBAAW,GAAGmN,iBAAiB,CAACE,oBAAlB,EAAH,GAA8CF,iBAAiB,CAACG,MAAlB,EAAzD;;AACA,iBAAKzC,eAAL,CAAqByC,MAArB,CAA4BH,iBAA5B;AACH;;AACD,iBAAOA,iBAAP;AACH;AACD;;;;;;;+CAIuB;AAAA;;AACnB;AACA;AACA/C,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,gBAAI,MAAI,CAAClC,SAAL,IAAkB,MAAI,CAACnD,MAA3B,EAAmC;AAC/B,oBAAI,CAACsG,oBAAL,CAA0B,MAAI,CAACnD,SAAL,GAAiB,MAAI,CAACA,SAAL,CAAerD,KAAhC,GAAwC,MAAI,CAACE,MAAvE,EAA+E,KAA/E;;AACA,oBAAI,CAAC2F,YAAL,CAAkB9G,IAAlB;AACH;AACJ,WARD;AASH;AACD;;;;;;;;;wCAMgByJ,I,EAAM;AAClB,eAAK1C,eAAL,CAAqB2C,KAArB;;AACA,eAAK5D,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,oBAAAnJ,IAAI,EAAI;AACJ,gBAAIA,IAAI,KAAK8J,IAAb,EAAmB;AACf9J,kBAAI,CAACoJ,QAAL;AACH;AACJ,WARD;AASA,eAAKjC,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;;;;sCAMc;AAAA;;AACV,cAAI,KAAKoF,SAAT,EAAoB;AAChB,iBAAK2B,eAAL,CAAqB2C,KAArB;;AACA,iBAAK5D,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,sBAAAnJ,IAAI,EAAI;AACJ,kBAAIA,IAAI,CAAC1D,QAAT,EAAmB;AACf,sBAAI,CAAC8K,eAAL,CAAqByC,MAArB,CAA4B7J,IAA5B;AACH;AACJ,aARD;AASA,iBAAKmH,YAAL,CAAkB9G,IAAlB;AACH;AACJ;AACD;;;;;;;;;0CAMkB2J,a,EAAe;AAC7B;AACA,cAAIC,WAAW,GAAG,IAAlB;;AACA,cAAIZ,KAAK,CAACC,OAAN,CAAc,KAAKhN,QAAnB,CAAJ,EAAkC;AAC9B2N,uBAAW,GAAG,KAAK3N,QAAL,CAAc4N,GAAd;AAAmB;;;;AAIjC,sBAAAlK,IAAI;AAAA,qBAAIA,IAAI,CAACsB,KAAT;AAAA,aAJU,CAAd;AAKH,WAND,MAOK;AACD2I,uBAAW,GAAG,KAAK3N,QAAL,GAAgB,KAAKA,QAAL,CAAcgF,KAA9B,GAAsC0I,aAApD;AACH;;AACD,eAAKxI,MAAL,GAAcyI,WAAd;AACA,eAAKlE,MAAL,CAAYhG,IAAZ,CAAiB,IAAI+E,iBAAJ,CAAsB,IAAtB,EAA4BmF,WAA5B,CAAjB;AACA,eAAKjE,WAAL,CAAiBjG,IAAjB,CAAsBkK,WAAtB;;AACA,eAAKzE,SAAL,CAAeyE,WAAf;;AACA,eAAKpM,kBAAL,CAAwBuD,YAAxB;AACH;AACD;;;;;;;gCAIQ;AAAA;;AACJ,cAAI,CAAC,KAAK+I,eAAL,EAAL,EAA6B;AACzB,iBAAKjE,WAAL,CAAiB6C,aAAjB,CAA+B,CAAC,CAAhC;AACH;;AACD,cAAI,CAAC,KAAKvI,QAAV,EAAoB;AAChB,gBAAI,KAAKkH,UAAT,EAAqB;AACjB;AACA;AACA;AACA;AACA0C,wBAAU;AAAE;;;AAGZ,0BAAM;AACF,oBAAI,CAAC,MAAI,CAACjC,OAAV,EAAmB;AACf,wBAAI,CAACkC,cAAL;AACH;AACJ,eAPS,CAAV;AAQH,aAbD,MAcK;AACD;AACA,mBAAKA,cAAL;AACH;AACJ;AACJ;AACD;;;;;;;yCAIiB;AACb,eAAK9E,UAAL;;AACA,eAAK1H,kBAAL,CAAwBuD,YAAxB;;AACA,eAAK+F,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;;;;4CAMoB;AAAA;;AAChB,cAAI,KAAKgF,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,iBAAKA,SAAL,GAAiB,CAAC,CAAlB;AACA+E,sBAAU;AAAE;;;AAGZ,wBAAM;AACF,qBAAI,CAAC/E,SAAL,GAAiB,OAAI,CAACC,aAAL,IAAsB,CAAvC;;AACA,qBAAI,CAACzH,kBAAL,CAAwBuD,YAAxB;AACH,aANS,CAAV;AAOH;AACJ;AACD;;;;;;;sCAIc;AACV,eAAKoG,kBAAL;;AACA,eAAK8C,mBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAKC,qBAAL;AACH;AACD;;;;;;;6CAIqB;AACjB,cAAI,KAAKC,sBAAT,EAAiC;AAC7B,iBAAKA,sBAAL,CAA4BC,WAA5B;;AACA,iBAAKD,sBAAL,GAA8B,IAA9B;AACH;;AACD,cAAI,KAAKE,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,CAA2BD,WAA3B;;AACA,iBAAKC,qBAAL,GAA6B,IAA7B;AACH;;AACD,cAAI,KAAKC,0BAAT,EAAqC;AACjC,iBAAKA,0BAAL,CAAgCF,WAAhC;;AACA,iBAAKE,0BAAL,GAAkC,IAAlC;AACH;;AACD,cAAI,KAAKC,uBAAT,EAAkC;AAC9B,iBAAKA,uBAAL,CAA6BH,WAA7B;;AACA,iBAAKG,uBAAL,GAA+B,IAA/B;AACH;AACJ;AACD;;;;;;;;kDAK0B;AAAA;;AACtB,eAAKD,0BAAL,GAAkC,KAAKE,oBAAL,CAA0B5J,SAA1B;AAAqC;;;;AAIvE,oBAAAX,KAAK,EAAI;AACLA,iBAAK,CAAClE,MAAN,CAAaC,QAAb,GACM,OAAI,CAAC8K,eAAL,CAAqByC,MAArB,CAA4BtJ,KAAK,CAAClE,MAAlC,CADN,GAEM,OAAI,CAAC+K,eAAL,CAAqBgC,QAArB,CAA8B7I,KAAK,CAAClE,MAApC,CAFN,CADK,CAIL;;AACA,gBAAI,CAAC,OAAI,CAACgL,QAAV,EAAoB;AAChB,qBAAI,CAAClB,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,wBAAAnJ,IAAI,EAAI;AACJ,oBAAI,CAAC,OAAI,CAACoH,eAAL,CAAqB2D,UAArB,CAAgC/K,IAAhC,CAAD,IAA0CA,IAAI,CAAC1D,QAAnD,EAA6D;AACzD0D,sBAAI,CAACoJ,QAAL;AACH;AACJ,eARD;AASH;;AACD,gBAAI7I,KAAK,CAAChE,WAAV,EAAuB;AACnB,qBAAI,CAACyO,iBAAL;AACH;AACJ,WAvBiC,CAAlC;AAwBH;AACD;;;;;;;;8CAKsB;AAAA;;AAClB,eAAKP,sBAAL,GAA8B,KAAKQ,gBAAL,CAAsB/J,SAAtB;AAAiC;;;;AAI/D,oBAAAX,KAAK,EAAI;AACL;AACA,gBAAI2K,SAAS,GAAG,OAAI,CAAC/E,KAAL,CAAWgF,OAAX,GAAqBC,OAArB,CAA6B7K,KAAK,CAACP,IAAnC,CAAhB;;AACA,gBAAI,OAAI,CAACqL,aAAL,CAAmBH,SAAnB,CAAJ,EAAmC;AAC/B,qBAAI,CAAChF,WAAL,CAAiBoF,gBAAjB,CAAkCJ,SAAlC;AACH;;AACD,mBAAI,CAAC/D,YAAL,CAAkB9G,IAAlB;AACH,WAX6B,CAA9B;AAYA,eAAKsK,qBAAL,GAA6B,KAAKY,eAAL,CAAqBrK,SAArB;AAAgC;;;AAG7D,sBAAM;AACF,mBAAI,CAACgC,KAAL;;AACA,mBAAI,CAACiE,YAAL,CAAkB9G,IAAlB;AACH,WAN4B,CAA7B;AAOH;AACD;;;;;;;gDAIwB;AAAA;;AACpB,eAAKwK,uBAAL,GAA+B,KAAKW,iBAAL,CAAuBtK,SAAvB;AAAkC;;;;AAIjE,oBAAAX,KAAK,EAAI;AACL;AACA,gBAAMP,IAAI,GAAGO,KAAK,CAACP,IAAnB;AACA;;AACA,gBAAMkL,SAAS,GAAG,OAAI,CAAC/E,KAAL,CAAWgF,OAAX,GAAqBC,OAArB,CAA6B7K,KAAK,CAACP,IAAnC,CAAlB,CAJK,CAKL;AACA;AACA;;;AACA,gBAAI,OAAI,CAACqL,aAAL,CAAmBH,SAAnB,KAAiClL,IAAI,CAAChC,SAA1C,EAAqD;AACjD,qBAAI,CAACkH,uBAAL,GAA+BgG,SAA/B;AACH;AACJ,WAf8B,CAA/B;AAgBH;AACD;;;;;;;;;4CAMoB3K,K,EAAO;AACvB;AACA,cAAIkL,cAAc;AAAI;AAAkBlL,eAAK,CAACgI,MAA9C;;AACA,iBAAOkD,cAAc,IAAIA,cAAc,KAAK,KAAKhP,WAAL,CAAiB0C,aAA7D,EAA4E;AACxE,gBAAIsM,cAAc,CAACxM,SAAf,CAAyByJ,QAAzB,CAAkC,UAAlC,CAAJ,EAAmD;AAC/C,qBAAO,IAAP;AACH;;AACD+C,0BAAc,GAAGA,cAAc,CAACC,aAAhC;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;0CAKkB;AACd,iBAAO,KAAKvF,KAAL,CAAWwF,IAAX;AAAiB;;;;AAIxB,oBAAA3L,IAAI;AAAA,mBAAIA,IAAI,CAAChC,SAAT;AAAA,WAJG,CAAP;AAKH;AACD;;;;;;;;0CAKkB;AAAA;;AACd,cAAI,KAAKmI,KAAT,EAAgB;AACZ,iBAAKA,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,sBAAAnJ,IAAI,EAAI;AACJA,kBAAI,CAAC7B,iBAAL,GAAyB,OAAI,CAACG,SAA9B;AACA0B,kBAAI,CAAC9B,iBAAL,GAAyB,OAAI,CAACmJ,QAA9B;AACH,aAPD;AAQH;AACJ;;;4BA/xBc;AACX,iBAAO,KAAKA,QAAL,GAAgB,KAAKD,eAAL,CAAqB9K,QAArC,GAAgD,KAAK8K,eAAL,CAAqB9K,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;;;;4BAIW;AAAE,iBAAO,KAAKsP,KAAL,GAAa,IAAb,GAAoB,SAA3B;AAAuC;AACpD;;;;;;;4BAIe;AAAE,iBAAO,KAAKnG,SAAZ;AAAwB;AACzC;;;;;0BAIanE,K,EAAO;AAChB,eAAKmE,SAAL,GAAiB,oFAAsBnE,KAAtB,CAAjB;;AACA,eAAKwF,eAAL;AACH;AACD;;;;;;;;;4BAMkB;AAAE,iBAAO,KAAKpB,YAAZ;AAA2B;AAC/C;;;;;0BAIgBqC,E,EAAI;AAChB,eAAKrC,YAAL,GAAoBqC,EAApB;;AACA,cAAI,KAAKX,eAAT,EAA0B;AACtB;AACA,iBAAKJ,oBAAL;AACH;AACJ;AACD;;;;;;;;4BAKY;AAAE,iBAAO,KAAKxF,MAAZ;AAAqB;AACnC;;;;;0BAIUF,K,EAAO;AACb,eAAKuK,UAAL,CAAgBvK,KAAhB;AACA,eAAKE,MAAL,GAAcF,KAAd;AACH;AACD;;;;;;;;4BAKS;AACL,iBAAO,KAAKoG,UAAL,GAAkB,KAAKA,UAAL,CAAgBoE,EAAlC,GAAuC,KAAK1G,IAAnD;AACH;AACD;;;;;;;;4BAKe;AAAE,iBAAO,KAAKS,SAAZ;AAAwB;AACzC;;;;;0BAIavE,K,EAAO;AAChB,eAAKuE,SAAL,GAAiB,oFAAsBvE,KAAtB,CAAjB;AACA,eAAK6F,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;;;4BAKkB;AACd,iBAAO,KAAKqH,UAAL,GAAkB,KAAKA,UAAL,CAAgBqE,WAAlC,GAAgD,KAAKC,YAA5D;AACH;AACD;;;;;0BAIgB1K,K,EAAO;AACnB,eAAK0K,YAAL,GAAoB1K,KAApB;AACA,eAAK6F,YAAL,CAAkB9G,IAAlB;AACH;AACD;;;;;;;4BAIc;AACV,iBAAQ,KAAKqH,UAAL,IAAmB,KAAKA,UAAL,CAAgBS,OAApC,IAAgD,KAAKgC,eAAL,EAAvD;AACH;AACD;;;;;;;;4BAKY;AACR,iBAAO,CAAC,CAAC,KAAKzC,UAAN,IAAoB,KAAKA,UAAL,CAAgBkE,KAArC,KAA+C,KAAKzF,KAAL,CAAWiC,MAAX,KAAsB,CAA5E;AACH;AACD;;;;;;;;4BAKuB;AAAE,iBAAO,CAAC,KAAKwD,KAAN,IAAe,KAAKzD,OAA3B;AAAqC;AAC9D;;;;;;;;4BAKe;AAAE,iBAAO,KAAKxD,SAAL,GAAiB,CAAC,CAAC,KAAKA,SAAL,CAAenE,QAAlC,GAA6C,KAAKlC,SAAzD;AAAqE;AACtF;;;;;0BAIagD,K,EAAO;AAChB,eAAKhD,SAAL,GAAiB,oFAAsBgD,KAAtB,CAAjB;;AACA,eAAKwF,eAAL;AACH;AACD;;;;;;;;4BAKiB;AAAE,iBAAO,KAAKzI,WAAZ;AAA0B;AAC7C;;;;;0BAIeiD,K,EAAO;AAAA;;AAClB,eAAKjD,WAAL,GAAmB,oFAAsBiD,KAAtB,CAAnB;;AACA,cAAI,KAAK6E,KAAT,EAAgB;AACZ,iBAAKA,KAAL,CAAWgD,OAAX;AAAoB;;;;AAIpB,sBAAAnJ,IAAI;AAAA,qBAAIA,IAAI,CAAC/B,kBAAL,GAA0B,OAAI,CAACI,WAAnC;AAAA,aAJJ;AAKH;AACJ;AACD;;;;;;;0BAIaiD,K,EAAO;AAChB,eAAKgE,aAAL,GAAqBhE,KAArB;AACA,eAAK+D,SAAL,GAAiB/D,KAAjB;AACH;AACD;;;;;;;4BAI2B;AACvB,iBAAO,oFAAS,KAAK6E,KAAL,CAAW+D,GAAX;AAAgB;;;;AAIhC,oBAAAlK,IAAI;AAAA,mBAAIA,IAAI,CAACtB,eAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIuB;AACnB,iBAAO,oFAAS,KAAKyH,KAAL,CAAW+D,GAAX;AAAgB;;;;AAIhC,oBAAAlK,IAAI;AAAA,mBAAIA,IAAI,CAACxB,QAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIsB;AAClB,iBAAO,oFAAS,KAAK2H,KAAL,CAAW+D,GAAX;AAAgB;;;;AAIhC,oBAAAlK,IAAI;AAAA,mBAAIA,IAAI,CAACvB,OAAT;AAAA,WAJY,CAAT,EAAP;AAKH;AACD;;;;;;;4BAIwB;AACpB,iBAAO,oFAAS,KAAK0H,KAAL,CAAW+D,GAAX;AAAgB;;;;AAIhC,oBAAAlK,IAAI;AAAA,mBAAIA,IAAI,CAACrB,SAAT;AAAA,WAJY,CAAT,EAAP;AAKH;;;;MA/RqBiG,qB;;AA23B1BG,eAAW,CAACnI,IAAZ,GAAmB,SAASqP,mBAAT,CAA6BnP,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIiI,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,iEAAzB,EAAgD,CAAhD,CAAxH,EAA4K,gEAAyB,sDAAzB,EAAwC,CAAxC,CAA5K,EAAwN,gEAAyB,kEAAzB,EAAoD,CAApD,CAAxN,EAAgR,gEAAyB,wEAAzB,CAAhR,EAAoU,gEAAyB,yDAAzB,EAA2C,EAA3C,CAApU,CAAP;AAA6X,KAAlb;;AACAA,eAAW,CAACmH,IAAZ,GAAmB,gEAAyB;AAAElP,UAAI,EAAE+H,WAAR;AAAqB9H,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqD4E,oBAAc,EAAE,SAASsK,0BAAT,CAAoCpK,EAApC,EAAwCC,GAAxC,EAA6CC,QAA7C,EAAuD;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AAC9K,uEAAsBE,QAAtB,EAAgCzE,OAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAIuE,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACmE,KAAJ,GAAYhE,EAAjE;AACH;AAAE,OALqC;AAKnCjF,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CALwB;AAKFsF,cAAQ,EAAE,EALR;AAKYC,kBAAY,EAAE,SAAS2J,wBAAT,CAAkCrK,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvH,mEAAkB,OAAlB,EAA2B,SAASsK,oCAAT,GAAgD;AAAE,mBAAOrK,GAAG,CAAC5B,KAAJ,EAAP;AAAqB,WAAlG,EAAoG,MAApG,EAA4G,SAASkM,mCAAT,GAA+C;AAAE,mBAAOtK,GAAG,CAACkB,KAAJ,EAAP;AAAqB,WAAlL,EAAoL,SAApL,EAA+L,SAASqJ,sCAAT,CAAgD3J,MAAhD,EAAwD;AAAE,mBAAOZ,GAAG,CAACwK,QAAJ,CAAa5J,MAAb,CAAP;AAA8B,WAAvR;AACH;;AAAC,YAAIb,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,IAAtB,EAA4BC,GAAG,CAACoD,IAAhC;;AACA,oEAAmB,UAAnB,EAA+BpD,GAAG,CAACxB,QAAJ,GAAe,IAAf,GAAsBwB,GAAG,CAACqD,SAAzD,EAAoE,kBAApE,EAAwFrD,GAAG,CAAC4F,gBAAJ,IAAwB,IAAhH,EAAsH,eAAtH,EAAuI5F,GAAG,CAACyK,IAAJ,GAAWzK,GAAG,CAAC0K,QAAf,GAA0B,IAAjK,EAAuK,eAAvK,EAAwL1K,GAAG,CAACxB,QAAJ,CAAamB,QAAb,EAAxL,EAAiN,cAAjN,EAAiOK,GAAG,CAAC2K,UAArO,EAAiP,sBAAjP,EAAyQ3K,GAAG,CAACqF,QAA7Q,EAAuR,MAAvR,EAA+RrF,GAAG,CAACyK,IAAnS,EAAyS,kBAAzS,EAA6TzK,GAAG,CAAC8D,eAAjU;;AACA,oEAAmB,wBAAnB,EAA6C9D,GAAG,CAACxB,QAAjD,EAA2D,uBAA3D,EAAoFwB,GAAG,CAAC2K,UAAxF,EAAoG,wBAApG,EAA8H3K,GAAG,CAAC0K,QAAlI;AACH;AAAE,OAXqC;AAWnCtJ,YAAM,EAAE;AAAE0C,uBAAe,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CAAnB;AAA4DuB,gBAAQ,EAAE,UAAtE;AAAkFuF,mBAAW,EAAE,aAA/F;AAA8GtL,aAAK,EAAE,OAArH;AAA8HoL,gBAAQ,EAAE,UAAxI;AAAoJX,mBAAW,EAAE,aAAjK;AAAgLvL,gBAAQ,EAAE,UAA1L;AAAsMK,kBAAU,EAAE,YAAlN;AAAgO/C,gBAAQ,EAAE,UAA1O;AAAsP+O,yBAAiB,EAAE;AAAzQ,OAX2B;AAWqQvJ,aAAO,EAAE;AAAEyC,cAAM,EAAE,QAAV;AAAoBC,mBAAW,EAAE;AAAjC,OAX9Q;AAWgUzC,cAAQ,EAAE,CAAC,aAAD,CAX1U;AAW2VC,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEsJ,eAAO,EAAE,iFAAX;AAAgCC,mBAAW,EAAEhI;AAA7C,OAAD,CAA1B,CAAD,EAA0F,wEAA1F,CAXrW;AAWmeiI,wBAAkB,EAAE9Q,GAXvf;AAW4f+Q,WAAK,EAAE,CAXngB;AAWsgBC,UAAI,EAAE,CAX5gB;AAW+gBC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,CAXvhB;AAWujBC,cAAQ,EAAE,SAASC,oBAAT,CAA8BtL,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1pB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB;;AACA;AACH;AAAE,OAhBqC;AAgBnCuL,YAAM,EAAE,CAAC,6/FAAD,CAhB2B;AAgBs+FC,mBAAa,EAAE,CAhBr/F;AAgBw/FC,qBAAe,EAAE;AAhBzgG,KAAzB,CAAnB;AAiBA;;AACAzI,eAAW,CAACtB,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEzG,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAE,iEAAR;AAAwB0G,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAApC,OAH+B,EAI/B;AAAEA,YAAI,EAAE,sDAAR;AAAgB0G,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAA5B,OAJ+B,EAK/B;AAAEA,YAAI,EAAE,kEAAR;AAA4B0G,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAAxC,OAL+B,EAM/B;AAAEA,YAAI,EAAE;AAAR,OAN+B,EAO/B;AAAEA,YAAI,EAAE,yDAAR;AAAmB0G,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB;AAA/B,OAP+B,CAAN;AAAA,KAA7B;;AASA+H,eAAW,CAACnB,cAAZ,GAA6B;AACzBiJ,uBAAiB,EAAE,CAAC;AAAE7P,YAAI,EAAE;AAAR,OAAD,CADM;AAEzBqK,cAAQ,EAAE,CAAC;AAAErK,YAAI,EAAE;AAAR,OAAD,CAFe;AAGzB4P,iBAAW,EAAE,CAAC;AAAE5P,YAAI,EAAE;AAAR,OAAD,CAHY;AAIzBsE,WAAK,EAAE,CAAC;AAAEtE,YAAI,EAAE;AAAR,OAAD,CAJkB;AAKzB0P,cAAQ,EAAE,CAAC;AAAE1P,YAAI,EAAE;AAAR,OAAD,CALe;AAMzB+O,iBAAW,EAAE,CAAC;AAAE/O,YAAI,EAAE;AAAR,OAAD,CANY;AAOzBwD,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD,CAPe;AAQzB8I,qBAAe,EAAE,CAAC;AAAE9I,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kBAAD;AAArB,OAAD,CARQ;AASzB0D,gBAAU,EAAE,CAAC;AAAE7D,YAAI,EAAE;AAAR,OAAD,CATa;AAUzBc,cAAQ,EAAE,CAAC;AAAEd,YAAI,EAAE;AAAR,OAAD,CAVe;AAWzB+I,YAAM,EAAE,CAAC;AAAE/I,YAAI,EAAE;AAAR,OAAD,CAXiB;AAYzBgJ,iBAAW,EAAE,CAAC;AAAEhJ,YAAI,EAAE;AAAR,OAAD,CAZY;AAazBmJ,WAAK,EAAE,CAAC;AAAEnJ,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACK,OAAD,EAAU;AACjC;AACA;AACAiQ,qBAAW,EAAE;AAHoB,SAAV;AAA/B,OAAD;AAbkB,KAA7B;AAmBA;;AAAc,KAAC,YAAY;AAAE,sEAAyB1I,WAAzB,EAAsC,CAAC;AAC5D/H,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,eADX;AAECgQ,kBAAQ,wEAFT;AAGC7J,kBAAQ,EAAE,aAHX;AAIClG,cAAI,EAAE;AACF,+BAAmB,6BADjB;AAEF,uCAA2B,0BAFzB;AAGF,oCAAwB,wBAHtB;AAIF,oCAAwB,qBAJtB;AAKF,mCAAuB,YALrB;AAMF,2CAA+B,UAN7B;AAOF,2BAAe,MAPb;AAQF,8CAAkC,UARhC;AASF,6CAAiC,YAT/B;AAUF,8CAAkC,UAVhC;AAWF,uCAA2B,iBAXzB;AAYF,qBAAS,eAZP;AAaF,uBAAW,SAbT;AAcF,sBAAU,SAdR;AAeF,yBAAa,kBAfX;AAgBF,oBAAQ;AAhBN,WAJP;AAsBCqQ,mBAAS,EAAE,CAAC;AAAEZ,mBAAO,EAAE,iFAAX;AAAgCC,uBAAW,EAAEhI;AAA7C,WAAD,CAtBZ;AAuBCwI,uBAAa,EAAE,gEAAkBI,IAvBlC;AAwBCH,yBAAe,EAAE,sEAAwBI,MAxB1C;AAyBCN,gBAAM,EAAE,CAAC,6/FAAD;AAzBT,SAAD;AAFsD,OAAD,CAAtC,EA6BrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE,iEAAR;AAA+B0G,oBAAU,EAAE,CAAC;AAC3H1G,gBAAI,EAAE;AADqH,WAAD;AAA3C,SAAlE,EAEX;AAAEA,cAAI,EAAE,sDAAR;AAAuB0G,oBAAU,EAAE,CAAC;AACtC1G,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAFW,EAIX;AAAEA,cAAI,EAAE,kEAAR;AAAmC0G,oBAAU,EAAE,CAAC;AAClD1G,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SAJW,EAMX;AAAEA,cAAI,EAAE;AAAR,SANW,EAMyB;AAAEA,cAAI,EAAE,yDAAR;AAA0B0G,oBAAU,EAAE,CAAC;AAC7E1G,gBAAI,EAAE;AADuE,WAAD,EAE7E;AACCA,gBAAI,EAAE;AADP,WAF6E;AAAtC,SANzB,CAAP;AAUF,OAvCS,EAuCP;AAAE8I,uBAAe,EAAE,CAAC;AAC9B9I,cAAI,EAAE,mDADwB;AAE9BG,cAAI,EAAE,CAAC,kBAAD;AAFwB,SAAD,CAAnB;AAGV4I,cAAM,EAAE,CAAC;AACT/I,cAAI,EAAE;AADG,SAAD,CAHE;AAKVgJ,mBAAW,EAAE,CAAC;AACdhJ,cAAI,EAAE;AADQ,SAAD,CALH;AAOVqK,gBAAQ,EAAE,CAAC;AACXrK,cAAI,EAAE;AADK,SAAD,CAPA;AASV4P,mBAAW,EAAE,CAAC;AACd5P,cAAI,EAAE;AADQ,SAAD,CATH;AAWVsE,aAAK,EAAE,CAAC;AACRtE,cAAI,EAAE;AADE,SAAD,CAXG;AAaV0P,gBAAQ,EAAE,CAAC;AACX1P,cAAI,EAAE;AADK,SAAD,CAbA;AAeV+O,mBAAW,EAAE,CAAC;AACd/O,cAAI,EAAE;AADQ,SAAD,CAfH;AAiBVwD,gBAAQ,EAAE,CAAC;AACXxD,cAAI,EAAE;AADK,SAAD,CAjBA;AAmBV6D,kBAAU,EAAE,CAAC;AACb7D,cAAI,EAAE;AADO,SAAD,CAnBF;AAqBVc,gBAAQ,EAAE,CAAC;AACXd,cAAI,EAAE;AADK,SAAD,CArBA;AAuBV6P,yBAAiB,EAAE,CAAC;AACpB7P,cAAI,EAAE;AADc,SAAD,CAvBT;AAyBVmJ,aAAK,EAAE,CAAC;AACRnJ,cAAI,EAAE,6DADE;AAERG,cAAI,EAAE,CAACK,OAAD,EAAU;AACR;AACA;AACAiQ,uBAAW,EAAE;AAHL,WAAV;AAFE,SAAD;AAzBG,OAvCO;AAuEb,KAvEF;;AAwEd,QAAI,KAAJ,EAAW,CAmLV;AAED;;;;;;AAKA;;;;;;AAIA,aAASI,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;AACA,QAAIC,cAAc,GAAG,CAArB;AACA;;;;;QAIMC,Y;AACF;;;;AAIA,4BAAYtR,WAAZ,EAAyBuR,eAAzB,EAA0C;AAAA;;AACtC,aAAKvR,WAAL,GAAmBA,WAAnB;AACA,aAAKuR,eAAL,GAAuBA,eAAvB;AACA;;;;AAGA,aAAK7F,OAAL,GAAe,KAAf;AACA,aAAK8F,UAAL,GAAkB,KAAlB;AACA;;;;;;AAKA,aAAKC,iBAAL,GAAyB,KAAKF,eAAL,CAAqBE,iBAA9C;AACA;;;;AAGA,aAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;AACA;;;;AAGA,aAAKpC,WAAL,GAAmB,EAAnB;AACA;;;;AAGA,aAAKD,EAAL,iCAAiCgC,cAAc,EAA/C;AACA,aAAKxP,SAAL,GAAiB,KAAjB;AACA,aAAK8P,aAAL;AAAsB;AAAkB,aAAK3R,WAAL,CAAiB0C,aAAzD;AACH;AACD;;;;;;;;;;AAoCA;;;sCAGc;AACV,eAAKkP,SAAL,CAAelH,YAAf,CAA4B9G,IAA5B;AACH;AACD;;;;;;;;iCAKSE,K,EAAO;AACZ;AACA;AACA,cAAIA,KAAK,IAAIA,KAAK,CAACI,OAAN,KAAkB,yDAA3B,IAAkC,CAAC,6EAAeJ,KAAf,EAAsB,UAAtB,CAAvC,EAA0E;AACtE,iBAAK8N,SAAL,CAAe5H,iBAAf;AACH;;AACD,eAAK6H,YAAL,CAAkB/N,KAAlB;AACH;AACD;;;;;;;gCAIQ;AACJ,cAAI,KAAKgO,SAAT,EAAoB;AAChB,iBAAKD,YAAL;AACH;;AACD,eAAKnG,OAAL,GAAe,KAAf,CAJI,CAKJ;;AACA,cAAI,CAAC,KAAKkG,SAAL,CAAelG,OAApB,EAA6B;AACzB,iBAAKkG,SAAL,CAAenL,KAAf;AACH;;AACD,eAAKmL,SAAL,CAAelH,YAAf,CAA4B9G,IAA5B;AACH;AACD;;;;;;iCAGS;AACL,eAAK8H,OAAL,GAAe,IAAf;;AACA,eAAKkG,SAAL,CAAelH,YAAf,CAA4B9G,IAA5B;AACH;AACD;;;;;;;;qCAKaE,K,EAAO;AAChB,cAAI,CAAC,KAAK6N,aAAL,CAAmB9M,KAApB,IAA6B,CAAC,CAACf,KAAnC,EAA0C;AACtC,iBAAK8N,SAAL,CAAe7B,QAAf,CAAwBjM,KAAxB;AACH;;AACD,cAAI,CAACA,KAAD,IAAU,KAAKiO,eAAL,CAAqBjO,KAArB,CAAd,EAA2C;AACvC,iBAAK4N,OAAL,CAAapO,IAAb,CAAkB;AAAEkJ,mBAAK,EAAE,KAAKmF,aAAd;AAA6B9M,mBAAK,EAAE,KAAK8M,aAAL,CAAmB9M;AAAvD,aAAlB;;AACA,gBAAIf,KAAJ,EAAW;AACPA,mBAAK,CAACE,cAAN;AACH;AACJ;AACJ;AACD;;;;;;mCAGW;AACP;AACA,eAAK4N,SAAL,CAAelH,YAAf,CAA4B9G,IAA5B;AACH;AACD;;;;;;;;8BAKM6H,O,EAAS;AACX,eAAKkG,aAAL,CAAmBhO,KAAnB,CAAyB8H,OAAzB;AACH;AACD;;;;;;;;;wCAMgB3H,K,EAAO;AACnB,cAAI,6EAAeA,KAAf,CAAJ,EAA2B;AACvB,mBAAO,KAAP;AACH;AACD;;;AACA,cAAMkO,UAAU,GAAG,KAAKP,iBAAxB;AACA;;AACA,cAAMvN,OAAO,GAAGJ,KAAK,CAACI,OAAtB;AACA,iBAAO0I,KAAK,CAACC,OAAN,CAAcmF,UAAd,IAA4BA,UAAU,CAACrD,OAAX,CAAmBzK,OAAnB,IAA8B,CAAC,CAA3D,GAA+D8N,UAAU,CAACC,GAAX,CAAe/N,OAAf,CAAtE;AACH;;;0BAtHYW,K,EAAO;AAChB,cAAIA,KAAJ,EAAW;AACP,iBAAK+M,SAAL,GAAiB/M,KAAjB;;AACA,iBAAK+M,SAAL,CAAeM,aAAf,CAA6B,IAA7B;AACH;AACJ;AACD;;;;;;;4BAIgB;AAAE,iBAAO,KAAKV,UAAZ;AAAyB;AAC3C;;;;;0BAIc3M,K,EAAO;AAAE,eAAK2M,UAAL,GAAkB,oFAAsB3M,KAAtB,CAAlB;AAAiD;AACxE;;;;;;;4BAIe;AAAE,iBAAO,KAAKhD,SAAL,IAAmB,KAAK+P,SAAL,IAAkB,KAAKA,SAAL,CAAe7N,QAA3D;AAAuE;AACxF;;;;;0BAIac,K,EAAO;AAAE,eAAKhD,SAAL,GAAiB,oFAAsBgD,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIY;AAAE,iBAAO,CAAC,KAAK8M,aAAL,CAAmB9M,KAA3B;AAAmC;;;;;;AA0FrDyM,gBAAY,CAACnR,IAAb,GAAoB,SAASgS,oBAAT,CAA8B9R,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAIiR,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyBzJ,yBAAzB,CAArE,CAAP;AAAmI,KAA1L;;AACAyJ,gBAAY,CAAChR,IAAb,GAAoB,gEAAyB;AAAEC,UAAI,EAAE+Q,YAAR;AAAsB9Q,eAAS,EAAE,CAAC,CAAC,OAAD,EAAU,iBAAV,EAA6B,EAA7B,CAAD,CAAjC;AAAqEC,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,EAAsB,mBAAtB,CAAhF;AAA4HsF,cAAQ,EAAE,CAAtI;AAAyIC,kBAAY,EAAE,SAASoM,yBAAT,CAAmC9M,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtP,mEAAkB,SAAlB,EAA6B,SAAS+M,uCAAT,CAAiDlM,MAAjD,EAAyD;AAAE,mBAAOZ,GAAG,CAACwK,QAAJ,CAAa5J,MAAb,CAAP;AAA8B,WAAtH,EAAwH,MAAxH,EAAgI,SAASmM,oCAAT,GAAgD;AAAE,mBAAO/M,GAAG,CAACkB,KAAJ,EAAP;AAAqB,WAAvM,EAAyM,OAAzM,EAAkN,SAAS8L,qCAAT,GAAiD;AAAE,mBAAOhN,GAAG,CAACiN,MAAJ,EAAP;AAAsB,WAA3R,EAA6R,OAA7R,EAAsS,SAASC,qCAAT,GAAiD;AAAE,mBAAOlN,GAAG,CAACmN,QAAJ,EAAP;AAAwB,WAAjX;AACH;;AAAC,YAAIpN,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,IAAtB,EAA4BC,GAAG,CAAC8J,EAAhC;;AACA,oEAAmB,UAAnB,EAA+B9J,GAAG,CAACxB,QAAJ,IAAgB,IAA/C,EAAqD,aAArD,EAAoEwB,GAAG,CAAC+J,WAAJ,IAAmB,IAAvF,EAA6F,cAA7F,EAA6G/J,GAAG,CAACqM,SAAJ,IAAiBrM,GAAG,CAACqM,SAAJ,CAAc1J,SAA/B,GAA2C3C,GAAG,CAACqM,SAAJ,CAAc1J,SAAd,CAAwByK,OAAnE,GAA6E,IAA1L,EAAgM,eAAhM,EAAiNpN,GAAG,CAACqM,SAAJ,IAAiBrM,GAAG,CAACqM,SAAJ,CAAc3B,QAA/B,IAA2C,IAA5P;AACH;AAAE,OALsC;AAKpCtJ,YAAM,EAAE;AAAE8K,yBAAiB,EAAE,CAAC,+BAAD,EAAkC,mBAAlC,CAArB;AAA6EnC,mBAAW,EAAE,aAA1F;AAAyGD,UAAE,EAAE,IAA7G;AAAmHuD,gBAAQ,EAAE,CAAC,iBAAD,EAAoB,UAApB,CAA7H;AAA8Jd,iBAAS,EAAE,CAAC,uBAAD,EAA0B,WAA1B,CAAzK;AAAiN/N,gBAAQ,EAAE;AAA3N,OAL4B;AAK6M8C,aAAO,EAAE;AAAE6K,eAAO,EAAE;AAAX,OALtN;AAK2P5K,cAAQ,EAAE,CAAC,cAAD,EAAiB,iBAAjB,CALrQ;AAK0SC,cAAQ,EAAE,CAAC,kEAAD;AALpT,KAAzB,CAApB;AAMA;;AACAuK,gBAAY,CAACtK,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEzG,YAAI,EAAE;AAAR,OADgC,EAEhC;AAAEA,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACmH,yBAAD;AAAtB,SAAD;AAA/B,OAFgC,CAAN;AAAA,KAA9B;;AAIAyJ,gBAAY,CAACnK,cAAb,GAA8B;AAC1ByL,cAAQ,EAAE,CAAC;AAAErS,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CADgB;AAE1BoR,eAAS,EAAE,CAAC;AAAEvR,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,uBAAD;AAArB,OAAD,CAFe;AAG1B+Q,uBAAiB,EAAE,CAAC;AAAElR,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,+BAAD;AAArB,OAAD,CAHO;AAI1BgR,aAAO,EAAE,CAAC;AAAEnR,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,sBAAD;AAAtB,OAAD,CAJiB;AAK1B4O,iBAAW,EAAE,CAAC;AAAE/O,YAAI,EAAE;AAAR,OAAD,CALa;AAM1B8O,QAAE,EAAE,CAAC;AAAE9O,YAAI,EAAE;AAAR,OAAD,CANsB;AAO1BwD,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD;AAPgB,KAA9B;AASA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+Q,YAAzB,EAAuC,CAAC;AAC7D/Q,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,wBADX;AAECmG,kBAAQ,EAAE,+BAFX;AAGClG,cAAI,EAAE;AACF,qBAAS,kCADP;AAEF,yBAAa,kBAFX;AAGF,sBAAU,SAHR;AAIF,uBAAW,UAJT;AAKF,uBAAW,YALT;AAMF,oBAAQ,IANN;AAOF,+BAAmB,kBAPjB;AAQF,kCAAsB,qBARpB;AASF,mCAAuB,uEATrB;AAUF,oCAAwB;AAVtB;AAHP,SAAD;AAFuD,OAAD,CAAvC,EAkBrB,YAAY;AAAE,eAAO,CAAC;AAAEL,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAC3E1G,gBAAI,EAAE,oDADqE;AAE3EG,gBAAI,EAAE,CAACmH,yBAAD;AAFqE,WAAD;AAA/B,SAA9B,CAAP;AAGF,OArBS,EAqBP;AAAE4J,yBAAiB,EAAE,CAAC;AAChClR,cAAI,EAAE,mDAD0B;AAEhCG,cAAI,EAAE,CAAC,+BAAD;AAF0B,SAAD,CAArB;AAGVgR,eAAO,EAAE,CAAC;AACVnR,cAAI,EAAE,oDADI;AAEVG,cAAI,EAAE,CAAC,sBAAD;AAFI,SAAD,CAHC;AAMV4O,mBAAW,EAAE,CAAC;AACd/O,cAAI,EAAE;AADQ,SAAD,CANH;AAQV8O,UAAE,EAAE,CAAC;AACL9O,cAAI,EAAE;AADD,SAAD,CARM;AAUVqS,gBAAQ,EAAE,CAAC;AACXrS,cAAI,EAAE,mDADK;AAEXG,cAAI,EAAE,CAAC,iBAAD;AAFK,SAAD,CAVA;AAaVoR,iBAAS,EAAE,CAAC;AACZvR,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,uBAAD;AAFM,SAAD,CAbD;AAgBVqD,gBAAQ,EAAE,CAAC;AACXxD,cAAI,EAAE;AADK,SAAD;AAhBA,OArBO;AAuCb,KAvCF;;AAwCd,QAAI,KAAJ,EAAW,CAyDV;AAED;;;;;;AAKA;;;AACA,QAAMsS,iBAAiB,GAAG,CACtBvK,WADsB,EAEtBvH,OAFsB,EAGtBuQ,YAHsB,EAItB7L,aAJsB,EAKtBvF,aALsB,EAMtBW,mBANsB,CAA1B;AAQA,QAAMiS,EAAE,GAAI;AACRrB,uBAAiB,EAAE,CAAC,2DAAD;AADX,KAAZ;;QAGMsB,c;;;;AAENA,kBAAc,CAACC,IAAf,GAAsB,+DAAwB;AAAEzS,UAAI,EAAEwS;AAAR,KAAxB,CAAtB;AACAA,kBAAc,CAACE,IAAf,GAAsB,+DAAwB;AAAEC,aAAO,EAAE,SAASC,sBAAT,CAAgC9S,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI0S,cAAV,GAAP;AAAqC,OAArF;AAAuF9B,eAAS,EAAE,CACxI,wEADwI,EAExI;AACIZ,eAAO,EAAExI,yBADb;AAEIuL,gBAAQ;AAAI;AAAiBN;AAFjC,OAFwI;AAAlG,KAAxB,CAAtB;;AAOA,KAAC,YAAY;AAAE,OAAC,OAAOO,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BN,cAA1B,EAA0C;AAAEO,oBAAY,EAAE,CAAChL,WAAD,EACpHvH,OADoH,EAEpHuQ,YAFoH,EAGpH7L,aAHoH,EAIpHvF,aAJoH,EAKpHW,mBALoH,CAAhB;AAK9E0S,eAAO,EAAE,CAACjL,WAAD,EAC/BvH,OAD+B,EAE/BuQ,YAF+B,EAG/B7L,aAH+B,EAI/BvF,aAJ+B,EAK/BW,mBAL+B;AALqE,OAA1C,CAAnD;AAUmB,KAVlC;AAWA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkS,cAAzB,EAAyC,CAAC;AAC/DxS,YAAI,EAAE,sDADyD;AAE/DG,YAAI,EAAE,CAAC;AACC6S,iBAAO,EAAEV,iBADV;AAECS,sBAAY,EAAET,iBAFf;AAGC5B,mBAAS,EAAE,CACP,wEADO,EAEP;AACIZ,mBAAO,EAAExI,yBADb;AAEIuL,oBAAQ;AAAI;AAAiBN;AAFjC,WAFO;AAHZ,SAAD;AAFyD,OAAD,CAAzC,EAarB,IAbqB,EAaf,IAbe;AAaP,KAbR;AAed;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACz4EA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;QAMMU,U;AACF,4BAAc;AAAA;;AACV,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKC,MAAL,GAAc,KAAd;AACH;AACD;;;;;;;;4BAIe;AAAE,iBAAO,KAAKD,SAAZ;AAAwB;AACzC;;;;;0BAIa5O,K,EAAO;AAAE,eAAK4O,SAAL,GAAiB,oFAAsB5O,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIY;AAAE,iBAAO,KAAK6O,MAAZ;AAAqB;AACnC;;;;;0BAIU7O,K,EAAO;AAAE,eAAK6O,MAAL,GAAc,oFAAsB7O,KAAtB,CAAd;AAA6C;;;;;;AAEpE2O,cAAU,CAACrT,IAAX,GAAkB,SAASwT,kBAAT,CAA4BtT,CAA5B,EAA+B;AAAE,aAAO,KAAKA,CAAC,IAAImT,UAAV,GAAP;AAAiC,KAApF;;AACAA,cAAU,CAAC/D,IAAX,GAAkB,gEAAyB;AAAElP,UAAI,EAAEiT,UAAR;AAAoBhT,eAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;AAAkDC,eAAS,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,CAAtB,EAAyB,aAAzB,CAA7D;AAAsGsF,cAAQ,EAAE,CAAhH;AAAmHC,kBAAY,EAAE,SAAS4N,uBAAT,CAAiCtO,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5N,oEAAmB,kBAAnB,EAAuCC,GAAG,CAACsO,QAAJ,GAAe,UAAf,GAA4B,YAAnE;;AACA,oEAAmB,sBAAnB,EAA2CtO,GAAG,CAACsO,QAA/C,EAAyD,wBAAzD,EAAmF,CAACtO,GAAG,CAACsO,QAAxF,EAAkG,mBAAlG,EAAuHtO,GAAG,CAACuO,KAA3H;AACH;AAAE,OAHoC;AAGlCnN,YAAM,EAAE;AAAEkN,gBAAQ,EAAE,UAAZ;AAAwBC,aAAK,EAAE;AAA/B,OAH0B;AAGgBtD,WAAK,EAAE,CAHvB;AAG0BC,UAAI,EAAE,CAHhC;AAGmCE,cAAQ,EAAE,SAASoD,mBAAT,CAA6BzO,EAA7B,EAAiCC,GAAjC,EAAsC,CAAG,CAHtF;AAGwFsL,YAAM,EAAE,CAAC,+SAAD,CAHhG;AAGmZC,mBAAa,EAAE,CAHla;AAGqaC,qBAAe,EAAE;AAHtb,KAAzB,CAAlB;AAIAyC,cAAU,CAACrM,cAAX,GAA4B;AACxB0M,cAAQ,EAAE,CAAC;AAAEtT,YAAI,EAAE;AAAR,OAAD,CADc;AAExBuT,WAAK,EAAE,CAAC;AAAEvT,YAAI,EAAE;AAAR,OAAD;AAFiB,KAA5B;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBiT,UAAzB,EAAqC,CAAC;AAC3DjT,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,aADX;AAECC,cAAI,EAAE;AACF,oBAAQ,WADN;AAEF,uCAA2B,sCAFzB;AAGF,4CAAgC,UAH9B;AAIF,8CAAkC,WAJhC;AAKF,yCAA6B,OAL3B;AAMF,qBAAS;AANP,WAFP;AAUC+P,kBAAQ,EAAE,EAVX;AAWCG,uBAAa,EAAE,gEAAkBI,IAXlC;AAYCH,yBAAe,EAAE,sEAAwBI,MAZ1C;AAaCN,gBAAM,EAAE,CAAC,+SAAD;AAbT,SAAD;AAFqD,OAAD,CAArC,EAiBrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAjBL,EAiBO;AAAEgD,gBAAQ,EAAE,CAAC;AACrCtT,cAAI,EAAE;AAD+B,SAAD,CAAZ;AAExBuT,aAAK,EAAE,CAAC;AACRvT,cAAI,EAAE;AADE,SAAD;AAFiB,OAjBP;AAqBb,KArBF;;AAsBd,QAAI,KAAJ,EAAW,CAeV;AAED;;;;;;;QAKMyT,gB;;;;AAENA,oBAAgB,CAAChB,IAAjB,GAAwB,+DAAwB;AAAEzS,UAAI,EAAEyT;AAAR,KAAxB,CAAxB;AACAA,oBAAgB,CAACf,IAAjB,GAAwB,+DAAwB;AAAEC,aAAO,EAAE,SAASe,wBAAT,CAAkC5T,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAI2T,gBAAV,GAAP;AAAuC,OAAzF;AAA2FE,aAAO,EAAE,CAAC,CAAC,sEAAD,CAAD,EAC5I,sEAD4I;AAApG,KAAxB,CAAxB;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BW,gBAA1B,EAA4C;AAAEV,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACE,UAAD,CAAP;AAAsB,SAApD;AAAsDU,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,CAAP;AAA2B,SAAxG;AAA0GX,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACC,UAAD,EAC9O,sEAD8O,CAAP;AACpN;AADmF,OAA5C,CAAnD;AACkB,KADjC;AAEA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBQ,gBAAzB,EAA2C,CAAC;AACjEzT,YAAI,EAAE,sDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCwT,iBAAO,EAAE,CAAC,sEAAD,CADV;AAECX,iBAAO,EAAE,CAACC,UAAD,EAAa,sEAAb,CAFV;AAGCF,sBAAY,EAAE,CAACE,UAAD;AAHf,SAAD;AAF2D,OAAD,CAA3C,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACrHA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;AAKA;;;;;;;AAQA,QAAM/T,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,QAAM0U,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAD,EAA2D,CAAC,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAAD,EAAuB,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAvB,CAA3D,EAAwG,GAAxG,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,oCAAD,EAAuC,uBAAvC,EAAgE,GAAhE,CAAZ;AACA,QAAMC,aAAa,GAAG,IAAI,4DAAJ,CAAmB,eAAnB,CAAtB;AACA;;;;;;AAKA,aAASC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAOV;AAED;;;;;;;QAKMC,W;AACF;;;;AAIA,2BAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAC7B,aAAKD,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACH;AACD;;;;;;;;;AAoBA;;;;;;;kCAOUC,Q,EAAU/P,K,EAAO;AACrB;AAAkB,eAAK2P,QAAL,CAAc9R,aAAd,CAA4BmS,KAAhD,CAAyDD,QAAzD,IAAqE/P,KAArE;AACH;;;4BAzBa;AAAE,iBAAO,KAAK6P,QAAZ;AAAuB;AACvC;;;;;0BAIY7P,K,EAAO;AAAE,eAAK6P,QAAL,GAAgBtI,IAAI,CAAC0I,KAAL,CAAW,mFAAqBjQ,KAArB,CAAX,CAAhB;AAA0D;AAC/E;;;;;;;4BAIc;AAAE,iBAAO,KAAK8P,QAAZ;AAAuB;AACvC;;;;;0BAIY9P,K,EAAO;AAAE,eAAK8P,QAAL,GAAgBvI,IAAI,CAAC0I,KAAL,CAAW,mFAAqBjQ,KAArB,CAAX,CAAhB;AAA0D;;;;;;AAYnF0P,eAAW,CAACpU,IAAZ,GAAmB,SAAS4U,mBAAT,CAA6B1U,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIkU,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyBF,aAAzB,EAAwC,CAAxC,CAApE,CAAP;AAAyH,KAA9K;;AACAE,eAAW,CAAC9E,IAAZ,GAAmB,gEAAyB;AAAElP,UAAI,EAAEgU,WAAR;AAAqB/T,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqDC,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CAAhE;AAAsFsF,cAAQ,EAAE,CAAhG;AAAmGC,kBAAY,EAAE,SAASgP,wBAAT,CAAkC1P,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9M,oEAAmB,SAAnB,EAA8BC,GAAG,CAAC0P,OAAlC,EAA2C,SAA3C,EAAsD1P,GAAG,CAAC2P,OAA1D;AACH;AAAE,OAFqC;AAEnCvO,YAAM,EAAE;AAAEsO,eAAO,EAAE,SAAX;AAAsBC,eAAO,EAAE;AAA/B,OAF2B;AAEiBpO,cAAQ,EAAE,CAAC,aAAD,CAF3B;AAE4CyJ,wBAAkB,EAAE9Q,GAFhE;AAEqE+Q,WAAK,EAAE,CAF5E;AAE+EC,UAAI,EAAE,CAFrF;AAEwFC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,YAAJ,CAAD,CAFhG;AAEqHC,cAAQ,EAAE,SAASwE,oBAAT,CAA8B7P,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxN;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA;AACH;AAAE,OAPqC;AAOnCuL,YAAM,EAAE,CAAC,svCAAD,CAP2B;AAO+tCC,mBAAa,EAAE,CAP9uC;AAOivCC,qBAAe,EAAE;AAPlwC,KAAzB,CAAnB;AAQA;;AACAwD,eAAW,CAACvN,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEzG,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC2T,aAAD;AAAtB,SAArB;AAA/B,OAF+B,CAAN;AAAA,KAA7B;;AAIAE,eAAW,CAACpN,cAAZ,GAA6B;AACzB8N,aAAO,EAAE,CAAC;AAAE1U,YAAI,EAAE;AAAR,OAAD,CADgB;AAEzB2U,aAAO,EAAE,CAAC;AAAE3U,YAAI,EAAE;AAAR,OAAD;AAFgB,KAA7B;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBgU,WAAzB,EAAsC,CAAC;AAC5DhU,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,eADX;AAECmG,kBAAQ,EAAE,aAFX;AAGClG,cAAI,EAAE;AACF,qBAAS,eADP;AAEF;AACA;AACA,8BAAkB,SAJhB;AAKF,8BAAkB;AALhB,WAHP;AAUC+P,kBAAQ,EAAE,0HAVX;AAWCG,uBAAa,EAAE,gEAAkBI,IAXlC;AAYCH,yBAAe,EAAE,sEAAwBI,MAZ1C;AAaCN,gBAAM,EAAE,CAAC,svCAAD;AAbT,SAAD;AAFsD,OAAD,CAAtC,EAiBrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAC3E1G,gBAAI,EAAE;AADqE,WAAD,EAE3E;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC2T,aAAD;AAFP,WAF2E;AAA/B,SAA9B,CAAP;AAKF,OAtBS,EAsBP;AAAEY,eAAO,EAAE,CAAC;AACtB1U,cAAI,EAAE;AADgB,SAAD,CAAX;AAEV2U,eAAO,EAAE,CAAC;AACV3U,cAAI,EAAE;AADI,SAAD;AAFC,OAtBO;AA0Bb,KA1BF;;AA2Bd,QAAI,KAAJ,EAAW,CAgBV;;QACK6U,e;AACF;;;AAGA,+BAAYZ,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACH;AACD;;;;;;;6CAGqB;AACjB,kFAAS,KAAKa,MAAd,EAAsB,KAAKb,QAA3B;AACH;;;;;;AAELY,mBAAe,CAACjV,IAAhB,GAAuB,SAASmV,uBAAT,CAAiCjV,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAI+U,eAAV,EAA2B,gEAAyB,wDAAzB,CAA3B,CAAP;AAAiF,KAA9I;;AACAA,mBAAe,CAAC3F,IAAhB,GAAuB,gEAAyB;AAAElP,UAAI,EAAE6U,eAAR;AAAyB5U,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,EAA2B,CAAC,sBAAD,CAA3B,CAApC;AAA0F4E,oBAAc,EAAE,SAASmQ,8BAAT,CAAwCjQ,EAAxC,EAA4CC,GAA5C,EAAiDC,QAAjD,EAA2D;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AAC3N,uEAAsBE,QAAtB,EAAgC,8DAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAIF,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC8P,MAAJ,GAAa3P,EAAlE;AACH;AAAE,OALyC;AAKvC6K,wBAAkB,EAAE6D,GALmB;AAKd5D,WAAK,EAAE,CALO;AAKJC,UAAI,EAAE,CALF;AAKKC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,CALb;AAK0CC,cAAQ,EAAE,SAAS6E,wBAAT,CAAkClQ,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,wEAAuB6O,GAAvB;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,OAZyC;AAYvCrD,mBAAa,EAAE,CAZwB;AAYrBC,qBAAe,EAAE;AAZI,KAAzB,CAAvB;AAaA;;AACAqE,mBAAe,CAACpO,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEzG,YAAI,EAAE;AAAR,OADmC,CAAN;AAAA,KAAjC;;AAGA6U,mBAAe,CAACjO,cAAhB,GAAiC;AAC7BkO,YAAM,EAAE,CAAC;AAAE9U,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD;AADqB,KAAjC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBoE,eAAzB,EAA0C,CAAC;AAChE7U,YAAI,EAAE,uDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,4CADX;AAECgQ,kBAAQ,EAAE,0MAFX;AAGCI,yBAAe,EAAE,sEAAwBI,MAH1C;AAICL,uBAAa,EAAE,gEAAkBI;AAJlC,SAAD;AAF0D,OAAD,CAA1C,EAQrB,YAAY;AAAE,eAAO,CAAC;AAAE3Q,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OARhC,EAQkC;AAAE8U,cAAM,EAAE,CAAC;AAC9D9U,cAAI,EAAE,6DADwD;AAE9DG,cAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,uBAAW,EAAE;AAAf,WAAV;AAFwD,SAAD;AAAV,OARlC;AAWb,KAXF;;AAYd,QAAI,KAAJ,EAAW,CAQV;AACD;;;;;;QAIMyE,yB;;;;AAENA,6BAAyB,CAACtV,IAA1B,GAAiC,SAASuV,iCAAT,CAA2CrV,CAA3C,EAA8C;AAAE,aAAO,KAAKA,CAAC,IAAIoV,yBAAV,GAAP;AAAgD,KAAjI;;AACAA,6BAAyB,CAACnV,IAA1B,GAAiC,gEAAyB;AAAEC,UAAI,EAAEkV,yBAAR;AAAmCjV,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAA9C;AAAwGC,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAnH,KAAzB,CAAjC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBgV,yBAAzB,EAAoD,CAAC;AAC1ElV,YAAI,EAAE,uDADoE;AAE1EG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,oCADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFoE,OAAD,CAApD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIM+U,6B;;;;AAENA,iCAA6B,CAACxV,IAA9B,GAAqC,SAASyV,qCAAT,CAA+CvV,CAA/C,EAAkD;AAAE,aAAO,KAAKA,CAAC,IAAIsV,6BAAV,GAAP;AAAoD,KAA7I;;AACAA,iCAA6B,CAACrV,IAA9B,GAAqC,gEAAyB;AAAEC,UAAI,EAAEoV,6BAAR;AAAuCnV,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAlD;AAA8EC,eAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ;AAAzF,KAAzB,CAArC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBkV,6BAAzB,EAAwD,CAAC;AAC9EpV,YAAI,EAAE,uDADwE;AAE9EG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,sBADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwE,OAAD,CAAxD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMiV,6B;;;;AAENA,iCAA6B,CAAC1V,IAA9B,GAAqC,SAAS2V,qCAAT,CAA+CzV,CAA/C,EAAkD;AAAE,aAAO,KAAKA,CAAC,IAAIwV,6BAAV,GAAP;AAAoD,KAA7I;;AACAA,iCAA6B,CAACvV,IAA9B,GAAqC,gEAAyB;AAAEC,UAAI,EAAEsV,6BAAR;AAAuCrV,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAlD;AAA8EC,eAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ;AAAzF,KAAzB,CAArC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBoV,6BAAzB,EAAwD,CAAC;AAC9EtV,YAAI,EAAE,uDADwE;AAE9EG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,sBADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwE,OAAD,CAAxD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAQd;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAKA,aAASmV,IAAT,GAAgB,CAAG;;AACnB,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;;;;;;;;;;;;;QAiBMC,e;AACF,iCAAc;AAAA;;AACV;;;AAGA,aAAKC,WAAL,GAAmB,CAAnB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,CAAhB;AACH;AACD;;;;;;;;;AAiBA;;;;;;+BAMOC,U,EAAYC,K,EAAO;AAAA;;AACtB,eAAKH,WAAL,GAAmB,CAAnB;AACA,eAAKC,QAAL,GAAgB,CAAhB;AACA,eAAKG,OAAL,GAAe,IAAIzJ,KAAJ,CAAUuJ,UAAV,CAAf;AACA,eAAKE,OAAL,CAAaC,IAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKD,OAAL,CAAa1K,MAArC;AACA,eAAK4K,SAAL,GAAiBH,KAAK,CAAC3I,GAAN;AAAW;;;;AAI5B,oBAAA+I,IAAI;AAAA,mBAAI,OAAI,CAACC,UAAL,CAAgBD,IAAhB,CAAJ;AAAA,WAJa,CAAjB;AAKH;AACD;;;;;;;;;mCAMWA,I,EAAM;AACb;;AACA;AACA,cAAME,aAAa,GAAG,KAAKC,gBAAL,CAAsBH,IAAI,CAACtB,OAA3B,CAAtB,CAHa,CAIb;;;AACA,eAAK0B,iBAAL,CAAuBF,aAAvB,EAAsCF,IAAtC,EALa,CAMb;AACA;;;AACA,eAAKP,WAAL,GAAmBS,aAAa,GAAGF,IAAI,CAACtB,OAAxC;AACA,iBAAO,IAAI2B,YAAJ,CAAiB,KAAKX,QAAtB,EAAgCQ,aAAhC,CAAP;AACH;AACD;;;;;;;;;yCAMiBI,Q,EAAU;AACvB,cAAIA,QAAQ,GAAG,KAAKT,OAAL,CAAa1K,MAA5B,EAAoC;AAChC,kBAAMoL,KAAK,CAAC,2CAAoCD,QAApC,kDACW,KAAKT,OAAL,CAAa1K,MADxB,QAAD,CAAX;AAEH,WAJsB,CAKvB;;AACA;;;AACA,cAAI+K,aAAa,GAAG,CAAC,CAArB;AACA;;AACA,cAAIM,WAAW,GAAG,CAAC,CAAnB,CATuB,CAUvB;;AACA,aAAG;AACC;AACA,gBAAI,KAAKf,WAAL,GAAmBa,QAAnB,GAA8B,KAAKT,OAAL,CAAa1K,MAA/C,EAAuD;AACnD,mBAAKsL,QAAL;;AACAP,2BAAa,GAAG,KAAKL,OAAL,CAAa1H,OAAb,CAAqB,CAArB,EAAwB,KAAKsH,WAA7B,CAAhB;AACAe,yBAAW,GAAG,KAAKE,gBAAL,CAAsBR,aAAtB,CAAd;AACA;AACH;;AACDA,yBAAa,GAAG,KAAKL,OAAL,CAAa1H,OAAb,CAAqB,CAArB,EAAwB,KAAKsH,WAA7B,CAAhB,CARD,CASC;;AACA,gBAAIS,aAAa,IAAI,CAAC,CAAtB,EAAyB;AACrB,mBAAKO,QAAL;;AACAP,2BAAa,GAAG,KAAKL,OAAL,CAAa1H,OAAb,CAAqB,CAArB,EAAwB,KAAKsH,WAA7B,CAAhB;AACAe,yBAAW,GAAG,KAAKE,gBAAL,CAAsBR,aAAtB,CAAd;AACA;AACH;;AACDM,uBAAW,GAAG,KAAKE,gBAAL,CAAsBR,aAAtB,CAAd,CAhBD,CAiBC;AACA;;AACA,iBAAKT,WAAL,GAAmBS,aAAa,GAAG,CAAnC,CAnBD,CAoBC;AACA;AACH,WAtBD,QAsBUM,WAAW,GAAGN,aAAd,GAA8BI,QAA/B,IAA6CE,WAAW,IAAI,CAtBrE,EAXuB,CAkCvB;AACA;;;AACA,iBAAO5K,IAAI,CAAC+K,GAAL,CAAST,aAAT,EAAwB,CAAxB,CAAP;AACH;AACD;;;;;;;;mCAKW;AACP,eAAKT,WAAL,GAAmB,CAAnB;AACA,eAAKC,QAAL,GAFO,CAGP;;AACA,eAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,OAAL,CAAa1K,MAAjC,EAAyCyL,CAAC,EAA1C,EAA8C;AAC1C,iBAAKf,OAAL,CAAae,CAAb,IAAkBhL,IAAI,CAAC+K,GAAL,CAAS,CAAT,EAAY,KAAKd,OAAL,CAAae,CAAb,IAAkB,CAA9B,CAAlB;AACH;AACJ;AACD;;;;;;;;;;yCAOiBV,a,EAAe;AAC5B,eAAK,IAAIU,CAAC,GAAGV,aAAa,GAAG,CAA7B,EAAgCU,CAAC,GAAG,KAAKf,OAAL,CAAa1K,MAAjD,EAAyDyL,CAAC,EAA1D,EAA8D;AAC1D,gBAAI,KAAKf,OAAL,CAAae,CAAb,KAAmB,CAAvB,EAA0B;AACtB,qBAAOA,CAAP;AACH;AACJ,WAL2B,CAM5B;;;AACA,iBAAO,KAAKf,OAAL,CAAa1K,MAApB;AACH;AACD;;;;;;;;;;0CAOkB0L,K,EAAOb,I,EAAM;AAC3B,eAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACtB,OAAzB,EAAkCkC,CAAC,EAAnC,EAAuC;AACnC,iBAAKf,OAAL,CAAagB,KAAK,GAAGD,CAArB,IAA0BZ,IAAI,CAACvB,OAA/B;AACH;AACJ;;;4BAnIc;AAAE,iBAAO,KAAKiB,QAAL,GAAgB,CAAvB;AAA2B;AAC5C;;;;;;;;4BAKc;AACV;AACA,cAAMoB,UAAU,GAAGlL,IAAI,CAAC+K,GAAL,OAAA/K,IAAI,qBAAQ,KAAKiK,OAAb,EAAvB,CAFU,CAGV;AACA;;AACA,iBAAOiB,UAAU,GAAG,CAAb,GAAiB,KAAKC,QAAL,GAAgBD,UAAhB,GAA6B,CAA9C,GAAkD,KAAKC,QAA9D;AACH;;;;;;AAyHL,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;QAIMV,Y;AACF;;;;AAIA,0BAAYW,GAAZ,EAAiBC,GAAjB,EAAsB;AAAA;;AAClB,WAAKD,GAAL,GAAWA,GAAX;AACA,WAAKC,GAAL,GAAWA,GAAX;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAKV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAKA,QAAMC,mBAAmB,GAAG,+BAA5B;AACA;;;;;;;QAMMC,U;AACF,4BAAc;AAAA;;AACV,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKlD,QAAL,GAAgB,CAAhB;AACH;AACD;;;;;;;;;;;;;;6BAUKmD,U,EAAYxB,O,EAASyB,I,EAAMC,S,EAAW;AACvC,eAAKC,WAAL,GAAmBC,cAAc,CAACJ,UAAD,CAAjC;AACA,eAAKD,KAAL,GAAavB,OAAO,CAACkB,QAArB;AACA,eAAK7C,QAAL,GAAgB2B,OAAO,CAACpB,OAAxB;AACA,eAAKiD,KAAL,GAAaJ,IAAb;AACA,eAAKK,UAAL,GAAkBJ,SAAlB;AACH;AACD;;;;;;;;;;wCAOgBK,W,EAAaC,c,EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA,4BAAWD,WAAX,kBAA8B,KAAKJ,WAAnC,gBAAoDK,cAApD;AACH;AACD;;;;;;;;;wCAMgBC,Q,EAAUC,M,EAAQ;AAC9B;AACA;AACA,iBAAOA,MAAM,KAAK,CAAX,GAAe,GAAf,GAAqBC,IAAI,YAAKF,QAAL,gBAAmB,KAAKN,WAAxB,iBAA0CO,MAA1C,EAAhC;AACH;AACD;;;;;;;;;oCAMYD,Q,EAAUG,I,EAAM;AACxB,4BAAWH,QAAX,gBAAyBG,IAAzB,kBAAqCA,IAAI,GAAG,CAA5C,gBAAmD,KAAKT,WAAxD;AACH;AACD;;;;;;;;;;iCAOSxB,I,EAAMN,Q,EAAUwC,Q,EAAU;AAC/B;;AACA;AACA,cAAIC,mBAAmB,GAAG,MAAM,KAAKT,KAArC,CAH+B,CAI/B;AACA;;AACA;;AACA,cAAIU,0BAA0B,GAAG,CAAC,KAAKV,KAAL,GAAa,CAAd,IAAmB,KAAKA,KAAzD;AACA,eAAKW,YAAL,CAAkBrC,IAAlB,EAAwBkC,QAAxB,EAAkCC,mBAAlC,EAAuDC,0BAAvD;AACA,eAAKE,YAAL,CAAkBtC,IAAlB,EAAwBN,QAAxB,EAAkCyC,mBAAlC,EAAuDC,0BAAvD;AACH;AACD;;;;;;;;;;;qCAQapC,I,EAAMkC,Q,EAAUK,Y,EAAcC,W,EAAa;AACpD;;AACA;AACA,cAAIC,aAAa,GAAG,KAAKC,eAAL,CAAqBH,YAArB,EAAmCC,WAAnC,CAApB,CAHoD,CAIpD;AACA;;AACA;;AACA,cAAIG,IAAI,GAAG,KAAKhB,UAAL,KAAoB,KAApB,GAA4B,OAA5B,GAAsC,MAAjD;;AACA3B,cAAI,CAAC4C,SAAL,CAAeD,IAAf,EAAqB,KAAKE,eAAL,CAAqBJ,aAArB,EAAoCP,QAApC,CAArB;;AACAlC,cAAI,CAAC4C,SAAL,CAAe,OAAf,EAAwBZ,IAAI,CAAC,KAAKc,WAAL,CAAiBL,aAAjB,EAAgCzC,IAAI,CAACtB,OAArC,CAAD,CAA5B;AACH;AACD;;;;;;;wCAIgB;AACZ,2BAAU,KAAK8C,WAAf,iBAAiC,KAAKtD,QAAtC;AACH;AACD;;;;;;;;oCAKY6E,U,EAAY;AACpB,2BAAU,KAAK7E,QAAf,gBAA6B,KAAK4E,WAAL,CAAiBC,UAAjB,EAA6B,CAA7B,CAA7B;AACH;AACD;;;;;;;;;4CAMoB;AAAE,iBAAO,IAAP;AAAc;;;;;;AAExC,QAAI,KAAJ,EAAW,CA+BV;AACD;;;;;;;QAKMC,e;;;;;AACF;;;AAGA,+BAAYC,cAAZ,EAA4B;AAAA;;AAAA;;AACxB;AACA,gBAAKA,cAAL,GAAsBA,cAAtB;AAFwB;AAG3B;AACD;;;;;;;;;;;6BAOK5B,U,EAAYxB,O,EAASyB,I,EAAMC,S,EAAW;AACvC,oFAAWF,UAAX,EAAuBxB,OAAvB,EAAgCyB,IAAhC,EAAsCC,SAAtC;;AACA,eAAK0B,cAAL,GAAsBxB,cAAc,CAAC,KAAKwB,cAAN,CAApC;;AACA,cAAI,CAAC/B,mBAAmB,CAACgC,IAApB,CAAyB,KAAKD,cAA9B,CAAL,EAAoD;AAChD,kBAAM1C,KAAK,2BAAmB,KAAK0C,cAAxB,0BAAX;AACH;AACJ;AACD;;;;;;;;qCAKajD,I,EAAMN,Q,EAAU;AACzBM,cAAI,CAAC4C,SAAL,CAAe,KAAf,EAAsB,KAAKC,eAAL,CAAqB,KAAKI,cAA1B,EAA0CvD,QAA1C,CAAtB;;AACAM,cAAI,CAAC4C,SAAL,CAAe,QAAf,EAAyBZ,IAAI,CAAC,KAAKc,WAAL,CAAiB,KAAKG,cAAtB,EAAsCjD,IAAI,CAACvB,OAA3C,CAAD,CAA7B;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,CACH,QADG,EACOuD,IAAI,WAAI,KAAKmB,WAAL,CAAiB,KAAKF,cAAtB,CAAJ,gBAA+C,KAAKG,aAAL,EAA/C,EADX,CAAP;AAGH;AACD;;;;;;;8BAIMC,I,EAAM;AACRA,cAAI,CAACC,aAAL,CAAmB,CAAC,QAAD,EAAW,IAAX,CAAnB;;AACA,cAAID,IAAI,CAACE,MAAT,EAAiB;AACbF,gBAAI,CAACE,MAAL,CAAYrN,OAAZ;AAAqB;;;;AAIrB,sBAAA8J,IAAI,EAAI;AACJA,kBAAI,CAAC4C,SAAL,CAAe,KAAf,EAAsB,IAAtB;;AACA5C,kBAAI,CAAC4C,SAAL,CAAe,QAAf,EAAyB,IAAzB;AACH,aAPD;AAQH;AACJ;;;;MAvDyBzB,U;;AAyD9B,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;QAKMqC,e;;;;;AACF;;;AAGA,+BAAYnV,KAAZ,EAAmB;AAAA;;AAAA;;AACf;;AACA,gBAAKoV,WAAL,CAAiBpV,KAAjB;;AAFe;AAGlB;AACD;;;;;;;;;;;qCAOa2R,I,EAAMN,Q,EAAU6C,Y,EAAcC,W,EAAa;AACpD;AACA,cAAIkB,oBAAoB,GAAGnB,YAAY,GAAG,KAAKoB,cAA/C;AACA,eAAKC,cAAL,GAAsB,KAAKlB,eAAL,CAAqBgB,oBAArB,EAA2ClB,WAA3C,CAAtB,CAHoD,CAIpD;AACA;AACA;;AACAxC,cAAI,CAAC4C,SAAL,CAAe,WAAf,EAA4B,KAAKC,eAAL,CAAqB,KAAKe,cAA1B,EAA0ClE,QAA1C,CAA5B;;AACAM,cAAI,CAAC4C,SAAL,CAAe,YAAf,EAA6BZ,IAAI,CAAC,KAAKc,WAAL,CAAiB,KAAKc,cAAtB,EAAsC5D,IAAI,CAACvB,OAA3C,CAAD,CAAjC;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,CACH,eADG,EACcuD,IAAI,WAAI,KAAKmB,WAAL,CAAiB,KAAKS,cAAtB,CAAJ,gBAA+C,KAAKR,aAAL,EAA/C,EADlB,CAAP;AAGH;AACD;;;;;;;8BAIMC,I,EAAM;AACRA,cAAI,CAACC,aAAL,CAAmB,CAAC,eAAD,EAAkB,IAAlB,CAAnB;;AACAD,cAAI,CAACE,MAAL,CAAYrN,OAAZ;AAAqB;;;;AAIrB,oBAAA8J,IAAI,EAAI;AACJA,gBAAI,CAAC4C,SAAL,CAAe,WAAf,EAA4B,IAA5B;;AACA5C,gBAAI,CAAC4C,SAAL,CAAe,YAAf,EAA6B,IAA7B;AACH,WAPD;AAQH;AACD;;;;;;;;oCAKYvU,K,EAAO;AACf;AACA,cAAMwV,UAAU,GAAGxV,KAAK,CAACyV,KAAN,CAAY,GAAZ,CAAnB;;AACA,cAAID,UAAU,CAAC1O,MAAX,KAAsB,CAA1B,EAA6B;AACzB,kBAAMoL,KAAK,gEAAwDlS,KAAxD,QAAX;AACH;;AACD,eAAKsV,cAAL,GAAsBI,UAAU,CAACF,UAAU,CAAC,CAAD,CAAX,CAAV,GAA4BE,UAAU,CAACF,UAAU,CAAC,CAAD,CAAX,CAA5D;AACH;;;;MA5DyB1C,U;;AA8D9B,QAAI,KAAJ,EAAW,CAQV;AACD;;;;;;;;;QAOM6C,a;;;;;;;;;;;;;;AACF;;;;;qCAKahE,I,EAAMN,Q,EAAU;AACzB;;AACA;AACA,cAAIgE,oBAAoB,GAAG,MAAM,KAAKxF,QAAtC,CAHyB,CAIzB;;AACA;;AACA,cAAI+F,mBAAmB,GAAG,CAAC,KAAK7C,KAAL,GAAa,CAAd,IAAmB,KAAKA,KAAlD,CANyB,CAOzB;;AACA;;AACA,cAAIwC,cAAc,GAAG,KAAKlB,eAAL,CAAqBgB,oBAArB,EAA2CO,mBAA3C,CAArB;;AACAjE,cAAI,CAAC4C,SAAL,CAAe,KAAf,EAAsB,KAAKC,eAAL,CAAqBe,cAArB,EAAqClE,QAArC,CAAtB;;AACAM,cAAI,CAAC4C,SAAL,CAAe,QAAf,EAAyBZ,IAAI,CAAC,KAAKc,WAAL,CAAiBc,cAAjB,EAAiC5D,IAAI,CAACvB,OAAtC,CAAD,CAA7B;AACH;AACD;;;;;;;8BAIM4E,I,EAAM;AACR,cAAIA,IAAI,CAACE,MAAT,EAAiB;AACbF,gBAAI,CAACE,MAAL,CAAYrN,OAAZ;AAAqB;;;;AAIrB,sBAAA8J,IAAI,EAAI;AACJA,kBAAI,CAAC4C,SAAL,CAAe,KAAf,EAAsB,IAAtB;;AACA5C,kBAAI,CAAC4C,SAAL,CAAe,QAAf,EAAyB,IAAzB;AACH,aAPD;AAQH;AACJ;;;;MAlCuBzB,U;AAoC5B;;;;;;;AAKA,aAASa,IAAT,CAAckC,GAAd,EAAmB;AACf,4BAAeA,GAAf;AACH;AACD;;;;;;;AAKA,aAASzC,cAAT,CAAwBpT,KAAxB,EAA+B;AAC3B,aAAOA,KAAK,CAAC8V,KAAN,CAAY,eAAZ,IAA+B9V,KAA/B,aAA0CA,KAA1C,OAAP;AACH;AAED;;;;;AAKA;AACA;AACA;;AACA;;;AACA,QAAM+V,YAAY,GAAG,KAArB;;QACMC,W;AACF;;;;AAIA,2BAAYrG,QAAZ,EAAsBjM,IAAtB,EAA4B;AAAA;;AACxB,aAAKiM,QAAL,GAAgBA,QAAhB;AACA,aAAKjM,IAAL,GAAYA,IAAZ;AACA;;;;AAGA,aAAKuS,OAAL,GAAe,KAAf;AACH;AACD;;;;;;;;;AAuCA;;;mCAGW;AACP,eAAKC,UAAL;;AACA,eAAKC,eAAL;AACH;AACD;;;;;;;;gDAKwB;AACpB,eAAKC,YAAL;AACH;AACD;;;;;;;;qCAKa;AACT,cAAI,CAAC,KAAKnD,IAAV,EAAgB;AACZ,kBAAMf,KAAK,CAAC,yFAAD,CAAX;AAEH;AACJ;AACD;;;;;;;;0CAKkB;AACd,cAAI,CAAC,KAAKmE,UAAV,EAAsB;AAClB,iBAAKC,cAAL,CAAoB,KAApB;AACH;AACJ;AACD;;;;;;;;;uCAMeC,S,EAAW;AACtB,cAAI,KAAKC,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBC,KAAjB,CAAuB,IAAvB;AACH;;AACD,cAAIF,SAAS,KAAKR,YAAlB,EAAgC;AAC5B,iBAAKS,WAAL,GAAmB,IAAIb,aAAJ,EAAnB;AACH,WAFD,MAGK,IAAIY,SAAS,IAAIA,SAAS,CAACzM,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA3C,EAA8C;AAC/C,iBAAK0M,WAAL,GAAmB,IAAIrB,eAAJ,CAAoBoB,SAApB,CAAnB;AACH,WAFI,MAGA;AACD,iBAAKC,WAAL,GAAmB,IAAI7B,eAAJ,CAAoB4B,SAApB,CAAnB;AACH;AACJ;AACD;;;;;;;;uCAKe;AAAA;;AACX,cAAI,CAAC,KAAKG,gBAAV,EAA4B;AACxB,iBAAKA,gBAAL,GAAwB,IAAIvF,eAAJ,EAAxB;AACH;AACD;;;AACA,cAAMK,OAAO,GAAG,KAAKkF,gBAArB;AACA;;AACA,cAAMnF,KAAK,GAAG,KAAK2D,MAAL,CAAYyB,MAAZ;AAAoB;;;;AAIlC,oBAAAhF,IAAI;AAAA,mBAAI,CAACA,IAAI,CAAC/B,SAAN,IAAmB+B,IAAI,CAAC/B,SAAL,KAAmB,OAA1C;AAAA,WAJU,CAAd;AAKA;;;AACA,cAAMsD,SAAS,GAAG,KAAKxP,IAAL,GAAY,KAAKA,IAAL,CAAU1D,KAAtB,GAA8B,KAAhD;;AACA,eAAK0W,gBAAL,CAAsBE,MAAtB,CAA6B,KAAK3D,IAAlC,EAAwC1B,KAAxC;;AACA,eAAKiF,WAAL,CAAiBK,IAAjB,CAAsB,KAAK7D,UAA3B,EAAuCxB,OAAvC,EAAgD,KAAKyB,IAArD,EAA2DC,SAA3D;;AACA3B,eAAK,CAAC1J,OAAN;AAAe;;;;;AAKf,oBAAC8J,IAAD,EAAOjK,KAAP,EAAiB;AACb;AACA,gBAAMoP,GAAG,GAAGtF,OAAO,CAACE,SAAR,CAAkBhK,KAAlB,CAAZ;;AACA,mBAAI,CAAC8O,WAAL,CAAiBO,QAAjB,CAA0BpF,IAA1B,EAAgCmF,GAAG,CAACnE,GAApC,EAAyCmE,GAAG,CAAClE,GAA7C;AACH,WATD;;AAUA,eAAKqC,aAAL,CAAmB,KAAKuB,WAAL,CAAiBQ,iBAAjB,EAAnB;AACH;AACD;;;;;;;;sCAKchH,K,EAAO;AACjB,cAAIA,KAAJ,EAAW;AACL;AAAkB,iBAAKL,QAAL,CAAc9R,aAAd,CAA4BmS,KAAhD,CAAyDA,KAAK,CAAC,CAAD,CAA9D,IAAqEA,KAAK,CAAC,CAAD,CAA1E;AACH;AACJ;;;4BArIU;AAAE,iBAAO,KAAKqD,KAAZ;AAAoB;AACjC;;;;;0BAISrT,K,EAAO;AACZ,eAAKqT,KAAL,GAAa9L,IAAI,CAAC+K,GAAL,CAAS,CAAT,EAAY/K,IAAI,CAAC0I,KAAL,CAAW,mFAAqBjQ,KAArB,CAAX,CAAZ,CAAb;AACH;AACD;;;;;;;4BAIiB;AAAE,iBAAO,KAAKiW,OAAZ;AAAsB;AACzC;;;;;0BAIejW,K,EAAO;AAAE,eAAKiW,OAAL,aAAkBjW,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAAvC;AAAiD;AACzE;;;;;;;4BAIgB;AAAE,iBAAO,KAAKqW,UAAZ;AAAyB;AAC3C;;;;;0BAIcrW,K,EAAO;AACjB;AACA,cAAMiX,QAAQ,aAAMjX,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAA3B,CAAd;;AACA,cAAIiX,QAAQ,KAAK,KAAKZ,UAAtB,EAAkC;AAC9B,iBAAKA,UAAL,GAAkBY,QAAlB;;AACA,iBAAKX,cAAL,CAAoB,KAAKD,UAAzB;AACH;AACJ;;;;;;AAqGLL,eAAW,CAAC1a,IAAZ,GAAmB,SAAS4b,mBAAT,CAA6B1b,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIwa,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,gEAAzB,EAAgD,CAAhD,CAApE,CAAP;AAAiI,KAAtL;;AACAA,eAAW,CAACpL,IAAZ,GAAmB,gEAAyB;AAAElP,UAAI,EAAEsa,WAAR;AAAqBra,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqD4E,oBAAc,EAAE,SAAS4W,0BAAT,CAAoC1W,EAApC,EAAwCC,GAAxC,EAA6CC,QAA7C,EAAuD;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AAC9K,uEAAsBE,QAAtB,EAAgC+O,WAAhC,EAA6C,IAA7C;AACH;;AAAC,YAAIjP,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACwU,MAAJ,GAAarU,EAAlE;AACH;AAAE,OALqC;AAKnCjF,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CALwB;AAKFsF,cAAQ,EAAE,CALR;AAKWC,kBAAY,EAAE,SAASiW,wBAAT,CAAkC3W,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtH,oEAAmB,MAAnB,EAA2BC,GAAG,CAACuS,IAA/B;AACH;AAAE,OAPqC;AAOnCnR,YAAM,EAAE;AAAEmR,YAAI,EAAE,MAAR;AAAgBD,kBAAU,EAAE,YAA5B;AAA0CuD,iBAAS,EAAE;AAArD,OAP2B;AAOyCtU,cAAQ,EAAE,CAAC,aAAD,CAPnD;AAOoEC,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AACtIsJ,eAAO,EAAEgE,aAD6H;AAEtI/D,mBAAW,EAAEuK;AAFyH,OAAD,CAA1B,CAAD,CAP9E;AAU1BtK,wBAAkB,EAAE9Q,GAVM;AAUD+Q,WAAK,EAAE,CAVN;AAUSC,UAAI,EAAE,CAVf;AAUkBE,cAAQ,EAAE,SAASuL,oBAAT,CAA8B5W,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrH;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,qEAAoB,CAApB;;AACA;AACH;AAAE,OAfqC;AAenCuL,YAAM,EAAE,CAAC,svCAAD,CAf2B;AAe+tCC,mBAAa,EAAE,CAf9uC;AAeivCC,qBAAe,EAAE;AAflwC,KAAzB,CAAnB;AAgBA;;AACA8J,eAAW,CAAC7T,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEzG,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE,gEAAR;AAAwB0G,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAApC,OAF+B,CAAN;AAAA,KAA7B;;AAIAsa,eAAW,CAAC1T,cAAZ,GAA6B;AACzB4S,YAAM,EAAE,CAAC;AAAExZ,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC6T,WAAD,EAAc;AAAEvD,qBAAW,EAAE;AAAf,SAAd;AAA/B,OAAD,CADiB;AAEzB8G,UAAI,EAAE,CAAC;AAAEvX,YAAI,EAAE;AAAR,OAAD,CAFmB;AAGzBsX,gBAAU,EAAE,CAAC;AAAEtX,YAAI,EAAE;AAAR,OAAD,CAHa;AAIzB6a,eAAS,EAAE,CAAC;AAAE7a,YAAI,EAAE;AAAR,OAAD;AAJc,KAA7B;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyBsa,WAAzB,EAAsC,CAAC;AAC5Dta,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,eADX;AAECmG,kBAAQ,EAAE,aAFX;AAGC6J,kBAAQ,EAAE,4CAHX;AAIC/P,cAAI,EAAE;AACF,qBAAS,eADP;AAEF;AACA;AACA,2BAAe;AAJb,WAJP;AAUCqQ,mBAAS,EAAE,CAAC;AACJZ,mBAAO,EAAEgE,aADL;AAEJ/D,uBAAW,EAAEuK;AAFT,WAAD,CAVZ;AAcC9J,yBAAe,EAAE,sEAAwBI,MAd1C;AAeCL,uBAAa,EAAE,gEAAkBI,IAflC;AAgBCL,gBAAM,EAAE,CAAC,svCAAD;AAhBT,SAAD;AAFsD,OAAD,CAAtC,EAoBrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE,gEAAR;AAA+B0G,oBAAU,EAAE,CAAC;AACvF1G,gBAAI,EAAE;AADiF,WAAD;AAA3C,SAA9B,CAAP;AAEF,OAtBS,EAsBP;AAAEuX,YAAI,EAAE,CAAC;AACnBvX,cAAI,EAAE;AADa,SAAD,CAAR;AAEVsX,kBAAU,EAAE,CAAC;AACbtX,cAAI,EAAE;AADO,SAAD,CAFF;AAIV6a,iBAAS,EAAE,CAAC;AACZ7a,cAAI,EAAE;AADM,SAAD,CAJD;AAMVwZ,cAAM,EAAE,CAAC;AACTxZ,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAAC6T,WAAD,EAAc;AAAEvD,uBAAW,EAAE;AAAf,WAAd;AAFG,SAAD;AANE,OAtBO;AA+Bb,KA/BF;;AAgCd,QAAI,KAAJ,EAAW,CAmDV;AAED;;;;;;;QAKMmL,iB;;;;AAENA,qBAAiB,CAACnJ,IAAlB,GAAyB,+DAAwB;AAAEzS,UAAI,EAAE4b;AAAR,KAAxB,CAAzB;AACAA,qBAAiB,CAAClJ,IAAlB,GAAyB,+DAAwB;AAAEC,aAAO,EAAE,SAASkJ,yBAAT,CAAmC/b,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI8b,iBAAV,GAAP;AAAwC,OAA3F;AAA6FjI,aAAO,EAAE,CAAC,CAAC,oEAAD,EAAgB,sEAAhB,CAAD,EAC/I,oEAD+I,EAE/I,sEAF+I;AAAtG,KAAxB,CAAzB;;AAGA,KAAC,YAAY;AAAE,OAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B8I,iBAA1B,EAA6C;AAAE7I,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACuH,WAAD,EAC5ItG,WAD4I,EAE5Ia,eAF4I,EAG5IO,6BAH4I,EAI5IE,6BAJ4I,EAK5IJ,yBAL4I,CAAP;AAKxG,SAL0E;AAKxEvB,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,oEAAD,EAAgB,sEAAhB,CAAP;AAA0C,SALO;AAKLX,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACsH,WAAD,EAChItG,WADgI,EAEhIa,eAFgI,EAGhI,oEAHgI,EAIhI,sEAJgI,EAKhIO,6BALgI,EAMhIE,6BANgI,EAOhIJ,yBAPgI,CAAP;AAO5F;AAZ0E,OAA7C,CAAnD;AAY4B,KAZ3C;AAaA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB0G,iBAAzB,EAA4C,CAAC;AAClE5b,YAAI,EAAE,sDAD4D;AAElEG,YAAI,EAAE,CAAC;AACCwT,iBAAO,EAAE,CAAC,oEAAD,EAAgB,sEAAhB,CADV;AAECX,iBAAO,EAAE,CACLsH,WADK,EAELtG,WAFK,EAGLa,eAHK,EAIL,oEAJK,EAKL,sEALK,EAMLO,6BANK,EAOLE,6BAPK,EAQLJ,yBARK,CAFV;AAYCnC,sBAAY,EAAE,CACVuH,WADU,EAEVtG,WAFU,EAGVa,eAHU,EAIVO,6BAJU,EAKVE,6BALU,EAMVJ,yBANU;AAZf,SAAD;AAF4D,OAAD,CAA5C,EAuBrB,IAvBqB,EAuBf,IAvBe;AAuBP,KAvBR;AAyBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC7qhW,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,QAAM0U,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,EAAyD,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAzD,EAAoF,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAApF,CAAD,EAA+G,CAAC,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAAD,EAAuB,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAvB,CAA/G,EAA4J,GAA5J,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,oEAAD,EAAuE,uBAAvE,EAAgG,GAAhG,CAAZ;AACA,QAAMiI,GAAG,GAAG,CAAC,MAAD,CAAZ;;AACA,aAASC,4CAAT,CAAsDhX,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,gEAAiB,CAAjB,EAAoB,qBAApB,EAA2C,CAA3C;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMiX,MAAM,GAAG,6DAAf;;AACA,iEAAkB,OAAlB,EAA2BA,MAAM,CAAC1c,QAAP,GAAkB,SAAlB,GAA8B,WAAzD,EAAsE,UAAtE,EAAkF0c,MAAM,CAACxY,QAAzF;AACH;AAAE;;AACH,QAAMyY,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,EAAyD,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAzD,EAAoF,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAApF,CAAN,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,oEAAN,CAAZ;;QACMC,W;;;AAEN;;;AACA,QAAMC,iBAAiB,GAAG,6EAAc,kFAAmBD,WAAnB,CAAd,CAA1B,C,CACA;;AACA;;;;;QAGME,e;;;AAEN;;;AACA,QAAMC,qBAAqB,GAAG,kFAAmBD,eAAnB,CAA9B;;QACME,U;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,sCAASC,SAAT;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,IAAI,4CAAJ,EAArB;AALU;AAMb;AACD;;;;;;;sCAGc;AACV,eAAKA,aAAL,CAAmBpZ,IAAnB;AACH;AACD;;;;;;sCAGc;AACV,eAAKoZ,aAAL,CAAmBlS,QAAnB;AACH;;;;MAnBoB6R,iB;;AAqBzBG,cAAU,CAAC3c,IAAX,GAAkB,SAAS8c,kBAAT,CAA4B5c,CAA5B,EAA+B;AAAE,aAAO6c,uBAAuB,CAAC7c,CAAC,IAAIyc,UAAN,CAA9B;AAAkD,KAArG;;AACAA,cAAU,CAACrN,IAAX,GAAkB,gEAAyB;AAAElP,UAAI,EAAEuc,UAAR;AAAoBtc,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAA/B;AAAmDC,eAAS,EAAE,CAAC,MAAD,EAAS,YAAT,EAAuB,CAAvB,EAA0B,cAA1B,EAA0C,eAA1C,CAA9D;AAA0HkG,YAAM,EAAE;AAAE/B,qBAAa,EAAE,eAAjB;AAAkCb,gBAAQ,EAAE;AAA5C,OAAlI;AAA4L+C,cAAQ,EAAE,CAAC,YAAD,CAAtM;AAAsNC,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC,CAAhO;AAAkSwJ,wBAAkB,EAAE9Q,GAAtT;AAA2T+Q,WAAK,EAAE,CAAlU;AAAqUC,UAAI,EAAE,CAA3U;AAA8UE,cAAQ,EAAE,SAASwM,mBAAT,CAA6B7X,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/a;;AACA,qEAAoB,CAApB;AACH;AAAE,OAHoC;AAGlCuL,YAAM,EAAE,CAAC,y5aAAD,CAH0B;AAGm4aC,mBAAa,EAAE,CAHl5a;AAGq5aC,qBAAe,EAAE;AAHt6a,KAAzB,CAAlB;;AAIA,QAAMmM,uBAAuB,GAAG,oEAA6BJ,UAA7B,CAAhC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,UAAzB,EAAqC,CAAC;AAC3Dvc,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,cADX;AAECmG,kBAAQ,EAAE,YAFX;AAGClG,cAAI,EAAE;AACF,oBAAQ,YADN;AAEF,qBAAS;AAFP,WAHP;AAOC+P,kBAAQ,EAAE,+BAPX;AAQChK,gBAAM,EAAE,CAAC,eAAD,EAAkB,UAAlB,CART;AASCmK,uBAAa,EAAE,gEAAkBI,IATlC;AAUCH,yBAAe,EAAE,sEAAwBI,MAV1C;AAWCN,gBAAM,EAAE,CAAC,y5aAAD;AAXT,SAAD;AAFqD,OAAD,CAArC,EAerB,IAfqB,EAef,IAfe;AAeP,KAfR;;AAgBd,QAAI,KAAJ,EAAW,CAUV;;QACKuM,O;;;;;AACF;;;AAGA,uBAAYpd,WAAZ,EAAyB;AAAA;;AAAA;;AACrB;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA;;;;AAGA,gBAAKgd,aAAL,GAAqB,IAAI,4CAAJ,EAArB;;AACA,YAAI,QAAKK,YAAL,OAAwB,aAA5B,EAA2C;AACvCrd,qBAAW,CAAC0C,aAAZ,CAA0BF,SAA1B,CAAoCC,GAApC,CAAwC,iBAAxC;AACH;;AAToB;AAUxB;AACD;;;;;;;uCAGe;AACX;AACA,cAAM6E,QAAQ,GAAG,KAAKtH,WAAL,CAAiB0C,aAAjB,CAA+B4E,QAA/B,CAAwCjE,WAAxC,EAAjB;;AACA,cAAIiE,QAAQ,KAAK,UAAjB,EAA6B;AACzB,mBAAO,MAAP;AACH;;AACD,cAAIA,QAAQ,KAAK,iBAAjB,EAAoC;AAChC,mBAAO,aAAP;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;sCAGc;AACV,eAAK0V,aAAL,CAAmBpZ,IAAnB;AACH;AACD;;;;;;sCAGc;AACV,eAAKoZ,aAAL,CAAmBlS,QAAnB;AACH;;;;MAxCiB6R,iB;;AA0CtBS,WAAO,CAACjd,IAAR,GAAe,SAASmd,eAAT,CAAyBjd,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAI+c,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,CAAP;AAAyE,KAAtH;;AACAA,WAAO,CAAC3N,IAAR,GAAe,gEAAyB;AAAElP,UAAI,EAAE6c,OAAR;AAAiB5c,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,iBAAD,CAAf,CAA5B;AAAiEC,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,eAAhB,CAA5E;AAA8GkG,YAAM,EAAE;AAAE/B,qBAAa,EAAE,eAAjB;AAAkCb,gBAAQ,EAAE;AAA5C,OAAtH;AAAgL+C,cAAQ,EAAE,CAAC,SAAD,CAA1L;AAAuMC,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC,CAAjN;AAAmRwJ,wBAAkB,EAAE9Q,GAAvS;AAA4S+Q,WAAK,EAAE,CAAnT;AAAsTC,UAAI,EAAE,CAA5T;AAA+TE,cAAQ,EAAE,SAAS4M,gBAAT,CAA0BjY,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1Z;;AACA,qEAAoB,CAApB;AACH;AAAE,OAHiC;AAG/BuL,YAAM,EAAE,CAAC,y5aAAD,CAHuB;AAGs4aC,mBAAa,EAAE,CAHr5a;AAGw5aC,qBAAe,EAAE;AAHz6a,KAAzB,CAAf;AAIA;;AACAqM,WAAO,CAACpW,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEzG,YAAI,EAAE;AAAR,OAD2B,CAAN;AAAA,KAAzB;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB6c,OAAzB,EAAkC,CAAC;AACxD7c,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,2BADX;AAECmG,kBAAQ,EAAE,SAFX;AAGC6J,kBAAQ,EAAE,+BAHX;AAIC/P,cAAI,EAAE;AACF,qBAAS;AADP,WAJP;AAOC+F,gBAAM,EAAE,CAAC,eAAD,EAAkB,UAAlB,CAPT;AAQCmK,uBAAa,EAAE,gEAAkBI,IARlC;AASCH,yBAAe,EAAE,sEAAwBI,MAT1C;AAUCN,gBAAM,EAAE,CAAC,y5aAAD;AAVT,SAAD;AAFkD,OAAD,CAAlC,EAcrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OAdhC,EAckC,IAdlC;AAc0C,KAdzD;;AAed,QAAI,KAAJ,EAAW,CAeV;AACD;;;;;;QAIMid,yB;;;;AAENA,6BAAyB,CAACrd,IAA1B,GAAiC,SAASsd,iCAAT,CAA2Cpd,CAA3C,EAA8C;AAAE,aAAO,KAAKA,CAAC,IAAImd,yBAAV,GAAP;AAAgD,KAAjI;;AACAA,6BAAyB,CAACld,IAA1B,GAAiC,gEAAyB;AAAEC,UAAI,EAAEid,yBAAR;AAAmChd,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAA9C;AAAwGC,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAnH,KAAzB,CAAjC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+c,yBAAzB,EAAoD,CAAC;AAC1Ejd,YAAI,EAAE,uDADoE;AAE1EG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,oCADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFoE,OAAD,CAApD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIM8c,uB;;;;AAENA,2BAAuB,CAACvd,IAAxB,GAA+B,SAASwd,+BAAT,CAAyCtd,CAAzC,EAA4C;AAAE,aAAO,KAAKA,CAAC,IAAIqd,uBAAV,GAAP;AAA8C,KAA3H;;AACAA,2BAAuB,CAACpd,IAAxB,GAA+B,gEAAyB;AAAEC,UAAI,EAAEmd,uBAAR;AAAiCld,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,EAA4B,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAA5B,CAA5C;AAAkGC,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ;AAA7G,KAAzB,CAA/B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBid,uBAAzB,EAAkD,CAAC;AACxEnd,YAAI,EAAE,uDADkE;AAExEG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,gCADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFkE,OAAD,CAAlD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMgd,4B;;;;AAENA,gCAA4B,CAACzd,IAA7B,GAAoC,SAAS0d,oCAAT,CAA8Cxd,CAA9C,EAAiD;AAAE,aAAO,KAAKA,CAAC,IAAIud,4BAAV,GAAP;AAAmD,KAA1I;;AACAA,gCAA4B,CAACtd,IAA7B,GAAoC,gEAAyB;AAAEC,UAAI,EAAEqd,4BAAR;AAAsCpd,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,EAA4B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA5B,CAAjD;AAAwGC,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ;AAAnH,KAAzB,CAApC;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBmd,4BAAzB,EAAuD,CAAC;AAC7Erd,YAAI,EAAE,uDADuE;AAE7EG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,iCADX;AAECC,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFuE,OAAD,CAAvD,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;QAGMkd,W;;;;;AACF;;;;;;AAMA,2BAAYtJ,QAAZ,EAAsBpT,kBAAtB,EAA0C2c,OAA1C,EAAmDlE,IAAnD,EAAyD;AAAA;;AAAA;;AACrD;AACA,gBAAKrF,QAAL,GAAgBA,QAAhB;AACA,gBAAKwJ,kBAAL,GAA0B,KAA1B;AACA,gBAAKtV,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,gBAAK7G,SAAL,GAAiB,KAAjB;AACA,gBAAKmc,kBAAL,GAA0B,CAAC,EAAED,OAAO,IAAKlE,IAAI,IAAIA,IAAI,CAACwD,YAAL,OAAwB,aAA9C,CAA3B;AACA,gBAAKY,KAAL,GAAaF,OAAO,IAAIlE,IAAxB,CAPqD,CAQrD;AACA;;AACA;;AACA,YAAM3W,OAAO,GAAG,QAAKgb,eAAL,EAAhB;;AACA,YAAIhb,OAAO,CAACoE,QAAR,CAAiBjE,WAAjB,OAAmC,QAAnC,IAA+C,CAACH,OAAO,CAACC,YAAR,CAAqB,MAArB,CAApD,EAAkF;AAC9ED,iBAAO,CAACqE,YAAR,CAAqB,MAArB,EAA6B,QAA7B;AACH;;AACD,YAAI,QAAK0W,KAAT,EAAgB;AACZ;AACA;AACA,kBAAKA,KAAL,CAAWjB,aAAX,CAAyBxY,IAAzB,CAA8B,iEAAU,QAAKkE,UAAf,CAA9B,EAA0DjE,SAA1D;AAAqE;;;AAGrE,sBAAM;AACFrD,8BAAkB,CAACuD,YAAnB;AACH,WALD;AAMH;;AAxBoD;AAyBxD;AACD;;;;;;;;;AAYA;;;6CAGqB;AACjB,kFAAS,KAAK0Q,MAAd,EAAsB,KAAKb,QAA3B;AACH;AACD;;;;;;sCAGc;AACV,eAAK9L,UAAL,CAAgB9E,IAAhB;;AACA,eAAK8E,UAAL,CAAgBoC,QAAhB;AACH;AACD;;;;;;;4CAIoB;AAChB,iBAAO,CAAC,KAAKkT,kBAAN,IAA4B,KAAKpZ,aAAjC,IACH,CAAC,EAAE,KAAKqZ,KAAL,IAAc,KAAKA,KAAL,CAAWrZ,aAA3B,CADL;AAEH;AACD;;;;;;;0CAIkB;AACd,iBAAO,KAAK4P,QAAL,CAAc9R,aAArB;AACH;;;4BAnCc;AAAE,iBAAO,KAAKb,SAAL,IAAkB,CAAC,EAAE,KAAKoc,KAAL,IAAc,KAAKA,KAAL,CAAWla,QAA3B,CAA1B;AAAiE;AAClF;;;;;0BAIac,K,EAAO;AAChB,eAAKhD,SAAL,GAAiB,oFAAsBgD,KAAtB,CAAjB;AACH;;;;MA5CqBgY,qB;;AA0E1BiB,eAAW,CAAC3d,IAAZ,GAAmB,SAASge,mBAAT,CAA6B9d,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAIyd,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyBhB,UAAzB,EAAqC,CAArC,CAAxH,EAAiK,gEAAyBM,OAAzB,EAAkC,CAAlC,CAAjK,CAAP;AAAgN,KAArQ;;AACAU,eAAW,CAACrO,IAAZ,GAAmB,gEAAyB;AAAElP,UAAI,EAAEud,WAAR;AAAqBtd,eAAS,EAAE,CAAC,CAAC,eAAD,CAAD,EAAoB,CAAC,GAAD,EAAM,eAAN,EAAuB,EAAvB,CAApB,EAAgD,CAAC,QAAD,EAAW,eAAX,EAA4B,EAA5B,CAAhD,CAAhC;AAAkH4E,oBAAc,EAAE,SAASgZ,0BAAT,CAAoC9Y,EAApC,EAAwCC,GAAxC,EAA6CC,QAA7C,EAAuD;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AAC3O,uEAAsBE,QAAtB,EAAgCgY,yBAAhC,EAA2D,IAA3D;;AACA,uEAAsBhY,QAAtB,EAAgCkY,uBAAhC,EAAyD,IAAzD;;AACA,uEAAsBlY,QAAtB,EAAgC,8DAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAIF,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC8Y,OAAJ,GAAc3Y,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC+Y,KAAJ,GAAY5Y,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC8P,MAAJ,GAAa3P,EAAlE;AACH;AAAE,OATqC;AASnCjF,eAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,EAAqB,qBAArB,CATwB;AASqBsF,cAAQ,EAAE,CAT/B;AASkCC,kBAAY,EAAE,SAASuY,wBAAT,CAAkCjZ,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7I,oEAAmB,wBAAnB,EAA6CC,GAAG,CAACxB,QAAjD,EAA2D,sBAA3D,EAAmFwB,GAAG,CAAC8Y,OAAJ,IAAe9Y,GAAG,CAAC+Y,KAAtG,EAA6G,2BAA7G,EAA0I/Y,GAAG,CAAC8Y,OAAJ,IAAe9Y,GAAG,CAAC+Y,KAA7J;AACH;AAAE,OAXqC;AAWnC3X,YAAM,EAAE;AAAE/B,qBAAa,EAAE,eAAjB;AAAkCb,gBAAQ,EAAE;AAA5C,OAX2B;AAW+B+C,cAAQ,EAAE,CAAC,aAAD,CAXzC;AAW0DC,cAAQ,EAAE,CAAC,wEAAD,CAXpE;AAWyGwJ,wBAAkB,EAAE6D,GAX7H;AAWkI5D,WAAK,EAAE,CAXzI;AAW4IC,UAAI,EAAE,CAXlJ;AAWqJC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,EAA+B,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,sBAAtB,EAA8C,CAA9C,EAAiD,kBAAjD,EAAqE,mBAArE,CAA/B,EAA0H,CAAC,CAAD,EAAI,eAAJ,CAA1H,CAX7J;AAW8SC,cAAQ,EAAE,SAAS6N,oBAAT,CAA8BlZ,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjZ,wEAAuB6O,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAI7O,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCC,GAAG,CAAC2Y,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkF3Y,GAAG,CAACkZ,iBAAJ,EAAlF;AACH;AAAE,OAxBqC;AAwBnCC,gBAAU,EAAE,CAAC,gEAAD,CAxBuB;AAwBH5N,mBAAa,EAAE,CAxBZ;AAwBeC,qBAAe,EAAE;AAxBhC,KAAzB,CAAnB;AAyBA;;AACA+M,eAAW,CAAC9W,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEzG,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAEuc,UAAR;AAAoB7V,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAAhC,OAH+B,EAI/B;AAAEA,YAAI,EAAE6c,OAAR;AAAiBnW,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAA7B,OAJ+B,CAAN;AAAA,KAA7B;;AAMAud,eAAW,CAAC3W,cAAZ,GAA6B;AACzBkO,YAAM,EAAE,CAAC;AAAE9U,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CADiB;AAEzBqN,aAAO,EAAE,CAAC;AAAE9d,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC8c,yBAAD;AAA5B,OAAD,CAFgB;AAGzBc,WAAK,EAAE,CAAC;AAAE/d,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACgd,uBAAD;AAA5B,OAAD,CAHkB;AAIzB3Z,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD;AAJe,KAA7B;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyBud,WAAzB,EAAsC,CAAC;AAC5Dvd,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,wDADX;AAECmG,kBAAQ,EAAE,aAFX;AAGClG,cAAI,EAAE;AACF,qBAAS,mCADP;AAEF,8CAAkC,UAFhC;AAGF;AACA,4CAAgC,kBAJ9B;AAKF,iDAAqC;AALnC,WAHP;AAUC+F,gBAAM,EAAE,CAAC,eAAD,CAVT;AAWCgK,kBAAQ,EAAE,scAXX;AAYCG,uBAAa,EAAE,gEAAkBI,IAZlC;AAaCH,yBAAe,EAAE,sEAAwBI;AAb1C,SAAD;AAFsD,OAAD,CAAtC,EAiBrB,YAAY;AAAE,eAAO,CAAC;AAAE5Q,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAEuc,UAAR;AAAoB7V,oBAAU,EAAE,CAAC;AAChH1G,gBAAI,EAAE;AAD0G,WAAD;AAAhC,SAAlE,EAEX;AAAEA,cAAI,EAAE6c,OAAR;AAAiBnW,oBAAU,EAAE,CAAC;AAChC1G,gBAAI,EAAE;AAD0B,WAAD;AAA7B,SAFW,CAAP;AAIF,OArBS,EAqBP;AAAEwD,gBAAQ,EAAE,CAAC;AACvBxD,cAAI,EAAE;AADiB,SAAD,CAAZ;AAEV8U,cAAM,EAAE,CAAC;AACT9U,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CAFE;AAKVqN,eAAO,EAAE,CAAC;AACV9d,cAAI,EAAE,0DADI;AAEVG,cAAI,EAAE,CAAC8c,yBAAD;AAFI,SAAD,CALC;AAQVc,aAAK,EAAE,CAAC;AACR/d,cAAI,EAAE,0DADE;AAERG,cAAI,EAAE,CAACgd,uBAAD;AAFE,SAAD;AARG,OArBO;AAgCb,KAhCF;;AAiCd,QAAI,KAAJ,EAAW,CAoCV;AAED;;;;;;AAKA;;;;;QAGMiB,oB;;;AAEN;;;AACA,QAAMC,0BAA0B,GAAG,kFAAmBD,oBAAnB,CAAnC;AACA;;;;;QAGME,iB;;;AAEN;;;AACA,QAAMC,uBAAuB,GAAG,kFAAmBD,iBAAnB,CAAhC;AACA;;;;;;AAIA,QAAME,iCAAiC,GAAG;AACtC1O,aAAO,EAAE,gEAD6B;AAEtCC,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAM0O,gBAAN;AAAA,OAHa,CAFyB;AAMtCC,WAAK,EAAE;AAN+B,KAA1C;AAQA;;;;QAGMC,sB;AACF;;;;AAIA,oCAAYtf,MAAZ,EAAoBuf,MAApB,EAA4B;AAAA;;AACxB,WAAKvf,MAAL,GAAcA,MAAd;AACA,WAAKuf,MAAL,GAAcA,MAAd;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;QAKMC,a;;;;;AACF;;;;;AAKA,6BAAY5K,QAAZ,EAAsB6K,eAAtB,EAAuCC,aAAvC,EAAsD;AAAA;;AAAA;;AAClD;AACA,gBAAK9K,QAAL,GAAgBA,QAAhB;AACA,gBAAK6K,eAAL,GAAuBA,eAAvB;AACA,gBAAKC,aAAL,GAAqBA,aAArB;AACA,gBAAK3d,SAAL,GAAiB,KAAjB;AACA,gBAAKE,SAAL,GAAiB,KAAjB;AACA,gBAAKN,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKge,gBAAL,GAAwB,OAAxB;AACA;;;;;AAIA,gBAAKC,kBAAL,GAA0B,KAA1B;AAhBkD;AAiBrD;AACD;;;;;;;;;AA2DA;;;mCAGW;AAAA;;AACP;AACA,cAAM3F,IAAI,GAAG,KAAKyF,aAAlB;;AACA,cAAIzF,IAAI,CAAC9U,MAAL,IAAe8U,IAAI,CAAC9U,MAAL,CAAYmK,IAAZ;AAAkB;;;;AAIrC,oBAAArK,KAAK;AAAA,mBAAIgV,IAAI,CAAC1J,WAAL,CAAiBtL,KAAjB,EAAwB,OAAI,CAACE,MAA7B,CAAJ;AAAA,WAJc,CAAnB,EAIiD;AAC7C,iBAAK0a,YAAL,CAAkB,IAAlB;AACH;AACD;;;AACA,cAAMC,WAAW,GAAG,KAAK/d,SAAzB,CAXO,CAYP;AACA;AACA;AACA;AACA;;AACAuI,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,gBAAI,OAAI,CAACzI,SAAL,IAAkB+d,WAAtB,EAAmC;AAC/B,qBAAI,CAAC7f,QAAL,GAAgB,IAAhB;;AACA,qBAAI,CAACwf,eAAL,CAAqB1a,YAArB;AACH;AACJ,WARD;AASA,eAAK6a,kBAAL,GAA0B,IAA1B;AACH;AACD;;;;;;6CAGqB;AACjB,kFAAS,KAAKnK,MAAd,EAAsB,KAAKb,QAA3B;AACH;AACD;;;;;;sCAGc;AAAA;;AACV,cAAI,KAAK3U,QAAT,EAAmB;AACf;AACA;AACAqK,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF,qBAAI,CAACvK,QAAL,GAAgB,KAAhB;AACH,aALD;AAMH;AACD;;;AACA,cAAM8f,QAAQ,GAAG,KAAKpe,SAAtB;AACA;;AACA,cAAMqe,aAAa,GAAG,KAAKN,aAAL,CAAmBO,qBAAnB,CAAyC,IAAzC,CAAtB,CAdU,CAeV;;;AACA,cAAIF,QAAQ,IAAIC,aAAhB,EAA+B;AAC3BA,yBAAa,CAACjc,KAAd;AACH;AACJ;AACD;;;;;;;iCAIS;AACL,eAAK9D,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAK2U,QAAL,CAAc9R,aAAd,CAA4BiB,KAA5B;AACH;AACD;;;;;;;;mCAKW;AACP,iBAAO,KAAKmc,KAAL,GAAc,KAAKA,KAAL,CAAWpd,aAAX,CAAyBuC,WAAzB,IAAwC,EAAtD,GAA4D,EAAnE;AACH;AACD;;;;;;;4CAIoB;AAChB,iBAAO,KAAKlB,QAAL,IAAiB,KAAKa,aAAtB,IAAuC,KAAK0a,aAAL,CAAmB1a,aAAjE;AACH;AACD;;;;;;uCAGe;AACX,cAAI,CAAC,KAAKb,QAAN,KAAmB,KAAKub,aAAL,CAAmB1U,QAAnB,IAA+B,CAAC,KAAK/K,QAAxD,CAAJ,EAAuE;AACnE,iBAAKkgB,MAAL,GADmE,CAEnE;;AACA,iBAAKT,aAAL,CAAmBU,gBAAnB,CAAoC,IAApC;AACH;AACJ;AACD;;;;;;uCAGe;AACX,eAAKV,aAAL,CAAmBW,iBAAnB,CAAqC,IAArC;;AACA,eAAK1e,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;;sCAGc;AACV,eAAK+d,aAAL,CAAmBxW,UAAnB;;AACA,eAAKvH,SAAL,GAAiB,KAAjB;AACH;AACD;;;;;;;0CAIkB;AACd,iBAAO,KAAKiT,QAAL,CAAc9R,aAArB;AACH;AACD;;;;;;;;qCAKa7C,Q,EAAU;AACnB,cAAIA,QAAQ,KAAK,KAAK8B,SAAtB,EAAiC;AAC7B,mBAAO,KAAP;AACH;;AACD,eAAKA,SAAL,GAAiB9B,QAAjB;;AACA,cAAIA,QAAJ,EAAc;AACV,iBAAKyf,aAAL,CAAmBY,eAAnB,CAAmC9S,MAAnC,CAA0C,IAA1C;AACH,WAFD,MAGK;AACD,iBAAKkS,aAAL,CAAmBY,eAAnB,CAAmCvT,QAAnC,CAA4C,IAA5C;AACH;;AACD,eAAK0S,eAAL,CAAqB1a,YAArB;;AACA,iBAAO,IAAP;AACH;AACD;;;;;;;;;wCAMgB;AACZ,eAAK0a,eAAL,CAAqB1a,YAArB;AACH;;;4BA1MW;AAAE,iBAAO,KAAKwb,MAAL,IAAe,KAAKb,aAAL,CAAmB1Y,KAAzC;AAAiD;AAC/D;;;;;0BAIUkV,Q,EAAU;AAAE,eAAKqE,MAAL,GAAcrE,QAAd;AAAyB;AAC/C;;;;;;;4BAIY;AAAE,iBAAO,KAAK/W,MAAZ;AAAqB;AACnC;;;;;0BAIU+W,Q,EAAU;AAChB,cAAI,KAAKjc,QAAL,IAAiBic,QAAQ,KAAK,KAAKjX,KAAnC,IAA4C,KAAK2a,kBAArD,EAAyE;AACrE,iBAAK3f,QAAL,GAAgB,KAAhB;AACH;;AACD,eAAKkF,MAAL,GAAc+W,QAAd;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKja,SAAL,IAAmB,KAAKyd,aAAL,IAAsB,KAAKA,aAAL,CAAmBvb,QAAnE;AAA+E;AAChG;;;;;0BAIac,K,EAAO;AAChB;AACA,cAAMiX,QAAQ,GAAG,oFAAsBjX,KAAtB,CAAjB;;AACA,cAAIiX,QAAQ,KAAK,KAAKja,SAAtB,EAAiC;AAC7B,iBAAKA,SAAL,GAAiBia,QAAjB;;AACA,iBAAKuD,eAAL,CAAqB1a,YAArB;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK2a,aAAL,CAAmBY,eAAnB,CAAmC5R,UAAnC,CAA8C,IAA9C,CAAP;AAA6D;AAC9E;;;;;0BAIazJ,K,EAAO;AAChB;AACA,cAAMyJ,UAAU,GAAG,oFAAsBzJ,KAAtB,CAAnB;;AACA,cAAIyJ,UAAU,KAAK,KAAK3M,SAAxB,EAAmC;AAC/B,iBAAK8d,YAAL,CAAkBnR,UAAlB;;AACA,iBAAKgR,aAAL,CAAmBc,kBAAnB;AACH;AACJ;;;;MAlFuBtB,uB;;AAwO5BM,iBAAa,CAACjf,IAAd,GAAqB,SAASkgB,qBAAT,CAA+BhgB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI+e,aAAV,EAAyB,gEAAyB,wDAAzB,CAAzB,EAAsE,gEAAyB,+DAAzB,CAAtE,EAA0H,gEAAyB;AAAa;;;AAE7M;AAAA,eAAMJ,gBAAN;AAAA,OAFgM,CAAzB,CAA1H,CAAP;AAET,KAFhD;;AAGAI,iBAAa,CAAC3P,IAAd,GAAqB,gEAAyB;AAAElP,UAAI,EAAE6e,aAAR;AAAuB5e,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD4E,oBAAc,EAAE,SAASkb,4BAAT,CAAsChb,EAAtC,EAA0CC,GAA1C,EAA+CC,QAA/C,EAAyD;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AACtL,uEAAsBE,QAAtB,EAAgCgY,yBAAhC,EAA2D,IAA3D;;AACA,uEAAsBhY,QAAtB,EAAgCkY,uBAAhC,EAAyD,IAAzD;;AACA,uEAAsBlY,QAAtB,EAAgC,8DAAhC,EAAyC,IAAzC;AACH;;AAAC,YAAIF,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC8Y,OAAJ,GAAc3Y,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC+Y,KAAJ,GAAY5Y,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAAC8P,MAAJ,GAAa3P,EAAlE;AACH;AAAE,OATuC;AASrC6a,eAAS,EAAE,SAASC,mBAAT,CAA6Blb,EAA7B,EAAiCC,GAAjC,EAAsC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChE,oEAAmB+W,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAI/W,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACua,KAAJ,GAAYpa,EAAE,CAACE,KAApE;AACH;AAAE,OAduC;AAcrCnF,eAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,eAAtB,EAAuC,iBAAvC,EAA0D,qBAA1D,CAd0B;AAcwDsF,cAAQ,EAAE,EAdlE;AAcsEC,kBAAY,EAAE,SAASya,0BAAT,CAAoCnb,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrL,mEAAkB,OAAlB,EAA2B,SAASob,sCAAT,GAAkD;AAAE,mBAAOnb,GAAG,CAACob,YAAJ,EAAP;AAA4B,WAA3G,EAA6G,MAA7G,EAAqH,SAASC,qCAAT,GAAiD;AAAE,mBAAOrb,GAAG,CAACsb,WAAJ,EAAP;AAA2B,WAAnM,EAAqM,OAArM,EAA8M,SAASC,sCAAT,GAAkD;AAAE,mBAAOvb,GAAG,CAACa,YAAJ,EAAP;AAA4B,WAA9R;AACH;;AAAC,YAAId,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,eAAnB,EAAoCC,GAAG,CAAC1F,QAAxC,EAAkD,eAAlD,EAAmE0F,GAAG,CAACxB,QAAvE,EAAiF,UAAjF,EAA6F,IAAI,CAAjG;;AACA,oEAAmB,wBAAnB,EAA6CwB,GAAG,CAACxB,QAAjD,EAA2D,2BAA3D,EAAwFwB,GAAG,CAAC8Y,OAAJ,IAAe9Y,GAAG,CAAC+Y,KAA3G,EAAkH,aAAlH,EAAiI/Y,GAAG,CAACqB,KAAJ,KAAc,SAA/I,EAA0J,YAA1J,EAAwKrB,GAAG,CAACqB,KAAJ,KAAc,SAAd,IAA2BrB,GAAG,CAACqB,KAAJ,KAAc,MAAjN,EAAyN,UAAzN,EAAqOrB,GAAG,CAACqB,KAAJ,KAAc,MAAnP,EAA2P,iCAA3P,EAA8RrB,GAAG,CAAC1F,QAAJ,IAAgB,CAAC0F,GAAG,CAAC+Z,aAAJ,CAAkB1U,QAAjU;AACH;AAAE,OAnBuC;AAmBrCjE,YAAM,EAAE;AAAE/B,qBAAa,EAAE,eAAjB;AAAkC2a,wBAAgB,EAAE,kBAApD;AAAwE3Y,aAAK,EAAE,OAA/E;AAAwF/B,aAAK,EAAE,OAA/F;AAAwGhF,gBAAQ,EAAE,UAAlH;AAA8HkE,gBAAQ,EAAE;AAAxI,OAnB6B;AAmByH+C,cAAQ,EAAE,CAAC,eAAD,CAnBnI;AAmBsJC,cAAQ,EAAE,CAAC,wEAAD,CAnBhK;AAmBqMwJ,wBAAkB,EAAEkM,GAnBzN;AAmB8NjM,WAAK,EAAE,CAnBrO;AAmBwOC,UAAI,EAAE,CAnB9O;AAmBiPC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,EAA+B,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,sBAAtB,EAA8C,CAA9C,EAAiD,kBAAjD,EAAqE,mBAArE,CAA/B,EAA0H,CAAC,CAAD,EAAI,OAAJ,EAAa,UAAb,EAAyB,CAAzB,EAA4B,MAA5B,CAA1H,EAA+J,CAAC,CAAD,EAAI,eAAJ,CAA/J,EAAqL,CAAC,MAAD,EAAS,EAAT,CAArL,EAAmM,CAAC,CAAD,EAAI,OAAJ,EAAa,UAAb,CAAnM,CAnBzP;AAmBudC,cAAQ,EAAE,SAASoQ,sBAAT,CAAgCzb,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9jB,wEAAuBkX,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,mEAAkB,CAAlB,EAAqBF,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,qBAAzE,EAAgG,CAAhG;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIhX,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,+BAAnB,EAAoDC,GAAG,CAACga,gBAAJ,IAAwB,OAA5E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCha,GAAG,CAAC2Y,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkF3Y,GAAG,CAACkZ,iBAAJ,EAAlF;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BlZ,GAAG,CAAC+Z,aAAJ,CAAkB1U,QAA5C;AACH;AAAE,OAnCuC;AAmCrC8T,gBAAU,EAAE,CAAC,gEAAD,EAAmB,oDAAnB,EAAgC,wEAAhC,CAnCyB;AAmCkC5N,mBAAa,EAAE,CAnCjD;AAmCoDC,qBAAe,EAAE;AAnCrE,KAAzB,CAArB;AAoCA;;AACAqO,iBAAa,CAACpY,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEzG,YAAI,EAAE;AAAR,OADiC,EAEjC;AAAEA,YAAI,EAAE;AAAR,OAFiC,EAGjC;AAAEA,YAAI,EAAEye,gBAAR;AAA0B/X,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAG1D;AAAA,mBAAMse,gBAAN;AAAA,WAH8C,CAAD;AAAtB,SAAD;AAAtC,OAHiC,CAAN;AAAA,KAA/B;;AAQAI,iBAAa,CAACjY,cAAd,GAA+B;AAC3BkX,aAAO,EAAE,CAAC;AAAE9d,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC8c,yBAAD;AAA5B,OAAD,CADkB;AAE3Bc,WAAK,EAAE,CAAC;AAAE/d,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACgd,uBAAD;AAA5B,OAAD,CAFoB;AAG3BrI,YAAM,EAAE,CAAC;AAAE9U,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CAHmB;AAI3B8O,WAAK,EAAE,CAAC;AAAEvf,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,MAAD;AAAzB,OAAD,CAJoB;AAK3B6e,sBAAgB,EAAE,CAAC;AAAEhf,YAAI,EAAE;AAAR,OAAD,CALS;AAM3BqG,WAAK,EAAE,CAAC;AAAErG,YAAI,EAAE;AAAR,OAAD,CANoB;AAO3BsE,WAAK,EAAE,CAAC;AAAEtE,YAAI,EAAE;AAAR,OAAD,CAPoB;AAQ3BwD,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD,CARiB;AAS3BV,cAAQ,EAAE,CAAC;AAAEU,YAAI,EAAE;AAAR,OAAD;AATiB,KAA/B;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyB6e,aAAzB,EAAwC,CAAC;AAC9D7e,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,iBADX;AAECmG,kBAAQ,EAAE,eAFX;AAGCH,gBAAM,EAAE,CAAC,eAAD,CAHT;AAIC/F,cAAI,EAAE;AACF,oBAAQ,QADN;AAEF,qBAAS,mDAFP;AAGF,uBAAW,gBAHT;AAIF,sBAAU,eAJR;AAKF,uBAAW,gBALT;AAMF,8CAAkC,UANhC;AAOF,iDAAqC,kBAPnC;AAQF;AACA;AACA;AACA,mCAAuB,qBAXrB;AAYF;AACA;AACA,kCAAsB,yCAdpB;AAeF,gCAAoB,kBAflB;AAgBF,uDAA2C,qCAhBzC;AAiBF,oCAAwB,UAjBtB;AAkBF,oCAAwB,UAlBtB;AAmBF,+BAAmB;AAnBjB,WAJP;AAyBC+P,kBAAQ,EAAE,4nBAzBX;AA0BCG,uBAAa,EAAE,gEAAkBI,IA1BlC;AA2BCH,yBAAe,EAAE,sEAAwBI;AA3B1C,SAAD;AAFwD,OAAD,CAAxC,EA+BrB,YAAY;AAAE,eAAO,CAAC;AAAE5Q,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAEye,gBAAR;AAA0B/X,oBAAU,EAAE,CAAC;AACtH1G,gBAAI,EAAE,oDADgH;AAEtHG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAMse,gBAAN;AAAA,aAFhB,CAAD;AAFgH,WAAD;AAAtC,SAAlE,CAAP;AAKF,OApCS,EAoCP;AAAEO,wBAAgB,EAAE,CAAC;AAC/Bhf,cAAI,EAAE;AADyB,SAAD,CAApB;AAEVqG,aAAK,EAAE,CAAC;AACRrG,cAAI,EAAE;AADE,SAAD,CAFG;AAIVsE,aAAK,EAAE,CAAC;AACRtE,cAAI,EAAE;AADE,SAAD,CAJG;AAMVV,gBAAQ,EAAE,CAAC;AACXU,cAAI,EAAE;AADK,SAAD,CANA;AAQVwD,gBAAQ,EAAE,CAAC;AACXxD,cAAI,EAAE;AADK,SAAD,CARA;AAUV8d,eAAO,EAAE,CAAC;AACV9d,cAAI,EAAE,0DADI;AAEVG,cAAI,EAAE,CAAC8c,yBAAD;AAFI,SAAD,CAVC;AAaVc,aAAK,EAAE,CAAC;AACR/d,cAAI,EAAE,0DADE;AAERG,cAAI,EAAE,CAACgd,uBAAD;AAFE,SAAD,CAbG;AAgBVrI,cAAM,EAAE,CAAC;AACT9U,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAAC,8DAAD,EAAU;AAAEsQ,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CAhBE;AAmBV8O,aAAK,EAAE,CAAC;AACRvf,cAAI,EAAE,uDADE;AAERG,cAAI,EAAE,CAAC,MAAD;AAFE,SAAD;AAnBG,OApCO;AA0Db,KA1DF;;AA2Dd,QAAI,KAAJ,EAAW,CAsEV;AACD;;;;;QAGMse,gB;;;;;AACF;;;;;AAKA,gCAAYxK,QAAZ,EACA;AACAnT,cAFA,EAEUge,eAFV,EAE2B;AAAA;;AAAA;;AACvB;AACA,gBAAK7K,QAAL,GAAgBA,QAAhB;AACA,gBAAK6K,eAAL,GAAuBA,eAAvB;AACA,gBAAKrW,SAAL,GAAiB,IAAjB;AACA,gBAAKgY,mBAAL,GAA2B,KAA3B;AACA;;;;AAGA,gBAAK/e,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;;AAIA,gBAAKZ,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,gBAAKuF,KAAL,GAAa,QAAb;AACA;;;;;;AAKA,gBAAKuJ,WAAL;AAAoB;;;;;AAKpB,kBAAC8Q,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;;AAMA,gBAAKrf,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKqe,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,QAAKlX,SAAxB,CAAvB;AACA;;;;AAGA,gBAAKJ,SAAL,GAAiB,CAAC,CAAlB;AACA;;;;AAGA,gBAAKG,SAAL;AAAkB;;;;AAIlB,kBAACoY,CAAD,EAAO,CAAG,CAJV;AAKA;;;;;AAGA,gBAAKzY,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,gBAAKI,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;;AAtDuB;AA0D1B;AACD;;;;;;;;;AAqCA;;;6CAGqB;AAAA;;AACjB,eAAKkY,mBAAL,GAA2B,IAA3B;AACA,eAAKvX,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKgC,OAAzB,EACd9B,QADc,GAEdyX,aAFc,GAGf;AACA;AAJe,WAKdC,aALc;AAKC;;;AAGpB;AAAA,mBAAM,KAAN;AAAA,WARmB,EASdC,uBATc,CASU,CAAC,UAAD,CATV,CAAnB;;AAUA,cAAI,KAAKvc,MAAT,EAAiB;AACb,iBAAKwc,qBAAL,CAA2B,KAAKxc,MAAhC;AACH,WAdgB,CAejB;;;AACA,eAAK0E,WAAL,CAAiBM,MAAjB,CAAwBvF,IAAxB,CAA6B,iEAAU,KAAKkE,UAAf,CAA7B,EAAyDjE,SAAzD;AAAoE;;;AAGpE,sBAAM;AACF,mBAAI,CAACuF,iBAAL;AACH,WALD,EAhBiB,CAsBjB;;;AACA,eAAKyB,OAAL,CAAaxB,OAAb,CAAqBzF,IAArB,CAA0B,iEAAU,IAAV,CAA1B,EAA2C,iEAAU,KAAKkE,UAAf,CAA3C,EAAuEjE,SAAvE;AAAkF;;;AAGlF,sBAAM;AACF,mBAAI,CAAC+F,eAAL;AACH,WALD,EAvBiB,CA6BjB;;AACA,eAAK0V,eAAL,CAAqBsB,OAArB,CAA6Bhd,IAA7B,CAAkC,iEAAU,KAAKkE,UAAf,CAAlC,EAA8DjE,SAA9D;AAAyE;;;;AAIzE,oBAAAX,KAAK,EAAI;AACL,gBAAIA,KAAK,CAAC2d,KAAV,EAAiB;AAAA,yDACI3d,KAAK,CAAC2d,KADV;AAAA;;AAAA;AACb,oEAA8B;AAAA,sBAArBC,IAAqB;AAC1BA,sBAAI,CAAC7hB,QAAL,GAAgB,IAAhB;AACH;AAHY;AAAA;AAAA;AAAA;AAAA;AAIhB;;AACD,gBAAIiE,KAAK,CAAC3B,OAAV,EAAmB;AAAA,0DACE2B,KAAK,CAAC3B,OADR;AAAA;;AAAA;AACf,uEAAgC;AAAA,sBAAvBuf,KAAuB;AAC5BA,uBAAI,CAAC7hB,QAAL,GAAgB,KAAhB;AACH;AAHc;AAAA;AAAA;AAAA;AAAA;AAIlB;AACJ,WAfD;AAgBH;AACD;;;;;;;oCAIYoK,O,EAAS;AACjB;AACA,cAAM0X,oBAAoB,GAAG1X,OAAO,CAAC,eAAD,CAApC;AACA;;AACA,cAAM2X,YAAY,GAAG3X,OAAO,CAAC,OAAD,CAA5B;;AACA,cAAK0X,oBAAoB,IAAI,CAACA,oBAAoB,CAACE,WAA/C,IACCD,YAAY,IAAI,CAACA,YAAY,CAACC,WADnC,EACiD;AAC7C,iBAAKC,oBAAL;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAKpZ,UAAL,CAAgB9E,IAAhB;;AACA,eAAK8E,UAAL,CAAgBoC,QAAhB;;AACA,eAAKiX,YAAL,GAAoB,IAApB;AACH;AACD;;;;;;;;8BAKMtW,O,EAAS;AACX,eAAK+I,QAAL,CAAc9R,aAAd,CAA4BiB,KAA5B,CAAkC8H,OAAlC;AACH;AACD;;;;;;;oCAIY;AACR,eAAKuW,sBAAL,CAA4B,IAA5B;AACH;AACD;;;;;;;sCAIc;AACV,eAAKA,sBAAL,CAA4B,KAA5B;AACH;AACD;;;;;;;;0CAKkB7C,M,EAAQ;AACtB,eAAK1V,WAAL,CAAiBoF,gBAAjB,CAAkCsQ,MAAlC;AACH;AACD;;;;;;;;8CAKsBA,M,EAAQ;AAC1B;AACA,cAAM8C,WAAW,GAAG,KAAKC,eAAL,CAAqB/C,MAArB,CAApB;;AACA,cAAI8C,WAAW,GAAG,CAAC,CAAf,IAAoB,KAAKxY,WAAL,CAAiB0Y,eAAjB,KAAqCF,WAA7D,EAA0E;AACtE;AACA,gBAAIA,WAAW,GAAG,CAAlB,EAAqB;AACjB,mBAAKxY,WAAL,CAAiBoF,gBAAjB,CAAkCoT,WAAW,GAAG,CAAhD;AACH,aAFD,MAGK,IAAIA,WAAW,KAAK,CAAhB,IAAqB,KAAKxW,OAAL,CAAaE,MAAb,GAAsB,CAA/C,EAAkD;AACnD,mBAAKlC,WAAL,CAAiBoF,gBAAjB,CAAkCzC,IAAI,CAACC,GAAL,CAAS4V,WAAW,GAAG,CAAvB,EAA0B,KAAKxW,OAAL,CAAaE,MAAb,GAAsB,CAAhD,CAAlC;AACH;AACJ;;AACD,iBAAO,KAAKlC,WAAL,CAAiB2Y,UAAxB;AACH;AACD;;;;;;;;iCAKSte,K,EAAO;AACZ;AACA,cAAMI,OAAO,GAAGJ,KAAK,CAACI,OAAtB;AACA;;AACA,cAAMme,OAAO,GAAG,KAAK5Y,WAArB;AACA;;AACA,cAAM6Y,kBAAkB,GAAGD,OAAO,CAACF,eAAnC;AACA;;AACA,cAAMI,WAAW,GAAG,6EAAeze,KAAf,CAApB;;AACA,kBAAQI,OAAR;AACI,iBAAK,2DAAL;AACA,iBAAK,2DAAL;AACI,kBAAI,CAACqe,WAAD,IAAgB,CAACF,OAAO,CAACG,QAAR,EAArB,EAAyC;AACrC,qBAAKC,oBAAL,GADqC,CAErC;;;AACA3e,qBAAK,CAACE,cAAN;AACH;;AACD;;AACJ,iBAAK,0DAAL;AACA,iBAAK,yDAAL;AACI,kBAAI,CAACue,WAAL,EAAkB;AACdre,uBAAO,KAAK,0DAAZ,GAAmBme,OAAO,CAACzW,kBAAR,EAAnB,GAAkDyW,OAAO,CAACrW,iBAAR,EAAlD;AACAlI,qBAAK,CAACE,cAAN;AACH;;AACD;;AACJ;AACI;AACA,kBAAIE,OAAO,KAAK,uDAAZ,IAAiB,KAAK0G,QAAtB,IAAkC,6EAAe9G,KAAf,EAAsB,SAAtB,CAAlC,IACA,CAACue,OAAO,CAACG,QAAR,EADL,EACyB;AACrB;AACA,oBAAME,YAAY,GAAG,KAAKjX,OAAL,CAAayD,IAAb;AAAmB;;;;AAIxC,0BAAAiQ,MAAM;AAAA,yBAAI,CAACA,MAAM,CAACpb,QAAR,IAAoB,CAACob,MAAM,CAACtf,QAAhC;AAAA,iBAJe,CAArB;;AAKA,qBAAKmiB,sBAAL,CAA4BU,YAA5B,EAA0C,IAA1C;;AACA5e,qBAAK,CAACE,cAAN;AACH,eAVD,MAWK;AACDqe,uBAAO,CAACnW,SAAR,CAAkBpI,KAAlB;AACH;;AA/BT;;AAiCA,cAAI,KAAK8G,QAAL,KAAkB1G,OAAO,KAAK,8DAAZ,IAAwBA,OAAO,KAAK,gEAAtD,KAAqEJ,KAAK,CAAC6e,QAA3E,IACAN,OAAO,CAACF,eAAR,KAA4BG,kBADhC,EACoD;AAChD,iBAAKG,oBAAL;AACH;AACJ;AACD;;;;;;;6CAIqB;AACjB;AACA;AACA;AACA,cAAI,KAAKhX,OAAL,IAAgB,CAAC,KAAKsW,YAA1B,EAAwC;AACpC;AACA,gBAAMld,KAAK,GAAG,KAAK+d,wBAAL,EAAd;;AACA,iBAAK7Z,SAAL,CAAelE,KAAf;;AACA,iBAAKE,MAAL,GAAcF,KAAd;AACH;AACJ;AACD;;;;;;;;yCAKiBsa,M,EAAQ;AACrB,eAAKld,eAAL,CAAqBqB,IAArB,CAA0B,IAAI4b,sBAAJ,CAA2B,IAA3B,EAAiCC,MAAjC,CAA1B;AACH;AACD;;;;;;;;mCAKW;AACP;AACA,cAAM0D,WAAW,GAAG,KAAKpZ,WAAL,CAAiB0Y,eAArC;;AACA,cAAI,CAACU,WAAD,IAAiBA,WAAW,KAAK,CAAC,CAAtC,EAA0C;AACtC;AACA,iBAAKpZ,WAAL,CAAiBmC,kBAAjB;AACH,WAHD,MAIK;AACD;AACA,iBAAKnC,WAAL,CAAiB6C,aAAjB,CAA+BuW,WAA/B;AACH;AACJ;AACD;;;;;;;;mCAKWC,M,EAAQ;AACf,eAAK/d,MAAL,GAAc+d,MAAd;;AACA,cAAI,KAAKrX,OAAT,EAAkB;AACd,iBAAK8V,qBAAL,CAA2BuB,MAAM,IAAI,EAArC;AACH;AACJ;AACD;;;;;;;;yCAKiBvX,U,EAAY;AACzB,eAAKxH,QAAL,GAAgBwH,UAAhB;AACH;AACD;;;;;;;;yCAKiBD,E,EAAI;AACjB,eAAKvC,SAAL,GAAiBuC,EAAjB;AACH;AACD;;;;;;;;0CAKkBA,E,EAAI;AAClB,eAAKxC,UAAL,GAAkBwC,EAAlB;AACH;AACD;;;;;;;;;8CAMsBwX,M,EAAQ;AAAA;;AAC1B,eAAKrX,OAAL,CAAaiB,OAAb;AAAsB;;;;AAItB,oBAAAyS,MAAM;AAAA,mBAAIA,MAAM,CAACM,YAAP,CAAoB,KAApB,CAAJ;AAAA,WAJN;AAKAqD,gBAAM,CAACpW,OAAP;AAAgB;;;;AAIhB,oBAAA7H,KAAK,EAAI;AACL;AACA,gBAAMke,mBAAmB,GAAG,OAAI,CAACtX,OAAL,CAAayB,IAAb;AAAmB;;;;AAI/C,sBAAAiS,MAAM,EAAI;AACN;AACA;AACA,qBAAOA,MAAM,CAACtf,QAAP,GAAkB,KAAlB,GAA0B,OAAI,CAACsQ,WAAL,CAAiBgP,MAAM,CAACta,KAAxB,EAA+BA,KAA/B,CAAjC;AACH,aAR2B,CAA5B;;AASA,gBAAIke,mBAAJ,EAAyB;AACrBA,iCAAmB,CAACtD,YAApB,CAAiC,IAAjC;AACH;AACJ,WAlBD;AAmBH;AACD;;;;;;;;mDAK2B;AACvB,iBAAO,KAAKhU,OAAL,CAAa+P,MAAb;AAAqB;;;;AAI5B,oBAAA2D,MAAM;AAAA,mBAAIA,MAAM,CAACtf,QAAX;AAAA,WAJC,EAIqB4N,GAJrB;AAI0B;;;;AAIjC,oBAAA0R,MAAM;AAAA,mBAAIA,MAAM,CAACta,KAAX;AAAA,WARC,CAAP;AASH;AACD;;;;;;;;+CAKuB;AACnB;AACA,cAAIme,YAAY,GAAG,KAAKvZ,WAAL,CAAiB0Y,eAApC;;AACA,cAAIa,YAAY,IAAI,IAAhB,IAAwB,KAAKpU,aAAL,CAAmBoU,YAAnB,CAA5B,EAA8D;AAC1D;AACA,gBAAIC,aAAa,GAAG,KAAKxX,OAAL,CAAaiD,OAAb,GAAuBsU,YAAvB,CAApB;;AACA,gBAAIC,aAAa,IAAI,CAACA,aAAa,CAAClf,QAAhC,KAA6C,KAAKiF,SAAL,IAAkB,CAACia,aAAa,CAACpjB,QAA9E,CAAJ,EAA6F;AACzFojB,2BAAa,CAAClD,MAAd,GADyF,CAEzF;AACA;;AACA,mBAAKC,gBAAL,CAAsBiD,aAAtB;AACH;AACJ;AACJ;AACD;;;;;;;;;;;+CAQuB3U,U,EAAY4U,Y,EAAc;AAC7C;AACA;;AACA;AACA,cAAIC,UAAU,GAAG,KAAjB;AACA,eAAK1X,OAAL,CAAaiB,OAAb;AAAsB;;;;AAItB,oBAAAyS,MAAM,EAAI;AACN,gBAAI,CAAC,CAAC+D,YAAD,IAAiB,CAAC/D,MAAM,CAACpb,QAA1B,KAAuCob,MAAM,CAACM,YAAP,CAAoBnR,UAApB,CAA3C,EAA4E;AACxE6U,wBAAU,GAAG,IAAb;AACH;AACJ,WARD;;AASA,cAAIA,UAAJ,EAAgB;AACZ,iBAAK/C,kBAAL;AACH;AACJ;AACD;;;;;;;;;sCAMc7T,K,EAAO;AACjB,iBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKd,OAAL,CAAaE,MAA1C;AACH;AACD;;;;;;;;;wCAMgBwT,M,EAAQ;AACpB,iBAAO,KAAK1T,OAAL,CAAaiD,OAAb,GAAuBC,OAAvB,CAA+BwQ,MAA/B,CAAP;AACH;AACD;;;;;;;;+CAKuB;AACnB,cAAI,KAAK1T,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAaiB,OAAb;AAAsB;;;;AAItB,sBAAAyS,MAAM;AAAA,qBAAIA,MAAM,CAACzb,aAAP,EAAJ;AAAA,aAJN;AAKH;AACJ;AACD;;;;;;;;;;4CAOoB;AAAA;;AAChB,eAAKkF,SAAL,GAAiB,CAAC,CAAlB;AACA+E,oBAAU;AAAE;;;AAGZ,sBAAM;AACF,mBAAI,CAAC/E,SAAL,GAAiB,CAAjB;;AACA,mBAAI,CAACyW,eAAL,CAAqB1a,YAArB;AACH,WANS,CAAV;AAOH;AACD;;;;;;;;0CAKkB;AACd,eAAKiE,SAAL,GAAkB,KAAK6C,OAAL,CAAaE,MAAb,KAAwB,CAAzB,GAA8B,CAAC,CAA/B,GAAmC,CAApD;AACH;;;4BA9ac;AAAE,iBAAO,KAAK9J,SAAZ;AAAwB;AACzC;;;;;0BAIagD,K,EAAO;AAChB,eAAKhD,SAAL,GAAiB,oFAAsBgD,KAAtB,CAAjB,CADgB,CAEhB;AACA;AACA;AACA;;AACA,eAAKid,oBAAL;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK9Y,SAAZ;AAAwB;AACzC;;;;;0BAIanE,K,EAAO;AAChB;AACA,cAAMiX,QAAQ,GAAG,oFAAsBjX,KAAtB,CAAjB;;AACA,cAAIiX,QAAQ,KAAK,KAAK9S,SAAtB,EAAiC;AAC7B,gBAAI,qEAAe,KAAKgY,mBAAxB,EAA6C;AACzC,oBAAM,IAAIjK,KAAJ,CAAU,2EAAV,CAAN;AACH;;AACD,iBAAK/N,SAAL,GAAiB8S,QAAjB;AACA,iBAAKoE,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAKlX,SAAxB,EAAmC,KAAKkX,eAAL,CAAqBrgB,QAAxD,CAAvB;AACH;AACJ;;;;MAvG0B+e,0B;;AAuf/BI,oBAAgB,CAAC7e,IAAjB,GAAwB,SAASijB,wBAAT,CAAkC/iB,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAI2e,gBAAV,EAA4B,gEAAyB,wDAAzB,CAA5B,EAAyE,gEAAyB,UAAzB,CAAzE,EAA+G,gEAAyB,+DAAzB,CAA/G,CAAP;AAA4K,KAA3O;;AACAA,oBAAgB,CAACvP,IAAjB,GAAwB,gEAAyB;AAAElP,UAAI,EAAEye,gBAAR;AAA0Bxe,eAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;AAA+D4E,oBAAc,EAAE,SAASie,+BAAT,CAAyC/d,EAAzC,EAA6CC,GAA7C,EAAkDC,QAAlD,EAA4D;AAAE,YAAIF,EAAE,GAAG,CAAT,EAAY;AAClM,uEAAsBE,QAAtB,EAAgC4Z,aAAhC,EAA+C,IAA/C;AACH;;AAAC,YAAI9Z,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACkG,OAAJ,GAAc/F,EAAnE;AACH;AAAE,OAL0C;AAKxCjF,eAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,oBAAvB,EAA6C,eAA7C,CAL6B;AAKkCsF,cAAQ,EAAE,CAL5C;AAK+CC,kBAAY,EAAE,SAASsd,6BAAT,CAAuChe,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACpK,mEAAkB,OAAlB,EAA2B,SAASie,yCAAT,GAAqD;AAAE,mBAAOhe,GAAG,CAACxD,QAAJ,EAAP;AAAwB,WAA1G,EAA4G,SAA5G,EAAuH,SAASyhB,2CAAT,CAAqDrd,MAArD,EAA6D;AAAE,mBAAOZ,GAAG,CAACwK,QAAJ,CAAa5J,MAAb,CAAP;AAA8B,WAApN;AACH;;AAAC,YAAIb,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,sBAAnB,EAA2CC,GAAG,CAACqF,QAA/C,EAAyD,eAAzD,EAA0ErF,GAAG,CAACxB,QAAJ,CAAamB,QAAb,EAA1E,EAAmG,UAAnG,EAA+GK,GAAG,CAACqD,SAAnH;AACH;AAAE,OAT0C;AASxCjC,YAAM,EAAE;AAAE/B,qBAAa,EAAE,eAAjB;AAAkCvD,gBAAQ,EAAE,UAA5C;AAAwDuF,aAAK,EAAE,OAA/D;AAAwEuJ,mBAAW,EAAE,aAArF;AAAoGpM,gBAAQ,EAAE,UAA9G;AAA0H6G,gBAAQ,EAAE;AAApI,OATgC;AASkH/D,aAAO,EAAE;AAAE5E,uBAAe,EAAE;AAAnB,OAT3H;AASmK6E,cAAQ,EAAE,CAAC,kBAAD,CAT7K;AASmMC,cAAQ,EAAE,CAAC,iEAA0B,CAACgY,iCAAD,CAA1B,CAAD,EAAiE,wEAAjE,EAAoG,kEAApG,CAT7M;AAS+UxO,wBAAkB,EAAE9Q,GATnW;AASwW+Q,WAAK,EAAE,CAT/W;AASkXC,UAAI,EAAE,CATxX;AAS2XE,cAAQ,EAAE,SAAS8S,yBAAT,CAAmCne,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxe;;AACA,qEAAoB,CAApB;AACH;AAAE,OAZ0C;AAYxCuL,YAAM,EAAE,CAAC,y5aAAD,CAZgC;AAY63aC,mBAAa,EAAE,CAZ54a;AAY+4aC,qBAAe,EAAE;AAZh6a,KAAzB,CAAxB;AAaA;;AACAiO,oBAAgB,CAAChY,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEzG,YAAI,EAAE;AAAR,OADoC,EAEpC;AAAEA,YAAI,EAAE2G,MAAR;AAAgBD,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAFoC,EAGpC;AAAEH,YAAI,EAAE;AAAR,OAHoC,CAAN;AAAA,KAAlC;;AAKAye,oBAAgB,CAAC7X,cAAjB,GAAkC;AAC9BsE,aAAO,EAAE,CAAC;AAAElL,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC0e,aAAD,EAAgB;AAAEpO,qBAAW,EAAE;AAAf,SAAhB;AAA/B,OAAD,CADqB;AAE9B/O,qBAAe,EAAE,CAAC;AAAE1B,YAAI,EAAE;AAAR,OAAD,CAFa;AAG9Bc,cAAQ,EAAE,CAAC;AAAEd,YAAI,EAAE;AAAR,OAAD,CAHoB;AAI9BqG,WAAK,EAAE,CAAC;AAAErG,YAAI,EAAE;AAAR,OAAD,CAJuB;AAK9B4P,iBAAW,EAAE,CAAC;AAAE5P,YAAI,EAAE;AAAR,OAAD,CALiB;AAM9BwD,cAAQ,EAAE,CAAC;AAAExD,YAAI,EAAE;AAAR,OAAD,CANoB;AAO9BqK,cAAQ,EAAE,CAAC;AAAErK,YAAI,EAAE;AAAR,OAAD;AAPoB,KAAlC;AASA;;AAAc,KAAC,YAAY;AAAE,sEAAyBye,gBAAzB,EAA2C,CAAC;AACjEze,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,oBADX;AAECmG,kBAAQ,EAAE,kBAFX;AAGCH,gBAAM,EAAE,CAAC,eAAD,CAHT;AAIC/F,cAAI,EAAE;AACF,oBAAQ,SADN;AAEF,qBAAS,kCAFP;AAGF,uBAAW,YAHT;AAIF,yBAAa,kBAJX;AAKF,2CAA+B,UAL7B;AAMF,oCAAwB,qBANtB;AAOF,+BAAmB;AAPjB,WAJP;AAaC+P,kBAAQ,EAAE,2BAbX;AAcCG,uBAAa,EAAE,gEAAkBI,IAdlC;AAeCD,mBAAS,EAAE,CAAC8N,iCAAD,CAfZ;AAgBChO,yBAAe,EAAE,sEAAwBI,MAhB1C;AAiBCN,gBAAM,EAAE,CAAC,y5aAAD;AAjBT,SAAD;AAF2D,OAAD,CAA3C,EAqBrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE2G,MAAR;AAAgBD,oBAAU,EAAE,CAAC;AACxE1G,gBAAI,EAAE,uDADkE;AAExEG,gBAAI,EAAE,CAAC,UAAD;AAFkE,WAAD;AAA5B,SAA9B,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGkC,OAxB3B,EAwB6B;AAAE0B,uBAAe,EAAE,CAAC;AAClE1B,cAAI,EAAE;AAD4D,SAAD,CAAnB;AAE9Cc,gBAAQ,EAAE,CAAC;AACXd,cAAI,EAAE;AADK,SAAD,CAFoC;AAI9CqG,aAAK,EAAE,CAAC;AACRrG,cAAI,EAAE;AADE,SAAD,CAJuC;AAM9C4P,mBAAW,EAAE,CAAC;AACd5P,cAAI,EAAE;AADQ,SAAD,CANiC;AAQ9CwD,gBAAQ,EAAE,CAAC;AACXxD,cAAI,EAAE;AADK,SAAD,CARoC;AAU9CqK,gBAAQ,EAAE,CAAC;AACXrK,cAAI,EAAE;AADK,SAAD,CAVoC;AAY9CkL,eAAO,EAAE,CAAC;AACVlL,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC0e,aAAD,EAAgB;AAAEpO,uBAAW,EAAE;AAAf,WAAhB;AAFI,SAAD;AAZqC,OAxB7B;AAuCb,KAvCF;;AAwCd,QAAI,KAAJ,EAAW,CAuGV;AAED;;;;;;;QAKM0S,a;;;;AAENA,iBAAa,CAAC1Q,IAAd,GAAqB,+DAAwB;AAAEzS,UAAI,EAAEmjB;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACzQ,IAAd,GAAqB,+DAAwB;AAAEC,aAAO,EAAE,SAASyQ,qBAAT,CAA+BtjB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIqjB,aAAV,GAAP;AAAoC,OAAnF;AAAqFxP,aAAO,EAAE,CAAC,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CAAD,EACnI,oEADmI,EAEnI,sEAFmI,EAGnI,8EAHmI,EAInI,2EAJmI;AAA9F,KAAxB,CAArB;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BqQ,aAA1B,EAAyC;AAAEpQ,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC8J,OAAD,EACxIN,UADwI,EAExIgB,WAFwI,EAGxIN,yBAHwI,EAIxIE,uBAJwI,EAKxIE,4BALwI,EAMxIoB,gBANwI,EAOxII,aAPwI,CAAP;AAOhH,SAPkF;AAOhFlL,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CAAP;AAAkG,SAPzC;AAO2CX,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC6J,OAAD,EAC5KN,UAD4K,EAE5KgB,WAF4K,EAG5KN,yBAH4K,EAI5K,oEAJ4K,EAK5K,sEAL4K,EAM5KE,uBAN4K,EAO5KE,4BAP4K,EAQ5K,8EAR4K,EAS5KoB,gBAT4K,EAU5KI,aAV4K,EAW5K,2EAX4K,CAAP;AAWjJ;AAlB+E,OAAzC,CAAnD;AAkBmB,KAlBlC;AAmBA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBsE,aAAzB,EAAwC,CAAC;AAC9DnjB,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCwT,iBAAO,EAAE,CAAC,oEAAD,EAAgB,sEAAhB,EAAiC,sEAAjC,EAAkD,8EAAlD,EAA2E,4DAA3E,CADV;AAECX,iBAAO,EAAE,CACL6J,OADK,EAELN,UAFK,EAGLgB,WAHK,EAILN,yBAJK,EAKL,oEALK,EAML,sEANK,EAOLE,uBAPK,EAQLE,4BARK,EASL,8EATK,EAULoB,gBAVK,EAWLI,aAXK,EAYL,2EAZK,CAFV;AAgBC9L,sBAAY,EAAE,CACV8J,OADU,EAEVN,UAFU,EAGVgB,WAHU,EAIVN,yBAJU,EAKVE,uBALU,EAMVE,4BANU,EAOVoB,gBAPU,EAQVI,aARU;AAhBf,SAAD;AAFwD,OAAD,CAAxC,EA6BrB,IA7BqB,EA6Bf,IA7Be;AA6BP,KA7BR;AA+Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACtnDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;AAKA;;;;;;AAOA,QAAM3f,GAAG,GAAG,CAAC,iBAAD,CAAZ;;AACA,aAASmkB,oBAAT,GAAgC,CAAG;;AACnC,QAAI,KAAJ,EAAW,CAGV,C,CACD;;AACA;;;;;QAGMC,kB;AACF;;;AAGA,gCAAY7jB,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAM8jB,wBAAwB,GAAG,0EAAWD,kBAAX,EAA+B,SAA/B,CAAjC;AACA;;;;;;;;AAMA,QAAME,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,EAAgD;AAAEC,gBAAU,EAAE,MAAd;AAAsB9Q,aAAO,EAAE+Q;AAA/B,KAAhD,CAAlC;AACA;;;;;;AAKA,aAASC,sBAAT,GAAkC,CAAG;;AACrC,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;AAIA,aAASD,iCAAT,GAA6C;AACzC;AACA,UAAM3iB,SAAS,GAAG,6DAAO,wDAAP,CAAlB;AACA;;;AACA,UAAM6iB,SAAS,GAAG7iB,SAAS,GAAGA,SAAS,CAAC8iB,QAAb,GAAwB,IAAnD;;AACA,aAAO;AACH;AACA;AACAC,mBAAW;AAAG;;;AAGd;AAAA,iBAAMF,SAAS,GAAIA,SAAS,CAACG,QAAV,GAAqBH,SAAS,CAACI,MAAnC,GAA6C,EAA5D;AAAA;AANG,OAAP;AAQH;AACD;;;;;;AAIA,QAAIC,aAAa,GAAG,CAApB;AACA;;;;QAGMC,c;;;;;AACF;;;;;;AAMA,8BAAYzkB,WAAZ,EAAyBgB,OAAzB,EAAkC0jB,cAAlC;AACA;;;;AAIAN,cALA,EAKU;AAAA;;AAAA;;AACN,sCAAMpkB,WAAN;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAKgB,OAAL,GAAeA,OAAf;AACA,gBAAK0jB,cAAL,GAAsBA,cAAtB;AACA;;;;AAGA,gBAAKC,gBAAL,GAAwB,KAAxB;AACA,gBAAK5f,MAAL,GAAc,CAAd;AACA,gBAAK6f,YAAL,GAAoB,CAApB;AACA;;;;;;AAKA,gBAAKC,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,gBAAKC,yBAAL,GAAiC,kDAAaC,KAA9C;AACA;;;;;;;;AAOA,gBAAKC,IAAL,GAAY,aAAZ;AACA;;;;AAGA,gBAAKR,aAAL,8BAAyCA,aAAa,EAAtD,EAhCM,CAiCN;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,YAAMS,IAAI,GAAGb,QAAQ,GAAGA,QAAQ,CAACC,WAAT,GAAuB/J,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAH,GAA0C,EAA/D;AACA,gBAAK4K,mBAAL,kBAAmCD,IAAnC,cAA2C,QAAKT,aAAhD;AACA,gBAAKG,gBAAL,GAAwBD,cAAc,KAAK,gBAA3C;AA1CM;AA2CT;AACD;;;;;;;;;AAsBA;;;;4CAIoB;AAChB;AACA,cAAMS,KAAK,GAAG,KAAKtgB,KAAL,GAAa,GAA3B;AACA,iBAAO;AAAEugB,qBAAS,mBAAYD,KAAZ;AAAX,WAAP;AACH;AACD;;;;;;;;2CAKmB;AACf,cAAI,KAAKH,IAAL,KAAc,QAAlB,EAA4B;AACxB;AACA,gBAAMG,KAAK,GAAG,KAAKE,WAAL,GAAmB,GAAjC;AACA,mBAAO;AAAED,uBAAS,mBAAYD,KAAZ;AAAX,aAAP;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;0CAGkB;AAAA;;AACd;AACA;AACA,eAAKnkB,OAAL,CAAaskB,iBAAb;AAAiC;;;AAGjC,sBAAM;AACF;AACA,gBAAMpiB,OAAO,GAAG,OAAI,CAACqiB,gBAAL,CAAsB7iB,aAAtC;AACA,mBAAI,CAACoiB,yBAAL;AACM;AAAkB,mEAAU5hB,OAAV,EAAmB,eAAnB,CAApB,CACKsB,IADL,CACU;AAAS;;;;AAInB,sBAACghB,CAAD;AAAA,qBAAOA,CAAC,CAAC1Z,MAAF,KAAa5I,OAApB;AAAA,aAJU,CADV,EAMKuB,SANL;AAMgB;;;AAGhB,wBAAM;AACF,kBAAI,OAAI,CAACugB,IAAL,KAAc,aAAd,IAA+B,OAAI,CAACA,IAAL,KAAc,QAAjD,EAA2D;AACvD,uBAAI,CAAChkB,OAAL,CAAa0D,GAAb;AAAkB;;;AAGlB;AAAA,yBAAM,OAAI,CAACmgB,YAAL,CAAkBjhB,IAAlB,CAAuB;AAAEiB,yBAAK,EAAE,OAAI,CAACA;AAAd,mBAAvB,CAAN;AAAA,iBAHA;AAIH;AACJ,aAhBD,CADJ;AAkBH,WAxBD;AAyBH;AACD;;;;;;sCAGc;AACV,eAAKigB,yBAAL,CAA+B7W,WAA/B;AACH;;;4BA7EW;AAAE,iBAAO,KAAKlJ,MAAZ;AAAqB;AACnC;;;;;0BAIU0gB,C,EAAG;AACT,eAAK1gB,MAAL,GAAc2gB,KAAK,CAAC,mFAAqBD,CAArB,KAA2B,CAA5B,CAAnB;AACH;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKb,YAAZ;AAA2B;AAC/C;;;;;0BAIgBa,C,EAAG;AAAE,eAAKb,YAAL,GAAoBc,KAAK,CAACD,CAAC,IAAI,CAAN,CAAzB;AAAoC;;;;MA7EhC3B,wB;;AA2I7BW,kBAAc,CAACtkB,IAAf,GAAsB,SAASwlB,sBAAT,CAAgCtlB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIokB,cAAV,EAA0B,gEAAyB,wDAAzB,CAA1B,EAAuE,gEAAyB,oDAAzB,CAAvE,EAAgH,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAhH,EAAoK,gEAAyBV,yBAAzB,EAAoD,CAApD,CAApK,CAAP;AAAqO,KAAhS;;AACAU,kBAAc,CAAChV,IAAf,GAAsB,gEAAyB;AAAElP,UAAI,EAAEkkB,cAAR;AAAwBjkB,eAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2D+f,eAAS,EAAE,SAASqF,oBAAT,CAA8BtgB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAClK,oEAAmB7F,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAI6F,EAAE,GAAG,CAAT,EAAY;AACV,cAAII,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqDH,GAAG,CAACggB,gBAAJ,GAAuB7f,EAAE,CAACE,KAA/E;AACH;AAAE,OALwC;AAKtCnF,eAAS,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,eAAxB,EAAyC,GAAzC,EAA8C,eAA9C,EAA+D,KAA/D,EAAsE,CAAtE,EAAyE,kBAAzE,CAL2B;AAKmEsF,cAAQ,EAAE,CAL7E;AAKgFC,kBAAY,EAAE,SAAS6f,2BAAT,CAAqCvgB,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjM,oEAAmB,eAAnB,EAAoCC,GAAG,CAACyf,IAAJ,KAAa,eAAb,IAAgCzf,GAAG,CAACyf,IAAJ,KAAa,OAA7C,GAAuD,IAAvD,GAA8Dzf,GAAG,CAACV,KAAtG,EAA6G,MAA7G,EAAqHU,GAAG,CAACyf,IAAzH;;AACA,oEAAmB,yBAAnB,EAA8Czf,GAAG,CAACof,gBAAlD;AACH;AAAE,OARwC;AAQtChe,YAAM,EAAE;AAAEC,aAAK,EAAE,OAAT;AAAkBoe,YAAI,EAAE,MAAxB;AAAgCngB,aAAK,EAAE,OAAvC;AAAgDwgB,mBAAW,EAAE;AAA7D,OAR8B;AAQgDxe,aAAO,EAAE;AAAEge,oBAAY,EAAE;AAAhB,OARzD;AAQ2F/d,cAAQ,EAAE,CAAC,gBAAD,CARrG;AAQyHC,cAAQ,EAAE,CAAC,wEAAD,CARnI;AAQwKyJ,WAAK,EAAE,CAR/K;AAQkLC,UAAI,EAAE,CARxL;AAQ2LC,YAAM,EAAE,CAAC,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,EAA4B,GAA5B,EAAiC,WAAjC,EAA8C,OAA9C,EAAuD,CAAvD,EAA0D,6BAA1D,EAAyF,0BAAzF,CAAD,EAAuH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,OAArB,EAA8B,GAA9B,EAAmC,QAAnC,EAA6C,GAA7C,EAAkD,cAAlD,EAAkE,gBAAlE,EAAoF,CAApF,EAAuF,IAAvF,CAAvH,EAAqN,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,CAArN,EAAuP,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,EAA4B,MAA5B,CAAvP,EAA4R,CAAC,CAAD,EAAI,yBAAJ,EAA+B,0BAA/B,EAA2D,CAA3D,EAA8D,SAA9D,CAA5R,EAAsW,CAAC,CAAD,EAAI,0BAAJ,EAAgC,uBAAhC,EAAyD,0BAAzD,EAAqF,CAArF,EAAwF,SAAxF,CAAtW,EAA0c,CAAC,iBAAD,EAAoB,EAApB,CAA1c,EAAme,CAAC,CAAD,EAAI,4BAAJ,EAAkC,uBAAlC,EAA2D,0BAA3D,CAAne,CARnM;AAQ+vBC,cAAQ,EAAE,SAASmV,uBAAT,CAAiCxgB,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACx2B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB;;AACA,uEAAsB,CAAtB,EAAyB,SAAzB,EAAoC,CAApC;;AACA,kEAAiB,CAAjB,EAAoB,QAApB,EAA8B,CAA9B;;AACA;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B,EAA8B,CAA9B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,IAAlB,EAAwBC,GAAG,CAACif,aAA5B;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,MAAnB,EAA2Bjf,GAAG,CAAC2f,mBAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6B3f,GAAG,CAACwgB,gBAAJ,EAA7B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BxgB,GAAG,CAACygB,iBAAJ,EAA7B;AACH;AAAE,OA/BwC;AA+BtCtH,gBAAU,EAAE,CAAC,uDAAD,CA/B0B;AA+BR7N,YAAM,EAAE,CAAC,k7JAAD,CA/BA;AA+Bs7JC,mBAAa,EAAE,CA/Br8J;AA+Bw8JC,qBAAe,EAAE;AA/Bz9J,KAAzB,CAAtB;AAgCA;;AACA0T,kBAAc,CAACzd,cAAf,GAAgC;AAAA,aAAM,CAClC;AAAEzG,YAAI,EAAE;AAAR,OADkC,EAElC;AAAEA,YAAI,EAAE;AAAR,OAFkC,EAGlC;AAAEA,YAAI,EAAE2G,MAAR;AAAgBD,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAHkC,EAIlC;AAAEH,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACqjB,yBAAD;AAAtB,SAArB;AAA/B,OAJkC,CAAN;AAAA,KAAhC;;AAMAU,kBAAc,CAACtd,cAAf,GAAgC;AAC5BtC,WAAK,EAAE,CAAC;AAAEtE,YAAI,EAAE;AAAR,OAAD,CADqB;AAE5B8kB,iBAAW,EAAE,CAAC;AAAE9kB,YAAI,EAAE;AAAR,OAAD,CAFe;AAG5BglB,sBAAgB,EAAE,CAAC;AAAEhlB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,iBAAD;AAAzB,OAAD,CAHU;AAI5BmkB,kBAAY,EAAE,CAAC;AAAEtkB,YAAI,EAAE;AAAR,OAAD,CAJc;AAK5BykB,UAAI,EAAE,CAAC;AAAEzkB,YAAI,EAAE;AAAR,OAAD;AALsB,KAAhC;AAOA;;AAAc,KAAC,YAAY;AAAE,sEAAyBkkB,cAAzB,EAAyC,CAAC;AAC/DlkB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,kBADX;AAECmG,kBAAQ,EAAE,gBAFX;AAGClG,cAAI,EAAE;AACF,oBAAQ,aADN;AAEF,6BAAiB,GAFf;AAGF,6BAAiB,KAHf;AAIF,oCAAwB,+DAJtB;AAKF,2BAAe,MALb;AAMF,qBAAS,kBANP;AAOF,+CAAmC;AAPjC,WAHP;AAYC+F,gBAAM,EAAE,CAAC,OAAD,CAZT;AAaCgK,kBAAQ,EAAE,w2BAbX;AAcCI,yBAAe,EAAE,sEAAwBI,MAd1C;AAeCL,uBAAa,EAAE,gEAAkBI,IAflC;AAgBCL,gBAAM,EAAE,CAAC,k7JAAD;AAhBT,SAAD;AAFyD,OAAD,CAAzC,EAoBrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAuD;AAAEA,cAAI,EAAE2G,MAAR;AAAgBD,oBAAU,EAAE,CAAC;AACjG1G,gBAAI,EAAE;AAD2F,WAAD,EAEjG;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAFiG;AAA5B,SAAvD,EAKX;AAAEH,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAClC1G,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACqjB,yBAAD;AAFP,WAFkC;AAA/B,SALW,CAAP;AAUF,OA9BS,EA8BP;AAAEc,oBAAY,EAAE,CAAC;AAC3BtkB,cAAI,EAAE;AADqB,SAAD,CAAhB;AAEVykB,YAAI,EAAE,CAAC;AACPzkB,cAAI,EAAE;AADC,SAAD,CAFI;AAIVsE,aAAK,EAAE,CAAC;AACRtE,cAAI,EAAE;AADE,SAAD,CAJG;AAMV8kB,mBAAW,EAAE,CAAC;AACd9kB,cAAI,EAAE;AADQ,SAAD,CANH;AAQVglB,wBAAgB,EAAE,CAAC;AACnBhlB,cAAI,EAAE,uDADa;AAEnBG,cAAI,EAAE,CAAC,iBAAD;AAFa,SAAD;AARR,OA9BO;AAyCb,KAzCF;;AA0Cd,QAAI,KAAJ,EAAW,CA6DV;AACD;;;;;;;;;AAOA,aAASglB,KAAT,CAAeD,CAAf,EAAsC;AAAA,UAApBpZ,GAAoB,uEAAd,CAAc;AAAA,UAAX8K,GAAW,uEAAL,GAAK;AAClC,aAAO/K,IAAI,CAAC+K,GAAL,CAAS9K,GAAT,EAAcD,IAAI,CAACC,GAAL,CAAS8K,GAAT,EAAcsO,CAAd,CAAd,CAAP;AACH;AAED;;;;;;;QAKMQ,oB;;;;AAENA,wBAAoB,CAACjT,IAArB,GAA4B,+DAAwB;AAAEzS,UAAI,EAAE0lB;AAAR,KAAxB,CAA5B;AACAA,wBAAoB,CAAChT,IAArB,GAA4B,+DAAwB;AAAEC,aAAO,EAAE,SAASgT,4BAAT,CAAsC7lB,CAAtC,EAAyC;AAAE,eAAO,KAAKA,CAAC,IAAI4lB,oBAAV,GAAP;AAA2C,OAAjG;AAAmG/R,aAAO,EAAE,CAAC,CAAC,4DAAD,EAAe,sEAAf,CAAD,EACxJ,sEADwJ;AAA5G,KAAxB,CAA5B;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B4S,oBAA1B,EAAgD;AAAE3S,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACmR,cAAD,CAAP;AAA0B,SAAxD;AAA0DvQ,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAAe,sEAAf,CAAP;AAAyC,SAA1H;AAA4HX,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACkR,cAAD,EACpQ,sEADoQ,CAAP;AAC1O;AADuF,OAAhD,CAAnD;AACkB,KADjC;AAEA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBwB,oBAAzB,EAA+C,CAAC;AACrE1lB,YAAI,EAAE,sDAD+D;AAErEG,YAAI,EAAE,CAAC;AACCwT,iBAAO,EAAE,CAAC,4DAAD,EAAe,sEAAf,CADV;AAECX,iBAAO,EAAE,CAACkR,cAAD,EAAiB,sEAAjB,CAFV;AAGCnR,sBAAY,EAAE,CAACmR,cAAD;AAHf,SAAD;AAF+D,OAAD,CAA/C,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACraA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AASA,QAAMhlB,GAAG,GAAG,CAAC,iBAAD,EAAoB,EAApB,CAAZ;;AACA,aAAS0mB,4BAAT,CAAsC7gB,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,YAAM8gB,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,iEAAkB,sBAAlB,EAA0C,SAASC,yEAAT,GAAqF;AAAE,sEAAqBD,GAArB;;AAA2B,cAAME,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACC,0BAAP,GAAoC,IAA3C;AAAkD,SAArP,EAAuP,qBAAvP,EAA8Q,SAASC,wEAAT,GAAoF;AAAE,sEAAqBJ,GAArB;;AAA2B,cAAMK,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACF,0BAAP,GAAoC,KAA3C;AAAmD,SAAzd;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;AACH;;AAAC,UAAIjhB,EAAE,GAAG,CAAT,EAAY;AACV,YAAMiX,MAAM,GAAG,6DAAf;;AACA,iEAAkB,eAAlB,EAAmCA,MAAM,CAACmK,kBAAP,EAAnC,EAAgE,gBAAhE,EAAkFnK,MAAM,CAACmK,kBAAP,EAAlF,EAA+G,gBAA/G,EAAiInK,MAAM,CAACoK,uBAAP,EAAjI;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,YAAlB,EAAgCpK,MAAM,CAACoK,uBAAP,EAAhC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkCpK,MAAM,CAACoK,uBAAP,EAAlC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,eAAlB,EAAmCpK,MAAM,CAACoK,uBAAP,EAAnC;AACH;AAAE;;AACH,QAAMxS,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASyS,+BAAT,CAAyCvX,EAAzC,EAA6C;AACzC,aAAO0H,KAAK,0DAAmD1H,EAAnD,QAAZ;AACH;AACD;;;;;;AAIA,aAASwX,wCAAT,GAAoD;AAChD,aAAO9P,KAAK,oFAAZ;AACH;AACD;;;;;;AAIA,aAAS+P,2BAAT,GAAuC;AACnC,aAAO/P,KAAK,oDAAZ;AACH;AACD;;;;;;;AAKA,aAASgQ,4BAAT,CAAsChP,SAAtC,EAAiD;AAC7C,aAAOhB,KAAK,WAAIgB,SAAJ,uDAAZ;AACH;AAED;;;;;;AAKA;;;;;;AAIA,aAASiP,WAAT,GAAuB,CAAG;;AAC1B,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;;AAIA,aAASC,IAAT,GAAgB,CAAG;;AACnB,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGMC,W;;;AAEN;;;AACA,QAAMC,iBAAiB,GAAG,gFAAiB,6EAAcD,WAAd,CAAjB,CAA1B;AACA;;;;;QAGME,O;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV,uCAASrK,SAAT;AACA;;;;AAGA,gBAAKsK,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA;;;;AAGA,gBAAKtK,aAAL,GAAqB,IAAI,4CAAJ,EAArB;AACA;;;;;AAIA,gBAAK3F,KAAL,GAAa,KAAb;AACA,gBAAKc,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,gBAAKoP,UAAL,GAAkB,IAAI,0DAAJ,EAAlB;AAnBU;AAoBb;AACD;;;;;;;;;AA0BA;;;;;;iCAMSC,Q,EAAU;AACf,cAAI,CAACA,QAAQ,CAACnY,EAAd,EAAkB;AACd,kBAAMyX,2BAA2B,EAAjC;AACH;;AACD,cAAI,KAAKO,SAAL,CAAepV,GAAf,CAAmBuV,QAAQ,CAACnY,EAA5B,CAAJ,EAAqC;AACjC,kBAAMuX,+BAA+B,CAACY,QAAQ,CAACnY,EAAV,CAArC;AACH;;AACD,eAAKgY,SAAL,CAAeI,GAAf,CAAmBD,QAAQ,CAACnY,EAA5B,EAAgCmY,QAAhC;AACH;AACD;;;;;;;;;mCAMWA,Q,EAAU;AACjB,eAAKH,SAAL,WAAsBG,QAAQ,CAACnY,EAA/B;AACH;AACD;;;;;;;;6BAKKmY,Q,EAAU;AACX,cAAI,KAAKE,MAAL,IAAeF,QAAQ,CAACnY,EAA5B,EAAgC;AAC5B,iBAAKqY,MAAL,GAAcF,QAAQ,CAACnY,EAAvB;AACA,iBAAK0I,SAAL,GAAiByP,QAAQ,CAACnQ,KAAT,GAAiBmQ,QAAQ,CAACnQ,KAA1B,GAAkC,KAAKA,KAAxD;AACH,WAHD,MAIK;AACD,iBAAKU,SAAL,GAAiB,KAAK4P,oBAAL,CAA0BH,QAA1B,CAAjB;AACH;;AACD,eAAKD,UAAL,CAAgBjkB,IAAhB,CAAqB;AAAEokB,kBAAM,EAAE,KAAKA,MAAf;AAAuB3P,qBAAS,EAAE,KAAKA;AAAvC,WAArB;AACH;AACD;;;;;;;;6CAKqByP,Q,EAAU;AAC3B,cAAI,CAACA,QAAL,EAAe;AACX,mBAAO,EAAP;AACH,WAH0B,CAI3B;;AACA;;;AACA,cAAMI,YAAY,GAAGJ,QAAQ,CAACI,YAAT,IAAyB,IAAzB,GAAgCJ,QAAQ,CAACI,YAAzC,GAAwD,KAAKA,YAAlF;AACA;;AACA,cAAIC,kBAAkB,GAAGC,qBAAqB,CAACN,QAAQ,CAACnQ,KAAT,IAAkB,KAAKA,KAAxB,EAA+BuQ,YAA/B,CAA9C,CAR2B,CAS3B;;AACA;;AACA,cAAIG,kBAAkB,GAAGF,kBAAkB,CAAClZ,OAAnB,CAA2B,KAAKoJ,SAAhC,IAA6C,CAAtE;;AACA,cAAIgQ,kBAAkB,IAAIF,kBAAkB,CAAClc,MAA7C,EAAqD;AACjDoc,8BAAkB,GAAG,CAArB;AACH;;AACD,iBAAOF,kBAAkB,CAACE,kBAAD,CAAzB;AACH;AACD;;;;;;mCAGW;AACP,eAAKC,gBAAL;AACH;AACD;;;;;;sCAGc;AACV,eAAKhL,aAAL,CAAmBpZ,IAAnB;AACH;AACD;;;;;;sCAGc;AACV,eAAKoZ,aAAL,CAAmBlS,QAAnB;AACH;;;4BApGe;AAAE,iBAAO,KAAKqN,UAAZ;AAAyB;AAC3C;;;;;0BAIcJ,S,EAAW;AACrB,cAAI,qEAAeA,SAAf,IAA4BA,SAAS,KAAK,KAA1C,IAAmDA,SAAS,KAAK,MAArE,EAA6E;AACzE,kBAAMgP,4BAA4B,CAAChP,SAAD,CAAlC;AACH;;AACD,eAAKI,UAAL,GAAkBJ,SAAlB;AACH;AACD;;;;;;;;4BAKmB;AAAE,iBAAO,KAAKkQ,aAAZ;AAA4B;AACjD;;;;;0BAIiBxC,C,EAAG;AAAE,eAAKwC,aAAL,GAAqB,oFAAsBxC,CAAtB,CAArB;AAAgD;;;;MA/CpD0B,iB;;AAgItBC,WAAO,CAACjnB,IAAR,GAAe,SAAS+nB,eAAT,CAAyB7nB,CAAzB,EAA4B;AAAE,aAAO8nB,oBAAoB,CAAC9nB,CAAC,IAAI+mB,OAAN,CAA3B;AAA4C,KAAzF;;AACAA,WAAO,CAAC9mB,IAAR,GAAe,gEAAyB;AAAEC,UAAI,EAAE6mB,OAAR;AAAiB5mB,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAD,CAA5B;AAAmDC,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAA9D;AAA+EkG,YAAM,EAAE;AAAE5C,gBAAQ,EAAE,CAAC,iBAAD,EAAoB,UAApB,CAAZ;AAA6CsT,aAAK,EAAE,CAAC,cAAD,EAAiB,OAAjB,CAApD;AAA+EU,iBAAS,EAAE,CAAC,kBAAD,EAAqB,WAArB,CAA1F;AAA6H6P,oBAAY,EAAE,CAAC,qBAAD,EAAwB,cAAxB,CAA3I;AAAoLF,cAAM,EAAE,CAAC,eAAD,EAAkB,QAAlB;AAA5L,OAAvF;AAAkT7gB,aAAO,EAAE;AAAE0gB,kBAAU,EAAE;AAAd,OAA3T;AAA4VzgB,cAAQ,EAAE,CAAC,SAAD,CAAtW;AAAmXC,cAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA7X,KAAzB,CAAf;AACAqgB,WAAO,CAACjgB,cAAR,GAAyB;AACrBugB,YAAM,EAAE,CAAC;AAAEnnB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,eAAD;AAArB,OAAD,CADa;AAErB2W,WAAK,EAAE,CAAC;AAAE9W,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,cAAD;AAArB,OAAD,CAFc;AAGrBqX,eAAS,EAAE,CAAC;AAAExX,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kBAAD;AAArB,OAAD,CAHU;AAIrBknB,kBAAY,EAAE,CAAC;AAAErnB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,qBAAD;AAArB,OAAD,CAJO;AAKrB6mB,gBAAU,EAAE,CAAC;AAAEhnB,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,eAAD;AAAtB,OAAD;AALS,KAAzB;;AAOA,QAAMynB,oBAAoB,GAAG,oEAA6Bf,OAA7B,CAA7B;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,OAAzB,EAAkC,CAAC;AACxD7mB,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,WADX;AAECmG,kBAAQ,EAAE,SAFX;AAGClG,cAAI,EAAE;AAAE,qBAAS;AAAX,WAHP;AAIC+F,gBAAM,EAAE,CAAC,2BAAD;AAJT,SAAD;AAFkD,OAAD,CAAlC,EAQrB,IARqB,EAQf;AAAE0Q,aAAK,EAAE,CAAC;AACZ9W,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,cAAD;AAFM,SAAD,CAAT;AAGF6mB,kBAAU,EAAE,CAAC;AACbhnB,cAAI,EAAE,oDADO;AAEbG,cAAI,EAAE,CAAC,eAAD;AAFO,SAAD,CAHV;AAMFqX,iBAAS,EAAE,CAAC;AACZxX,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,kBAAD;AAFM,SAAD,CANT;AASFknB,oBAAY,EAAE,CAAC;AACfrnB,cAAI,EAAE,mDADS;AAEfG,cAAI,EAAE,CAAC,qBAAD;AAFS,SAAD,CATZ;AAYFgnB,cAAM,EAAE,CAAC;AACTnnB,cAAI,EAAE,mDADG;AAETG,cAAI,EAAE,CAAC,eAAD;AAFG,SAAD;AAZN,OARe;AAuBb,KAvBF;;AAwBd,QAAI,KAAJ,EAAW,CAyCV;AACD;;;;;;;;AAMA,aAASonB,qBAAT,CAA+BzQ,KAA/B,EAAsCuQ,YAAtC,EAAoD;AAChD;AACA,UAAIQ,SAAS,GAAG,CAAC,KAAD,EAAQ,MAAR,CAAhB;;AACA,UAAI/Q,KAAK,IAAI,MAAb,EAAqB;AACjB+Q,iBAAS,CAACC,OAAV;AACH;;AACD,UAAI,CAACT,YAAL,EAAmB;AACfQ,iBAAS,CAACE,IAAV,CAAe,EAAf;AACH;;AACD,aAAOF,SAAP;AACH;AAED;;;;;;AAKA;;;AACA,QAAMG,yBAAyB,GAAG,0EAAmBC,QAAnB,GAA8B,GAA9B,GAC9B,uEAAgBC,cADpB;AAEA;;;;;;AAKA,QAAMC,iBAAiB,GAAG;AACtB;;;AAGAC,eAAS,EAAE,oEAAQ,WAAR,EAAqB,CAC5B,kEAAM,iBAAN,EAAyB,kEAAM;AAAEvD,iBAAS,EAAE;AAAb,OAAN,CAAzB,CAD4B,EAE5B;AACA,wEAAM,mBAAN,EAA2B,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAA3B,CAH4B,EAI5B,uEAAW,4BAAX,EAAyC,oEAAQmD,yBAAR,CAAzC,CAJ4B,CAArB,CAJW;;AAUtB;;;AAGAK,iBAAW,EAAE,oEAAQ,aAAR,EAAuB,CAChC,kEAAM,iBAAN,EAAyB,kEAAM;AAAExD,iBAAS,EAAE;AAAb,OAAN,CAAzB,CADgC,EAEhC,kEAAM,mBAAN,EAA2B,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAA3B,CAFgC,EAGhC,uEAAW,4BAAX,EAAyC,oEAAQmD,yBAAR,CAAzC,CAHgC,CAAvB,CAbS;;AAkBtB;;;AAGAM,kBAAY,EAAE,oEAAQ,cAAR,EAAwB,CAClC,kEAAM,iBAAN,EAAyB,kEAAM;AAAEzD,iBAAS,EAAE;AAAb,OAAN,CAAzB,CADkC,EAElC,kEAAM,mBAAN,EAA2B,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAA3B,CAFkC,EAGlC,uEAAW,4BAAX,EAAyC,oEAAQmD,yBAAR,CAAzC,CAHkC,CAAxB,CArBQ;;AA0BtB;;;AAGAO,kBAAY,EAAE,oEAAQ,cAAR,EAAwB,CAClC,kEAAM,uCAAN,EAA+C,kEAAM;AAAEC,eAAO,EAAE;AAAX,OAAN,CAA/C,CADkC,EAElC,kEAAM,iCAAN,EAAyC,kEAAM;AAAEA,eAAO,EAAE;AAAX,OAAN,CAAzC,CAFkC,EAGlC,kEAAM,2EAAN,EAAmF,kEAAM;AAAEA,eAAO,EAAE;AAAX,OAAN,CAAnF,CAHkC,EAIlC;AACA,6EAAW,wDAAX,EAAqE,oEAAQ,KAAR,CAArE,CALkC,EAMlC,uEAAW,SAAX,EAAsB,oEAAQR,yBAAR,CAAtB,CANkC,CAAxB,CA7BQ;;AAqCtB;;;;;;;AAOAS,mBAAa,EAAE,oEAAQ,eAAR,EAAyB,CACpC;AACA,6EAAW,wCAAX,EAAqD,oEAAQT,yBAAR,EAAmC,sEAAU,CAC9F,kEAAM;AAAEnD,iBAAS,EAAE;AAAb,OAAN,CAD8F,EAE9F,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAF8F,CAAV,CAAnC,CAArD,CAFoC,EAMpC;AACA,6EAAW,wCAAX,EAAqD,oEAAQmD,yBAAR,EAAmC,sEAAU,CAC9F,kEAAM;AAAEnD,iBAAS,EAAE;AAAb,OAAN,CAD8F,EAE9F,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAF8F,CAAV,CAAnC,CAArD,CAPoC,EAWpC;AACA,6EAAW,sCAAX,EAAmD,oEAAQmD,yBAAR,EAAmC,sEAAU,CAC5F,kEAAM;AAAEnD,iBAAS,EAAE;AAAb,OAAN,CAD4F,EAE5F,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAF4F,CAAV,CAAnC,CAAnD,CAZoC,EAgBpC;AACA,6EAAW,sCAAX,EAAmD,oEAAQmD,yBAAR,EAAmC,sEAAU,CAC5F,kEAAM;AAAEnD,iBAAS,EAAE;AAAb,OAAN,CAD4F,EAE5F,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAF4F,CAAV,CAAnC,CAAnD,CAjBoC,EAqBpC,kEAAM,wEAAN,EAAgF,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAAhF,CArBoC,EAsBpC,kEAAM,oCAAN,EAA4C,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAA5C,CAtBoC,EAuBpC,kEAAM,iCAAN,EAAyC,kEAAM;AAAEA,iBAAS,EAAE;AAAb,OAAN,CAAzC,CAvBoC,CAAzB,CA5CO;;AAqEtB;;;AAGA6D,mBAAa,EAAE,oEAAQ,eAAR,EAAyB,CACpC,uEAAW,SAAX,EAAsB,CAClB,kEAAM,IAAN,EAAY,0EAAZ,EAA4B;AAAEC,gBAAQ,EAAE;AAAZ,OAA5B,CADkB,CAAtB,CADoC,CAAzB;AAxEO,KAA1B;AA+EA;;;;;;AAKA;;;;;QAIMC,iB,GACF,6BAAc;AAAA;;AACV;;;;AAIA,WAAKlf,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;;;AAGA,WAAKmf,eAAL;AAAwB;;;;AAIxB,gBAAC/Z,EAAD,EAAQ;AACJ,4CAA6BA,EAA7B;AACH,OAND;AAOH,K;;AAEL8Z,qBAAiB,CAAChpB,IAAlB,GAAyB,SAASkpB,yBAAT,CAAmChpB,CAAnC,EAAsC;AAAE,aAAO,KAAKA,CAAC,IAAI8oB,iBAAV,GAAP;AAAwC,KAAzG;AACA;;;AAAmBA,qBAAiB,CAACG,KAAlB,GAA0B,yEAAmB;AAAEpW,aAAO,EAAE,SAASmW,yBAAT,GAAqC;AAAE,eAAO,IAAIF,iBAAJ,EAAP;AAAiC,OAAnF;AAAqFI,WAAK,EAAEJ,iBAA5F;AAA+GnF,gBAAU,EAAE;AAA3H,KAAnB,CAA1B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBmF,iBAAzB,EAA4C,CAAC;AAClE5oB,YAAI,EAAE,wDAD4D;AAElEG,YAAI,EAAE,CAAC;AAAEsjB,oBAAU,EAAE;AAAd,SAAD;AAF4D,OAAD,CAA5C,EAGrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAHL,EAGO,IAHP;AAGe,KAH9B;;AAId,QAAI,KAAJ,EAAW,CAYV;AACD;;;;;;;AAKA,aAASwF,qCAAT,CAA+CC,UAA/C,EAA2D;AACvD,aAAOA,UAAU,IAAI,IAAIN,iBAAJ,EAArB;AACH;AACD;;;;;;AAIA,QAAMO,6BAA6B,GAAG;AAClC;AACArZ,aAAO,EAAE8Y,iBAFyB;AAGlCQ,UAAI,EAAE,CAAC,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiCR,iBAAjC,CAAD,CAH4B;AAIlCS,gBAAU,EAAEJ;AAJsB,KAAtC;AAOA;;;;;AAKA;;AACA;;;;QAGMK,iB;;;AAEN;;;AACA,QAAMC,uBAAuB,GAAG,6EAAcD,iBAAd,CAAhC;AACA;;;;;;;;AAMA,aAASE,wBAAT,GAAoC,CAAG;;AACvC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,aAASC,sBAAT,GAAkC,CAAG;;AACrC,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;;;;;QASMC,a;;;;;AACF;;;;;;;;AAQA,6BAAYC,KAAZ,EAAmBC,iBAAnB,EAAsCC,KAAtC,EAA6CC,UAA7C,EAAyDC,aAAzD,EAAwEtqB,WAAxE,EAAqF;AAAA;;AAAA;;AACjF;AACA;AACA;AACA;AACA;AACA,gBAAKkqB,KAAL,GAAaA,KAAb;AACA,gBAAKE,KAAL,GAAaA,KAAb;AACA,gBAAKC,UAAL,GAAkBA,UAAlB;AACA,gBAAKC,aAAL,GAAqBA,aAArB;AACA,gBAAKtqB,WAAL,GAAmBA,WAAnB;AACA;;;;;AAIA,gBAAKuqB,kBAAL,GAA0B,KAA1B;AACA;;;;AAGA,gBAAKC,eAAL,GAAuB,EAAvB;AACA;;;;AAGA,gBAAKjE,0BAAL,GAAkC,KAAlC;AACA;;;;AAGA,gBAAKyC,aAAL,GAAqB,OAArB;;AACA,YAAI,CAACoB,KAAL,EAAY;AACR,gBAAMvD,wCAAwC,EAA9C;AACH;;AACD,gBAAK4D,qBAAL,GAA6B,mDAAML,KAAK,CAAC7C,UAAZ,EAAwB6C,KAAK,CAACpN,aAA9B,EAA6CkN,KAAK,CAACjgB,OAAnD,EACxBxF,SADwB;AACb;;;AAGhB,oBAAM;AACF,cAAI,QAAKimB,SAAL,EAAJ,EAAsB;AAClB,oBAAKC,qBAAL;AACH,WAHC,CAIF;;;AACA,cAAI,CAAC,QAAKD,SAAL,EAAD,IAAqB,QAAKE,UAA1B,IAAwC,QAAKA,UAAL,CAAgBC,OAAhB,KAA4B,QAAxE,EAAkF;AAC9E,oBAAKtE,0BAAL,GAAkC,KAAlC;;AACA,oBAAKuE,4BAAL,CAAkC;AAAEC,uBAAS,EAAE,QAAb;AAAuBF,qBAAO,EAAE,QAAKL;AAArC,aAAlC;AACH;;AACDL,2BAAiB,CAACxlB,YAAlB;AACH,SAd4B,CAA7B;;AAeA,YAAI2lB,aAAa,IAAItqB,WAArB,EAAkC;AAC9B;AACA;AACAsqB,uBAAa,CAACU,OAAd,CAAsBhrB,WAAtB,EAAmC,IAAnC,EACKyE,SADL;AACgB;;;;AAIhB,oBAAAwmB,MAAM;AAAA,mBAAI,QAAKC,wBAAL,CAA8B,CAAC,CAACD,MAAhC,CAAJ;AAAA,WALN;AAMH;;AAvDgF;AAwDpF;AACD;;;;;;;;;AAUA;;;mCAGW;AACP,cAAI,CAAC,KAAK5b,EAAN,IAAY,KAAKgb,UAArB,EAAiC;AAC7B,iBAAKhb,EAAL,GAAU,KAAKgb,UAAL,CAAgBc,IAA1B;AACH,WAHM,CAIP;;;AACA,eAAKR,qBAAL;;AACA,eAAKG,4BAAL,CAAkC;AAAED,mBAAO,EAAE,KAAKH,SAAL,KAAmB,QAAnB,GAA8B,KAAKF;AAA9C,WAAlC;;AACA,eAAKJ,KAAL,CAAWgB,QAAX,CAAoB,IAApB;AACH;AACD;;;;;;sCAGc;AACV;AACA,cAAI,KAAKd,aAAL,IAAsB,KAAKtqB,WAA/B,EAA4C;AACxC,iBAAKsqB,aAAL,CAAmBe,cAAnB,CAAkC,KAAKrrB,WAAvC;AACH;;AACD,eAAKoqB,KAAL,CAAWkB,UAAX,CAAsB,IAAtB;;AACA,eAAKb,qBAAL,CAA2Bxc,WAA3B;AACH;AACD;;;;;;;;;iDAMyBsd,O,EAAS;AAC9B;AACA,cAAI,KAAKC,WAAL,MAAsBD,OAA1B,EAAmC;AAC/B;AACH;;AACD,eAAKhB,kBAAL,GAA0BgB,OAA1B;;AACA,cAAI,CAAC,KAAKb,SAAL,EAAL,EAAuB;AACnB,iBAAKC,qBAAL;;AACA,gBAAI,KAAKJ,kBAAT,EAA6B;AACzB,mBAAKO,4BAAL,CAAkC;AAAEC,yBAAS,EAAE,KAAKP,eAAlB;AAAmCK,uBAAO,EAAE;AAA5C,eAAlC;AACH,aAFD,MAGK;AACD,mBAAKC,4BAAL,CAAkC;AAAEC,yBAAS,EAAE,MAAb;AAAqBF,uBAAO,EAAE,KAAKL;AAAnC,eAAlC;AACH;AACJ;AACJ;AACD;;;;;;;;;;qDAO6BiB,S,EAAW;AACpC,eAAKb,UAAL,GAAkBa,SAAlB,CADoC,CAEpC;AACA;;AACA,cAAI,KAAKlF,0BAAT,EAAqC;AACjC,iBAAKqE,UAAL,GAAkB;AAAEC,qBAAO,EAAEY,SAAS,CAACZ;AAArB,aAAlB;AACH;AACJ;AACD;;;;;;;uCAIe;AACX,cAAI,KAAKW,WAAL,EAAJ,EAAwB;AACpB;AACH;;AACD,eAAKpB,KAAL,CAAWsB,IAAX,CAAgB,IAAhB,EAJW,CAKX;;;AACA,cAAI,KAAKd,UAAL,CAAgBC,OAAhB,KAA4B,MAA5B,IAAsC,KAAKD,UAAL,CAAgBC,OAAhB,KAA4B,QAAtE,EAAgF;AAC5E,iBAAKtE,0BAAL,GAAkC,IAAlC;AACH,WARU,CASX;AACA;;AACA;;;AACA,cAAMkF,SAAS,GAAG,KAAKf,SAAL,KACd;AAAEK,qBAAS,EAAE,KAAKP,eAAlB;AAAmCK,mBAAO,EAAE;AAA5C,WADc,GAEd;AAAEE,qBAAS,EAAE,QAAb;AAAuBF,mBAAO,EAAE,KAAKL;AAArC,WAFJ;;AAGA,eAAKM,4BAAL,CAAkCW,SAAlC;;AACA,eAAKlB,kBAAL,GAA0B,KAA1B;AACH;AACD;;;;;;;oCAIY;AACR,iBAAO,KAAKH,KAAL,CAAW1C,MAAX,IAAqB,KAAKrY,EAA1B,KACF,KAAK+a,KAAL,CAAWrS,SAAX,KAAyB,KAAzB,IAAkC,KAAKqS,KAAL,CAAWrS,SAAX,KAAyB,MADzD,CAAP;AAEH;AACD;;;;;;;kDAI0B;AACtB,2BAAU,KAAK2S,SAAL,KAAmB,SAAnB,GAA+B,EAAzC,SAA8C,KAAKF,eAAnD;AACH;AACD;;;;;;;6CAIqB;AACjB;AACA,cAAMO,SAAS,GAAG,KAAKH,UAAL,CAAgBG,SAAlC;AACA,iBAAO,CAACA,SAAS,aAAMA,SAAN,YAAwB,EAAlC,IAAwC,KAAKH,UAAL,CAAgBC,OAA/D;AACH;AACD;;;;;;;;;;;;;;gDAWwB;AACpB,eAAKL,eAAL,GAAuB,KAAKE,SAAL,KACnB,KAAKN,KAAL,CAAWrS,SADQ,GAElB,KAAKV,KAAL,IAAc,KAAK+S,KAAL,CAAW/S,KAF9B;AAGH;AACD;;;;;;sCAGc;AACV,iBAAO,KAAK+S,KAAL,CAAWrmB,QAAX,IAAuB,KAAKA,QAAnC;AACH;AACD;;;;;;;;;;gDAOwB;AACpB,cAAI,CAAC,KAAK2mB,SAAL,EAAL,EAAuB;AACnB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAKN,KAAL,CAAWrS,SAAX,IAAwB,KAAxB,GAAgC,WAAhC,GAA8C,YAArD;AACH;AACD;;;;;;;uCAIe;AACX,iBAAO,CAAC,KAAKyT,WAAL,EAAD,IAAuB,KAAKd,SAAL,EAA9B;AACH;;;4BAzJkB;AAAE,iBAAO,KAAKzC,aAAZ;AAA4B;AACjD;;;;;0BAIiBxC,C,EAAG;AAAE,eAAKwC,aAAL,GAAqB,oFAAsBxC,CAAtB,CAArB;AAAgD;;;;MA3E9CqE,uB;;AAiO5BG,iBAAa,CAAC9pB,IAAd,GAAqB,SAASwrB,qBAAT,CAA+BtrB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI4pB,aAAV,EAAyB,gEAAyBd,iBAAzB,CAAzB,EAAsE,gEAAyB,+DAAzB,CAAtE,EAA0H,gEAAyB/B,OAAzB,EAAkC,CAAlC,CAA1H,EAAgK,gEAAyB,4BAAzB,EAAuD,CAAvD,CAAhK,EAA2N,gEAAyB,8DAAzB,CAA3N,EAA0Q,gEAAyB,wDAAzB,CAA1Q,CAAP;AAAgU,KAAzX;;AACA6C,iBAAa,CAACxa,IAAd,GAAqB,gEAAyB;AAAElP,UAAI,EAAE0pB,aAAR;AAAuBzpB,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAAlC;AAAiEC,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAA5E;AAAoGsF,cAAQ,EAAE,CAA9G;AAAiHC,kBAAY,EAAE,SAAS4lB,0BAAT,CAAoCtmB,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChO,mEAAkB,OAAlB,EAA2B,SAASumB,sCAAT,GAAkD;AAAE,mBAAOtmB,GAAG,CAACa,YAAJ,EAAP;AAA4B,WAA3G,EAA6G,YAA7G,EAA2H,SAAS0lB,2CAAT,GAAuD;AAAE,mBAAOvmB,GAAG,CAAC2lB,wBAAJ,CAA6B,IAA7B,CAAP;AAA4C,WAAhO,EAAkO,YAAlO,EAAgP,SAASa,2CAAT,GAAuD;AAAE,mBAAOxmB,GAAG,CAAC2lB,wBAAJ,CAA6B,KAA7B,CAAP;AAA6C,WAAtV;AACH;;AAAC,YAAI5lB,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,WAAnB,EAAgCC,GAAG,CAACymB,qBAAJ,EAAhC;;AACA,oEAAmB,0BAAnB,EAA+CzmB,GAAG,CAACimB,WAAJ,EAA/C;AACH;AAAE,OALuC;AAKrC7kB,YAAM,EAAE;AAAE5C,gBAAQ,EAAE,UAAZ;AAAwBilB,qBAAa,EAAE,eAAvC;AAAwDpB,oBAAY,EAAE,cAAtE;AAAsFvY,UAAE,EAAE,CAAC,iBAAD,EAAoB,IAApB,CAA1F;AAAqHgI,aAAK,EAAE;AAA5H,OAL6B;AAK0GvQ,cAAQ,EAAE,CAAC,eAAD,CALpH;AAKuIC,cAAQ,EAAE,CAAC,wEAAD,CALjJ;AAKsLklB,WAAK,EAAExsB,GAL7L;AAKkM8Q,wBAAkB,EAAE4D,GALtN;AAK2N3D,WAAK,EAAE,CALlO;AAKqOC,UAAI,EAAE,CAL3O;AAK8OC,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,2BAAJ,CAAD,EAAmC,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,wBAAtB,EAAgD,qBAAhD,CAAnC,EAA2G,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA3G,EAA0J,CAAC,CAAD,EAAI,uBAAJ,CAA1J,EAAwL,CAAC,CAAD,EAAI,sBAAJ,CAAxL,EAAqN,CAAC,CAAD,EAAI,2BAAJ,CAArN,EAAuP,CAAC,CAAD,EAAI,8BAAJ,CAAvP,EAA4R,CAAC,CAAD,EAAI,+BAAJ,CAA5R,EAAkU,CAAC,CAAD,EAAI,gCAAJ,CAAlU,CALtP;AAKgmBC,cAAQ,EAAE,SAASub,sBAAT,CAAgC5mB,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvsB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA;;AACA,mEAAkB,CAAlB,EAAqB6gB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;;AACA;AACH;;AAAC,YAAI7gB,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,wBAAnB,EAA6CC,GAAG,CAACmlB,SAAJ,EAA7C,EAA8D,iCAA9D,EAAiGnlB,GAAG,CAACyjB,aAAJ,IAAqB,QAAtH;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,UAAnB,EAA+BzjB,GAAG,CAACimB,WAAJ,MAAqB,IAApD,EAA0D,YAA1D,EAAwEjmB,GAAG,CAAC2kB,KAAJ,CAAUd,eAAV,CAA0B7jB,GAAG,CAAC8J,EAA9B,CAAxE;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B9J,GAAG,CAAC4mB,YAAJ,EAA1B;AACH;AAAE,OAnBuC;AAmBrCzN,gBAAU,EAAE,CAAC,oDAAD,CAnByB;AAmBV7N,YAAM,EAAE,CAAC,k0DAAD,CAnBE;AAmBo0DC,mBAAa,EAAE,CAnBn1D;AAmBs1Dsb,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAC34D3D,iBAAiB,CAACC,SADy3D,EAE34DD,iBAAiB,CAACE,WAFy3D,EAG34DF,iBAAiB,CAACG,YAHy3D,EAI34DH,iBAAiB,CAACI,YAJy3D,EAK34DJ,iBAAiB,CAACM,aALy3D,EAM34DN,iBAAiB,CAACO,aANy3D;AAAb,OAnB51D;AA0BjClY,qBAAe,EAAE;AA1BgB,KAAzB,CAArB;AA2BA;;AACAkZ,iBAAa,CAACjjB,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEzG,YAAI,EAAE4oB;AAAR,OADiC,EAEjC;AAAE5oB,YAAI,EAAE;AAAR,OAFiC,EAGjC;AAAEA,YAAI,EAAE6mB,OAAR;AAAiBngB,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE;AAAR,SAAD;AAA7B,OAHiC,EAIjC;AAAEA,YAAI,EAAEyE,SAAR;AAAmBiC,kBAAU,EAAE,CAAC;AAAE1G,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,4BAAD;AAAtB,SAAD,EAA0D;AAAEH,cAAI,EAAE;AAAR,SAA1D;AAA/B,OAJiC,EAKjC;AAAEA,YAAI,EAAE;AAAR,OALiC,EAMjC;AAAEA,YAAI,EAAE;AAAR,OANiC,CAAN;AAAA,KAA/B;;AAQA0pB,iBAAa,CAAC9iB,cAAd,GAA+B;AAC3BkI,QAAE,EAAE,CAAC;AAAE9O,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CADuB;AAE3BsoB,mBAAa,EAAE,CAAC;AAAEzoB,YAAI,EAAE;AAAR,OAAD,CAFY;AAG3B8W,WAAK,EAAE,CAAC;AAAE9W,YAAI,EAAE;AAAR,OAAD,CAHoB;AAI3BqnB,kBAAY,EAAE,CAAC;AAAErnB,YAAI,EAAE;AAAR,OAAD;AAJa,KAA/B;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyB0pB,aAAzB,EAAwC,CAAC;AAC9D1pB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCC,kBAAQ,EAAE,mBADX;AAECmG,kBAAQ,EAAE,eAFX;AAGC6J,kBAAQ,EAAE,mwCAHX;AAIC/P,cAAI,EAAE;AACF,qBAAS,iBADP;AAEF,uBAAW,gBAFT;AAGF,4BAAgB,gCAHd;AAIF,4BAAgB,iCAJd;AAKF,gCAAoB,yBALlB;AAMF,gDAAoC;AANlC,WAJP;AAYCkQ,uBAAa,EAAE,gEAAkBI,IAZlC;AAaCH,yBAAe,EAAE,sEAAwBI,MAb1C;AAcCxK,gBAAM,EAAE,CAAC,UAAD,CAdT;AAeC2lB,oBAAU,EAAE,CACR5D,iBAAiB,CAACC,SADV,EAERD,iBAAiB,CAACE,WAFV,EAGRF,iBAAiB,CAACG,YAHV,EAIRH,iBAAiB,CAACI,YAJV,EAKRJ,iBAAiB,CAACM,aALV,EAMRN,iBAAiB,CAACO,aANV,CAfb;AAuBCpY,gBAAM,EAAE,CAAC,k0DAAD;AAvBT,SAAD;AAFwD,OAAD,CAAxC,EA2BrB,YAAY;AAAE,eAAO,CAAC;AAAEtQ,cAAI,EAAE4oB;AAAR,SAAD,EAA8B;AAAE5oB,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE6mB,OAAR;AAAiBngB,oBAAU,EAAE,CAAC;AAC7G1G,gBAAI,EAAE;AADuG,WAAD;AAA7B,SAAlE,EAEX;AAAEA,cAAI,EAAEyE,SAAR;AAAmBiC,oBAAU,EAAE,CAAC;AAClC1G,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAAC,4BAAD;AAF4B,WAAD,EAGlC;AACCH,gBAAI,EAAE;AADP,WAHkC;AAA/B,SAFW,EAOX;AAAEA,cAAI,EAAE;AAAR,SAPW,EAOoB;AAAEA,cAAI,EAAE;AAAR,SAPpB,CAAP;AAO0D,OAlCnD,EAkCqD;AAAEyoB,qBAAa,EAAE,CAAC;AACxFzoB,cAAI,EAAE;AADkF,SAAD,CAAjB;AAEtEqnB,oBAAY,EAAE,CAAC;AACfrnB,cAAI,EAAE;AADS,SAAD,CAFwD;AAItE8O,UAAE,EAAE,CAAC;AACL9O,cAAI,EAAE,mDADD;AAELG,cAAI,EAAE,CAAC,iBAAD;AAFD,SAAD,CAJkE;AAOtE2W,aAAK,EAAE,CAAC;AACR9W,cAAI,EAAE;AADE,SAAD;AAP+D,OAlCrD;AA2Cb,KA3CF;;AA4Cd,QAAI,KAAJ,EAAW,CAwEV;AAED;;;;;;;QAKMgsB,a;;;;AAENA,iBAAa,CAACvZ,IAAd,GAAqB,+DAAwB;AAAEzS,UAAI,EAAEgsB;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACtZ,IAAd,GAAqB,+DAAwB;AAAEC,aAAO,EAAE,SAASsZ,qBAAT,CAA+BnsB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIksB,aAAV,GAAP;AAAoC,OAAnF;AAAqFtb,eAAS,EAAE,CAACyY,6BAAD,CAAhG;AAAiIxV,aAAO,EAAE,CAAC,CAAC,4DAAD,CAAD;AAA1I,KAAxB,CAArB;;AACA,KAAC,YAAY;AAAE,OAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BkZ,aAA1B,EAAyC;AAAEjZ,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC8T,OAAD,EACxI6C,aADwI,CAAP;AAChH,SADkF;AAChF/V,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,CAAP;AAAwB,SADiC;AAC/BX,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC6T,OAAD,EAClG6C,aADkG,CAAP;AAC1E;AAFkF,OAAzC,CAAnD;AAEgB,KAF/B;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBsC,aAAzB,EAAwC,CAAC;AAC9DhsB,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCwT,iBAAO,EAAE,CAAC,4DAAD,CADV;AAECX,iBAAO,EAAE,CAAC6T,OAAD,EAAU6C,aAAV,CAFV;AAGC3W,sBAAY,EAAE,CAAC8T,OAAD,EAAU6C,aAAV,CAHf;AAIChZ,mBAAS,EAAE,CAACyY,6BAAD;AAJZ,SAAD;AAFwD,OAAD,CAAxC,EAQrB,IARqB,EAQf,IARe;AAQP,KARR;AAUd;;;;;;AAKA;;;;;;;;AAQA;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC99BA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM+C,kCAAkC,GAAG,kCAA3C;AACA,QAAMC,qCAAqC,GAAG,iCAA9C;AACA,QAAMC,mCAAmC,GAAG,mCAA5C;AACA,QAAMC,sCAAsC,GAAG,kCAA/C;;AACA,QAAMC,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACC,MAAD,EAAoB;AAC1E,0DAA6CA,MAA7C;AACD,KAFM;;AAGA,QAAMC,yCAAyC,GAAG,SAA5CA,yCAA4C,CAACD,MAAD,EAAoB;AAC3E,2DAA8CA,MAA9C;AACD,KAFM;;AAGA,QAAME,wCAAwC,GAAG,kCAAjD;AACA,QAAMC,uCAAuC,GAAG,wCAAhD;AACA,QAAMC,0CAA0C,GAAG,uCAAnD;AACA,QAAMC,2CAA2C,GAAG,wCAApD;AACA,QAAMC,+CAA+C,GAAG,6CAAxD;AACA,QAAMC,gDAAgD,GAAG,8CAAzD;;AACA,QAAMC,8CAA8C,GAAG,SAAjDA,8CAAiD,CAACR,MAAD,EAAoB;AAChF,iEAAoDA,MAApD;AACD,KAFM;;AAGA,QAAMS,6CAA6C,GAAG,SAAhDA,6CAAgD,CAACT,MAAD,EAAoB;AAC/E,8DAAiDA,MAAjD;AACD,KAFM;;AAGA,QAAMU,8CAA8C,GAAG,SAAjDA,8CAAiD,CAACC,OAAD,EAAqB;AACjF,4DAA+CA,OAA/C;AACD,KAFM;;AAGA,QAAMC,6CAA6C,GAAG,SAAhDA,6CAAgD,CAACD,OAAD,EAAqB;AAChF,2DAA8CA,OAA9C;AACD,KAFM;;AAGA,QAAME,uCAAuC,GAAG,mCAAhD;AACA,QAAMC,gCAAgC,GAAG,sCAAzC;AACA,QAAMC,6BAA6B,GAAG,uCAAtC","file":"default~board-master-board-master-module~interview-master-interview-master-module-es5.js","sourcesContent":["import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype.disabled;\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        /**\n         * Whether the chip list as a whole is disabled.\n         */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the chip is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * Whether the chip list as a whole is disabled.\n     * @type {?}\n     */\n    MatChip.prototype._chipListDisabled;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","export const getApiUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/user_list';\nexport const getApiAddUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/add_user';\nexport const getApiBoardMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/board_list';\nexport const getApiAddBoardMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/add_board';\nexport const getApiDeleteUserMastercollectionEndPoint = (userId: number) => {\n  return `http://0.0.0.0:6543/ui/delete_user/${userId}`;\n};\nexport const getApiDetailsUserMastercollectionEndPoint = (userId: number) => {\n  return `http://0.0.0.0:6543/ui/user_details/${userId}`;\n};\nexport const getApiUpdateUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/edit_user';\nexport const getApiGuestUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/guest_user_list';\nexport const getApiAddGuestUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/add_guest_user';\nexport const getApiEditGuestUserMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/edit_guest_user';\nexport const getApiAddGuestUserMasterDatescollectionEndPoint = 'http://0.0.0.0:6543/ui/add_guest_user_dates';\nexport const getApiEditGuestUserMasterDatescollectionEndPoint = 'http://0.0.0.0:6543/ui/edit_guest_user_dates';\nexport const getApiDetailsGuestUserMastercollectionEndPoint = (userId: number) => {\n  return `http://0.0.0.0:6543/ui/guest_user_details/${userId}`;\n};\nexport const getApiDeleteGuestUserMastercollectionEndPoint = (userId: number) => {\n  return `http://0.0.0.0:6543/ui/add_delete_user/${userId}`;\n};\nexport const getApiDetailsBoardUserMastercollectionEndPoint = (boardId: number) => {\n  return `http://0.0.0.0:6543/ui/board_details/${boardId}`;\n};\nexport const getApiDeleteBoardUserMastercollectionEndPoint = (boardId: number) => {\n  return `http://0.0.0.0:6543/ui/delete_board/${boardId}`;\n};\nexport const getApiEditBoardMastercollectionEndPoint = 'http://0.0.0.0:6543/ui/edit_board';\nexport const getApiAddInterviewMasterEndPoint = 'http://0.0.0.0:6543/ui/add_interview';\nexport const getApiInterviewMasterEndPoint = 'http://0.0.0.0:6543/ui/interview_list';\n"]}